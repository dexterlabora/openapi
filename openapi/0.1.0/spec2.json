{
  "swagger": "2.0",
  "info": {
    "version": "0.1.0",
    "title": "Meraki Dashboard API",
    "description": "The Cisco Meraki Dashboard API is a modern REST API based on the [OpenAPI](https://swagger.io/docs/specification/about/) specification.\n\n## What can the API be used for?\nThe Dashboard API can be used for many purposes. It’s meant to be an open-ended tool. Here are some examples of use cases:\n\n* Add new organizations, admins, networks, devices, VLANs, and more\n* Configure networks at scale\n* Automatically on-board and off-board new employees’ teleworker setups\n* Build your own dashboard for store managers, field techs, or unique use cases\n\n## Enabling the Dashboard API\n1. Begin by logging into [Meraki Dashboard](https://dashboard.meraki.com) and navigating to **Organization > Settings**\n\n2. Locate the section titled **Dashboard API access** and select **Enable Access**, then **Save** your changes\n\n3. After enabling the API, choose your username at the top-right of the Meraki Dashboard and select **my profile**\n\n4. Locate the section titled **Dashboard API access** and select **Generate new API key**\n\n*Note: The API key is associated with a Dashboard administrator account. You can generate, revoke, and regenerate your API key on your profile.*\n\n**Keep your API key safe as it provides authentication to all of your organizations with the API enabled. If your API key is shared, you can regenerate your API key at any time. This will revoke the existing API key.**\n\nCopy and store your API key in a safe place. Dashboard does not store API keys in plaintext for security reasons, so this is the only time you will be able to record it. If you lose or forget your API key, you will have to revoke it and generate a new one.\n\nEvery request must specify an API key via a request header.\n\nThe API key must be specified in the URL header. The API will return a 404 (rather than a 403) in response to a request with a missing or incorrect API key in order to prevent leaking the existence of resources to unauthorized users.\n\n`X-Cisco-Meraki-API-Key: <secret key>`\n\nRead more about API [authorization](../api/#/python/getting-started/authorizing-your-client)\n\n\n## Versioning\nOnce an API version is released, we will make only backwards-compatible changes to it. Backwards-compatible changes include:\n\n* Adding new API resources\n\n* Adding new optional request parameters to existing API methods\n\n* Adding new properties to existing API responses\n\n* Changing the order of properties in existing API responses\n\n## Rate Limit\n* The Dashboard API is limited to **5 calls per second**, per organization.\n* A burst of 5 additional calls are allowed in the first second, so a maximum of 15 calls in the first 2 seconds.\n* The rate limiting technique is based off of the [token bucket model](https://en.wikipedia.org/wiki/Token_bucket).\n* An error with a `429` status code will be returned when the rate limit has been exceeded.\n* Expect to backoff for 1 - 2 seconds if the limit has been exceeded. You may have to wait potentially longer if a large number of requests were made within this timeframe.\n\n\n## Additional Details\nIdentifiers in the API are opaque strings. A `{networkId}`, for example, might be the string “126043”, whereas an `{orderId}` might contain characters, such as “4S1234567”. Client applications must not try to parse them as numbers. Even identifiers that look like numbers might be too long to encode without loss of precision in Javascript, where the only numeric type is IEEE 754 floating point.\n\nVerbs in the API follow the usual REST conventions:\n\n`GET` returns the value of a resource or a list of resources, depending on whether an identifier is specified. For example, a `GET` of `/v0/organizations` returns a list of organizations, whereas a `GET` of `/v0/organizations/{organizationId}` returns a particular organization.\n\n`POST` adds a new resource, as in a `POST` to `/v0/organizations/{organizationId}/admins`, or performs some other non-idempotent change.\n\n`PUT` updates a resource. `PUTs` are idempotent; they update a resource, creating it first if it does not already exist. A `PUT` should specify all the fields of a resource; the API will revert omitted fields to their default value.\n\n`DELETE` removes a resource.\n",
    "x-codegen-settings": {
      "appendContentHeaders": true,
      "brandLabel": "meraki",
      "collectParameters": true,
      "doNotSplitWords": [
        "SSIDs",
        "VLANs"
      ],
      "generateAsyncCode": true,
      "projectName": "meraki",
      "sortResources": true,
      "useEnumPostfix": true,
      "useMethodPrefix": false,
      "useModelPostfix": true,
      "validateRequiredParameters": true
    }
  },
  "host": "api.meraki.com",
  "basePath": "/api/v0",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "meraki_api_key": {
      "type": "apiKey",
      "name": "X-Cisco-Meraki-API-Key",
      "in": "header"
    }
  },
  "security": [
    {
      "meraki_api_key": [

      ]
    }
  ],
  "paths": {
    "/organizations/{organizationId}/actionBatches": {
      "post": {
        "summary": "Create an action batch",
        "description": "Create an action batch",
        "operationId": "createOrganizationActionBatch",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "createOrganizationActionBatch",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "confirmed": {
                  "description": "Set to true for immediate execution. Set to false if the action should be previewed before executing.",
                  "type": "string"
                },
                "synchronous": {
                  "description": "Force the batch to run synchronous. There can be at most 20 actions in synchronous batch.",
                  "type": "string"
                },
                "actions": {
                  "description": "A set of changes to make as part of this action (<a href='https://developer.cisco.com/meraki/api/#/rest/guides/action-batches/'>more details</a>)",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "resource": {
                        "description": "Unique identifier for the resource to be acted on",
                        "type": "string"
                      },
                      "operation": {
                        "description": "The operation to be used. One of \"create\", \"update\", \"destroy\".",
                        "type": "string"
                      },
                      "body": {
                        "description": "The body of the action",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "123",
                "status": "in progress",
                "confirmed": true,
                "synchronous": false,
                "actions": [
                  {
                    "resource": "/devices/QXXX-XXXX-XXXX/switchPorts/3",
                    "operation": "update",
                    "body": {
                      "enabled": false
                    }
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Action batches"
        ]
      },
      "get": {
        "summary": "Return the list of action batches in the organization",
        "description": "Return the list of action batches in the organization",
        "operationId": "getOrganizationActionBatches",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "id": "123",
                  "status": "in progress",
                  "confirmed": true,
                  "synchronous": false,
                  "actions": [
                    {
                      "resource": "/devices/QXXX-XXXX-XXXX/switchPorts/3",
                      "operation": "update",
                      "body": {
                        "enabled": false
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "tags": [
          "Action batches"
        ]
      }
    },
    "/organizations/{organizationId}/actionBatches/{id}": {
      "get": {
        "summary": "Return an action batch",
        "description": "Return an action batch",
        "operationId": "getOrganizationActionBatch",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "123",
                "status": "in progress",
                "confirmed": true,
                "synchronous": false,
                "actions": [
                  {
                    "resource": "/devices/QXXX-XXXX-XXXX/switchPorts/3",
                    "operation": "update",
                    "body": {
                      "enabled": false
                    }
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Action batches"
        ]
      },
      "delete": {
        "summary": "Delete an action batch",
        "description": "Delete an action batch",
        "operationId": "deleteOrganizationActionBatch",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "tags": [
          "Action batches"
        ]
      },
      "put": {
        "summary": "Update an action batch",
        "description": "Update an action batch",
        "operationId": "updateOrganizationActionBatch",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateOrganizationActionBatch",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "confirmed": {
                  "description": "A boolean representing whether or not the batch has been confirmed. This property cannot be unset once it is true.",
                  "type": "string"
                },
                "synchronous": {
                  "description": "Force the batch to run synchronous. There can be at most 20 actions in synchronous batch.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "123",
                "status": "in progress",
                "confirmed": true,
                "synchronous": false,
                "actions": [
                  {
                    "resource": "/devices/QXXX-XXXX-XXXX/switchPorts/3",
                    "operation": "update",
                    "body": {
                      "enabled": false
                    }
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Action batches"
        ]
      }
    },
    "/organizations/{organizationId}/admins": {
      "get": {
        "summary": "List the dashboard administrators in this organization",
        "description": "List the dashboard administrators in this organization",
        "operationId": "getOrganizationAdmins",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "id": "212406",
                  "name": "Miles Meraki",
                  "email": "miles@meraki.com",
                  "orgAccess": "none",
                  "accountStatus": "ok",
                  "twoFactorAuthEnabled": false,
                  "hasApiKey": true,
                  "lastActive": "2019-01-28 14:58:56 -0800",
                  "tags": [
                    {
                      "tag": "west",
                      "access": "read-only"
                    }
                  ],
                  "networks": [
                    {
                      "id": "N_24329156",
                      "access": "full"
                    }
                  ]
                }
              ]
            }
          }
        },
        "tags": [
          "Admins"
        ]
      },
      "post": {
        "summary": "Create a new dashboard administrator",
        "description": "Create a new dashboard administrator",
        "operationId": "createOrganizationAdmin",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "createOrganizationAdmin",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "The email of the dashboard administrator. This attribute can not be updated."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the dashboard administrator"
                },
                "orgAccess": {
                  "type": "string",
                  "description": "The privilege of the dashboard administrator on the organization (full, read-only, none)"
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "tag": {
                        "type": "string",
                        "description": "The name of the tag"
                      },
                      "access": {
                        "type": "string",
                        "description": "The privilege of the dashboard administrator on the tag"
                      }
                    },
                    "required": [
                      "tag",
                      "access"
                    ]
                  },
                  "description": "The list of tags that the dashboard administrator has privileges on"
                },
                "networks": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The network ID"
                      },
                      "access": {
                        "type": "string",
                        "description": "The privilege of the dashboard administrator on the network"
                      }
                    },
                    "required": [
                      "id",
                      "access"
                    ]
                  },
                  "description": "The list of networks that the dashboard administrator has privileges on"
                }
              },
              "example": {
                "name": "Miles Meraki",
                "email": "miles@meraki.com",
                "orgAccess": "none",
                "tags": [
                  {
                    "tag": "west",
                    "access": "read-only"
                  }
                ]
              },
              "required": [
                "email",
                "name",
                "orgAccess"
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "212406",
                "name": "Miles Meraki",
                "email": "miles@meraki.com",
                "orgAccess": "none",
                "accountStatus": "ok",
                "twoFactorAuthEnabled": false,
                "hasApiKey": true,
                "lastActive": "2019-01-28 14:58:56 -0800",
                "tags": [
                  {
                    "tag": "west",
                    "access": "read-only"
                  }
                ],
                "networks": [
                  {
                    "id": "N_24329156",
                    "access": "full"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Admins"
        ]
      }
    },
    "/organizations/{organizationId}/admins/{id}": {
      "put": {
        "summary": "Update an administrator",
        "description": "Update an administrator",
        "operationId": "updateOrganizationAdmin",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateOrganizationAdmin",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "The email of the dashboard administrator. This attribute can not be updated."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the dashboard administrator"
                },
                "orgAccess": {
                  "type": "string",
                  "description": "The privilege of the dashboard administrator on the organization (full, read-only, none)"
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "tag": {
                        "type": "string",
                        "description": "The name of the tag"
                      },
                      "access": {
                        "type": "string",
                        "description": "The privilege of the dashboard administrator on the tag"
                      }
                    },
                    "required": [
                      "tag",
                      "access"
                    ]
                  },
                  "description": "The list of tags that the dashboard administrator has privileges on"
                },
                "networks": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The network ID"
                      },
                      "access": {
                        "type": "string",
                        "description": "The privilege of the dashboard administrator on the network"
                      }
                    },
                    "required": [
                      "id",
                      "access"
                    ]
                  },
                  "description": "The list of networks that the dashboard administrator has privileges on"
                }
              },
              "example": {
                "name": "Miles Meraki",
                "email": "miles@meraki.com",
                "orgAccess": "none",
                "tags": [
                  {
                    "tag": "west",
                    "access": "read-only"
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "212406",
                "name": "Miles Meraki",
                "email": "miles@meraki.com",
                "orgAccess": "none",
                "accountStatus": "ok",
                "twoFactorAuthEnabled": false,
                "hasApiKey": true,
                "lastActive": "2019-01-28 14:58:56 -0800",
                "tags": [
                  {
                    "tag": "west",
                    "access": "read-only"
                  }
                ],
                "networks": [
                  {
                    "id": "N_24329156",
                    "access": "full"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Admins"
        ]
      },
      "delete": {
        "summary": "Revoke all access for a dashboard administrator within this organization",
        "description": "Revoke all access for a dashboard administrator within this organization",
        "operationId": "deleteOrganizationAdmin",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          }
        },
        "tags": [
          "Admins"
        ]
      }
    },
    "/networks/{networkId}/alertSettings": {
      "get": {
        "summary": "Return the alert configuration for this network",
        "description": "Return the alert configuration for this network",
        "operationId": "getNetworkAlertSettings",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "defaultDestinations": {
                  "emails": [
                    "miles@meraki.com"
                  ],
                  "allAdmins": true,
                  "snmp": true
                },
                "alerts": [
                  {
                    "type": "gatewayDown",
                    "enabled": true,
                    "alertDestinations": {
                      "emails": [
                        "miles@meraki.com"
                      ],
                      "allAdmins": false,
                      "snmp": false
                    },
                    "filters": {
                      "timeout": 60
                    }
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Alert settings"
        ]
      },
      "put": {
        "summary": "Update the alert configuration for this network",
        "description": "Update the alert configuration for this network",
        "operationId": "updateNetworkAlertSettings",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkAlertSettings",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "defaultDestinations": {
                  "description": "The network_wide destinations for all alerts on the network.",
                  "type": "object",
                  "properties": {
                    "emails": {
                      "description": "A list of emails that will recieve the alert(s).",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "allAdmins": {
                      "description": "If true, then all network admins will receive emails.",
                      "type": "boolean"
                    },
                    "snmp": {
                      "description": "If true, then an SNMP trap will be sent if there is an SNMP trap server configured for this network.",
                      "type": "boolean"
                    }
                  }
                },
                "alerts": {
                  "description": "Alert-specific configuration for each type. Only alerts that pertain to the network can be updated.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "description": "The type of alert",
                        "type": "string"
                      },
                      "enabled": {
                        "description": "A boolean depicting if the alert is turned on or off",
                        "type": "boolean"
                      },
                      "alertDestinations": {
                        "description": "A hash of destinations for this specific alert. Keys include: emails: A list of emails that will recieve information about the alert, allAdmins: If true, then all network admins will receive emails, and snmp: If true, then an SNMP trap will be sent if there is an SNMP trap server configured for this network.",
                        "type": "object"
                      },
                      "filters": {
                        "description": "A hash of specific configuration data for the alert. Only filters specific to the alert will be updated.",
                        "type": "object"
                      }
                    }
                  }
                }
              },
              "example": {
                "defaultDestinations": {
                  "emails": [
                    "miles@meraki.com"
                  ],
                  "allAdmins": true,
                  "snmp": true
                },
                "alerts": [
                  {
                    "type": "gatewayDown",
                    "enabled": true,
                    "alertDestinations": {
                      "emails": [
                        "miles@meraki.com"
                      ],
                      "allAdmins": false,
                      "snmp": false
                    },
                    "filters": {
                      "timeout": 60
                    }
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "defaultDestinations": {
                  "emails": [
                    "miles@meraki.com"
                  ],
                  "allAdmins": true,
                  "snmp": true
                },
                "alerts": [
                  {
                    "type": "gatewayDown",
                    "enabled": true,
                    "alertDestinations": {
                      "emails": [
                        "miles@meraki.com"
                      ],
                      "allAdmins": false,
                      "snmp": false
                    },
                    "filters": {
                      "timeout": 60
                    }
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Alert settings"
        ]
      }
    },
    "/devices/{serial}/camera/analytics/overview": {
      "get": {
        "summary": "Returns an overview of aggregate analytics data for a timespan",
        "description": "Returns an overview of aggregate analytics data for a timespan",
        "operationId": "getDeviceCameraAnalyticsOverview",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "t0",
            "in": "query",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
          },
          {
            "type": "string",
            "name": "t1",
            "in": "query",
            "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
          },
          {
            "type": "integer",
            "name": "timespan",
            "in": "query",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days. The default is 1 hour."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "startTs": "2018-08-15T18:32:38.123Z",
                  "endTs": "2018-08-15T18:33:38.123Z",
                  "zoneId": 0,
                  "entrances": 254,
                  "averageCount": 5
                }
              ]
            }
          }
        },
        "tags": [
          "MV Sense"
        ]
      }
    },
    "/devices/{serial}/camera/analytics/zones": {
      "get": {
        "summary": "Returns all configured analytic zones for this camera",
        "description": "Returns all configured analytic zones for this camera",
        "operationId": "getDeviceCameraAnalyticsZones",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "id": "0",
                  "type": "occupancy",
                  "label": "Full Frame"
                }
              ]
            }
          }
        },
        "tags": [
          "MV Sense"
        ]
      }
    },
    "/devices/{serial}/camera/analytics/zones/{zoneId}/history": {
      "get": {
        "summary": "Return historical records for analytic zones",
        "description": "Return historical records for analytic zones",
        "operationId": "getDeviceCameraAnalyticsZoneHistory",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "zoneId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "t0",
            "in": "query",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
          },
          {
            "type": "string",
            "name": "t1",
            "in": "query",
            "description": "The end of the timespan for the data. t1 can be a maximum of 14 hours after t0."
          },
          {
            "type": "integer",
            "name": "timespan",
            "in": "query",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 14 hours. The default is 1 hour."
          },
          {
            "type": "integer",
            "name": "resolution",
            "in": "query",
            "description": "The time resolution in seconds for returned data. The valid resolutions are: 60. The default is 60."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "startTs": "2018-08-15T18:32:38.123Z",
                  "endTs": "2018-08-15T18:33:38.123Z",
                  "entrances": 5,
                  "averageCount": 1.5
                }
              ]
            }
          }
        },
        "tags": [
          "MV Sense"
        ]
      }
    },
    "/devices/{serial}/camera/analytics/recent": {
      "get": {
        "summary": "Returns most recent record for analytics zones",
        "description": "Returns most recent record for analytics zones",
        "operationId": "getDeviceCameraAnalyticsRecent",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "startTs": "2018-08-15T18:32:38.123Z",
                  "endTs": "2018-08-15T18:33:38.123Z",
                  "zoneId": 0,
                  "entrances": 10,
                  "averageCount": 2.54
                }
              ]
            }
          }
        },
        "tags": [
          "MV Sense"
        ]
      }
    },
    "/devices/{serial}/camera/analytics/live": {
      "get": {
        "summary": "Returns live state from camera of analytics zones",
        "description": "Returns live state from camera of analytics zones",
        "operationId": "getDeviceCameraAnalyticsLive",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "ts": "2018-08-15T18:32:38.123Z",
                "zones": {
                  "0": {
                    "person": 0
                  }
                }
              }
            }
          }
        },
        "tags": [
          "MV Sense"
        ]
      }
    },
    "/organizations/{organizationId}/apiRequests": {
      "get": {
        "summary": "List the API requests made by an organization",
        "description": "List the API requests made by an organization",
        "operationId": "getOrganizationApiRequests",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "t0",
            "in": "query",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
          },
          {
            "type": "string",
            "name": "t1",
            "in": "query",
            "description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
          },
          {
            "type": "integer",
            "name": "timespan",
            "in": "query",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 31 days."
          },
          {
            "type": "integer",
            "name": "perPage",
            "in": "query",
            "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 50."
          },
          {
            "type": "string",
            "name": "startingAfter",
            "in": "query",
            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          },
          {
            "type": "string",
            "name": "endingBefore",
            "in": "query",
            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          },
          {
            "type": "string",
            "name": "adminId",
            "in": "query",
            "description": "Filter the results by the ID of the admin who made the API requests"
          },
          {
            "type": "string",
            "name": "path",
            "in": "query",
            "description": "Filter the results by the path of the API requests"
          },
          {
            "type": "string",
            "name": "method",
            "in": "query",
            "description": "Filter the results by the method of the API requests (must be 'GET', 'PUT', 'POST' or 'DELETE')"
          },
          {
            "type": "integer",
            "name": "responseCode",
            "in": "query",
            "description": "Filter the results by the response code of the API requests"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "headers": {
              "Link": {
                "type": "string",
                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
              }
            },
            "examples": {
              "application/json": [
                {
                  "adminId": "212406",
                  "method": "GET",
                  "host": "api.meraki.com",
                  "path": "/api/v0/organizations/33349/apiRequests",
                  "queryString": "timespan=604800",
                  "userAgent": "PostmanRuntime/7.6.0",
                  "ts": "2019-02-20T17:31:23Z",
                  "responseCode": 200
                }
              ]
            }
          }
        },
        "tags": [
          "API usage"
        ]
      }
    },
    "/networks/{networkId}/bluetoothClients/{bluetoothClientId}": {
      "get": {
        "summary": "Return a Bluetooth client. Bluetooth clients can be identified by their ID or their MAC.",
        "description": "Return a Bluetooth client. Bluetooth clients can be identified by their ID or their MAC.",
        "operationId": "getNetworkBluetoothClient",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "bluetoothClientId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "includeConnectivityHistory",
            "description": "Include the connectivity history for this client",
            "in": "query",
            "type": "string"
          },
          {
            "name": "connectivityHistoryTimespan",
            "description": "The timespan, in seconds, for the connectivityHistory data. By default 1 day, 86400, will be used.",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "mac": "00:11:22:33:44:55",
                "networkId": "N_24329156"
              }
            }
          }
        },
        "tags": [
          "Bluetooth clients"
        ]
      }
    },
    "/networks/{networkId}/bluetoothClients": {
      "get": {
        "summary": "List the Bluetooth clients seen by APs in this network",
        "description": "List the Bluetooth clients seen by APs in this network",
        "operationId": "getNetworkBluetoothClients",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "integer",
            "name": "perPage",
            "in": "query",
            "description": "The number of entries per page returned. Acceptable range is 5 - 1000. Default is 10."
          },
          {
            "type": "string",
            "name": "startingAfter",
            "in": "query",
            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          },
          {
            "type": "string",
            "name": "endingBefore",
            "in": "query",
            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          },
          {
            "type": "string",
            "name": "timespan",
            "in": "query",
            "description": "The timespan, in seconds, used to look back from now for bluetooth clients"
          },
          {
            "type": "string",
            "name": "includeConnectivityHistory",
            "in": "query",
            "description": "Include the connectivity history for this client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "headers": {
              "Link": {
                "type": "string",
                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
              }
            },
            "examples": {
              "application/json": [
                {
                  "mac": "00:11:22:33:44:55",
                  "networkId": "N_24329156"
                }
              ]
            }
          }
        },
        "tags": [
          "Bluetooth clients"
        ]
      }
    },
    "/networks/{networkId}/bluetoothSettings": {
      "get": {
        "summary": "Return the Bluetooth settings for a network. <a href=\"https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)\">Bluetooth settings</a> must be enabled on the network.",
        "description": "Return the Bluetooth settings for a network. <a href=\"https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)\">Bluetooth settings</a> must be enabled on the network.",
        "operationId": "getNetworkBluetoothSettings",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "scanningEnabled": true,
                "advertisingEnabled": true,
                "uuid": "00000000-0000-0000-000-000000000000",
                "majorMinorAssignmentMode": "Non-unique",
                "major": 1
              }
            }
          }
        },
        "tags": [
          "Networks"
        ]
      },
      "put": {
        "summary": "Update the Bluetooth settings for a network. See the docs page for <a href=\"https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)\">Bluetooth settings</a>.",
        "description": "Update the Bluetooth settings for a network. See the docs page for <a href=\"https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)\">Bluetooth settings</a>.",
        "operationId": "updateNetworkBluetoothSettings",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkBluetoothSettings",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "scanningEnabled": {
                  "type": "boolean",
                  "description": "Whether APs will scan for Bluetooth enabled clients. (true, false)"
                },
                "advertisingEnabled": {
                  "type": "boolean",
                  "description": "Whether APs will advertise beacons. (true, false)"
                },
                "uuid": {
                  "type": "string",
                  "description": "The UUID to be used in the beacon identifier."
                },
                "majorMinorAssignmentMode": {
                  "type": "string",
                  "description": "The way major and minor number should be assigned to nodes in the network. ('Unique', 'Non-unique')"
                },
                "major": {
                  "type": "integer",
                  "description": "The major number to be used in the beacon identifier. Only valid in 'Non-unique' mode."
                },
                "minor": {
                  "type": "integer",
                  "description": "The minor number to be used in the beacon identifier. Only valid in 'Non-unique' mode."
                }
              },
              "example": {
                "scanningEnabled": true,
                "advertisingEnabled": true,
                "uuid": "00000000-0000-0000-000-000000000000",
                "majorMinorAssignmentMode": "Non-unique",
                "major": 1
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "scanningEnabled": true,
                "advertisingEnabled": true,
                "uuid": "00000000-0000-0000-000-000000000000",
                "majorMinorAssignmentMode": "Non-unique",
                "major": 1
              }
            }
          }
        },
        "tags": [
          "Networks"
        ]
      }
    },
    "/organizations/{organizationId}/networks": {
      "get": {
        "summary": "List the networks in an organization",
        "description": "List the networks in an organization",
        "operationId": "getOrganizationNetworks",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "configTemplateId",
            "in": "query",
            "description": "An optional parameter that is the ID of a config template. Will return all networks bound to that template."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "id": "L_123456",
                  "organizationId": 2930418,
                  "name": "Long Island Office",
                  "timeZone": "America/Los_Angeles",
                  "tags": " tag1 tag2 ",
                  "type": "combined",
                  "disableMyMerakiCom": false
                }
              ]
            }
          }
        },
        "tags": [
          "Networks"
        ]
      },
      "post": {
        "summary": "Create a network",
        "description": "Create a network",
        "operationId": "createOrganizationNetwork",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "createOrganizationNetwork",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the new network"
                },
                "type": {
                  "type": "string",
                  "description": "The type of the new network. Valid types are wireless, appliance, switch, systemsManager, camera, or a space-separated list of those for a combined network."
                },
                "tags": {
                  "type": "string",
                  "description": "A space-separated list of tags to be applied to the network"
                },
                "timeZone": {
                  "type": "string",
                  "description": "The timezone of the network. For a list of allowed timezones, please see the 'TZ' column in the table in <a target='_blank' href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this article.</a>"
                },
                "copyFromNetworkId": {
                  "type": "string",
                  "description": "The ID of the network to copy configuration from. Other provided parameters will override the copied configuration, except type which must match this network's type exactly."
                },
                "disableMyMerakiCom": {
                  "type": "boolean",
                  "description": "Disables the local device status pages (<a target='_blank' href='http://my.meraki.com/'>my.meraki.com, </a><a target='_blank' href='http://ap.meraki.com/'>ap.meraki.com, </a><a target='_blank' href='http://switch.meraki.com/'>switch.meraki.com, </a><a target='_blank' href='http://wired.meraki.com/'>wired.meraki.com</a>). Optional (defaults to false)"
                },
                "disableRemoteStatusPage": {
                  "type": "boolean",
                  "description": "Disables access to the device status page (<a target='_blank'>http://[device's LAN IP])</a>. Optional. Can only be set if disableMyMerakiCom is set to false"
                }
              },
              "example": {
                "name": "Long Island Office",
                "timeZone": "America/Los_Angeles",
                "tags": " tag1 tag2 ",
                "disableMyMerakiCom": false,
                "type": "appliance switch camera"
              },
              "required": [
                "name",
                "type"
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "L_123456",
                "organizationId": 2930418,
                "name": "Long Island Office",
                "timeZone": "America/Los_Angeles",
                "tags": " tag1 tag2 ",
                "type": "combined",
                "disableMyMerakiCom": false
              }
            }
          }
        },
        "tags": [
          "Networks"
        ]
      }
    },
    "/networks/{networkId}": {
      "get": {
        "summary": "Return a network",
        "description": "Return a network",
        "operationId": "getNetwork",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "L_123456",
                "organizationId": 2930418,
                "name": "Long Island Office",
                "timeZone": "America/Los_Angeles",
                "tags": " tag1 tag2 ",
                "type": "combined",
                "disableMyMerakiCom": false
              }
            }
          }
        },
        "tags": [
          "Networks"
        ]
      },
      "put": {
        "summary": "Update a network",
        "description": "Update a network",
        "operationId": "updateNetwork",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetwork",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the new network"
                },
                "timeZone": {
                  "type": "string",
                  "description": "The timezone of the network. For a list of allowed timezones, please see the 'TZ' column in the table in <a target='_blank' href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this article.</a>"
                },
                "tags": {
                  "type": "string",
                  "description": "A space-separated list of tags to be applied to the network"
                },
                "disableMyMerakiCom": {
                  "type": "boolean",
                  "description": "Disables the local device status pages (<a target='_blank' href='http://my.meraki.com/'>my.meraki.com, </a><a target='_blank' href='http://ap.meraki.com/'>ap.meraki.com, </a><a target='_blank' href='http://switch.meraki.com/'>switch.meraki.com, </a><a target='_blank' href='http://wired.meraki.com/'>wired.meraki.com</a>). Optional (defaults to false)"
                },
                "disableRemoteStatusPage": {
                  "type": "boolean",
                  "description": "Disables access to the device status page (<a target='_blank'>http://[device's LAN IP])</a>. Optional. Can only be set if disableMyMerakiCom is set to false"
                }
              },
              "example": {
                "name": "Long Island Office",
                "timeZone": "America/Los_Angeles",
                "tags": " tag1 tag2 ",
                "disableMyMerakiCom": false
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "L_123456",
                "organizationId": 2930418,
                "name": "Long Island Office",
                "timeZone": "America/Los_Angeles",
                "tags": " tag1 tag2 ",
                "type": "combined",
                "disableMyMerakiCom": false
              }
            }
          }
        },
        "tags": [
          "Networks"
        ]
      },
      "delete": {
        "summary": "Delete a network",
        "description": "Delete a network",
        "operationId": "deleteNetwork",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          }
        },
        "tags": [
          "Networks"
        ]
      }
    },
    "/networks/{networkId}/bind": {
      "post": {
        "summary": "Bind a network to a template.",
        "description": "Bind a network to a template.",
        "operationId": "bindNetwork",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "bindNetwork",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "configTemplateId": {
                  "type": "string",
                  "description": "The ID of the template to which the network should be bound."
                },
                "autoBind": {
                  "type": "boolean",
                  "description": "Optional boolean indicating whether the network's switches should automatically bind to profiles of the same model. Defaults to false if left unspecified. This option only affects switch networks and switch templates. Auto-bind is not valid unless the switch template has at least one profile and has at most one profile per switch model."
                }
              },
              "example": {
                "configTemplateId": "N_23952905",
                "autoBind": false
              },
              "required": [
                "configTemplateId"
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            }
          }
        },
        "tags": [
          "Networks"
        ]
      }
    },
    "/networks/{networkId}/unbind": {
      "post": {
        "summary": "Unbind a network from a template.",
        "description": "Unbind a network from a template.",
        "operationId": "unbindNetwork",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            }
          }
        },
        "tags": [
          "Networks"
        ]
      }
    },
    "/networks/{networkId}/traffic": {
      "get": {
        "summary": "The traffic analysis data for this network.\n<a href=\"https://documentation.meraki.com/MR/Monitoring_and_Reporting/Hostname_Visibility\">Traffic Analysis with Hostname Visibility</a> must be enabled on the network.\n",
        "description": "The traffic analysis data for this network.\n<a href=\"https://documentation.meraki.com/MR/Monitoring_and_Reporting/Hostname_Visibility\">Traffic Analysis with Hostname Visibility</a> must be enabled on the network.\n",
        "operationId": "getNetworkTraffic",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "timespan",
            "in": "query",
            "required": true,
            "description": "The timespan for the data. Must be an integer representing a duration in seconds between two hours and one month. (Mandatory.)"
          },
          {
            "type": "string",
            "name": "deviceType",
            "in": "query",
            "description": "Filter the data by device type: combined (default), wireless, switch, appliance. When using combined, for each rule the data will come from the device type with the most usage."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "application": "Gmail",
                  "destination": null,
                  "protocol": "TCP",
                  "port": 443,
                  "sent": 138.0,
                  "recv": 61.0,
                  "numClients": 7,
                  "activeTime": 77000,
                  "flows": 300
                }
              ]
            }
          }
        },
        "tags": [
          "Networks"
        ]
      }
    },
    "/networks/{networkId}/accessPolicies": {
      "get": {
        "summary": "List the access policies for this network. Only valid for MS networks.",
        "description": "List the access policies for this network. Only valid for MS networks.",
        "operationId": "getNetworkAccessPolicies",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "number": 1,
                  "name": "My access policy",
                  "accessType": "8021.x",
                  "guestVlan": 3700,
                  "radiusServers": [
                    {
                      "ip": "1.2.3.4",
                      "port": 1337
                    },
                    {
                      "ip": "2.3.4.5",
                      "port": 1337
                    }
                  ]
                }
              ]
            }
          }
        },
        "tags": [
          "Networks"
        ]
      }
    },
    "/networks/{networkId}/airMarshal": {
      "get": {
        "summary": "List Air Marshal scan results from a network",
        "description": "List Air Marshal scan results from a network",
        "operationId": "getNetworkAirMarshal",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "t0",
            "in": "query",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
          },
          {
            "type": "integer",
            "name": "timespan",
            "in": "query",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 7 days."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "ssid": "linksys",
                  "bssids": [
                    {
                      "bssid": "00:11:22:33:44:55",
                      "contained": false,
                      "detectedBy": [
                        {
                          "device": "Q234-ABCD-5678",
                          "rssi": 17
                        }
                      ]
                    }
                  ],
                  "channels": [
                    36,
                    40
                  ],
                  "firstSeen": 1518365681,
                  "lastSeen": 1526087474,
                  "wiredMacs": [
                    "00:11:22:33:44:55"
                  ],
                  "wiredVlans": [
                    0,
                    108
                  ],
                  "wiredLastSeen": 1526087474
                }
              ]
            }
          }
        },
        "tags": [
          "Networks"
        ]
      }
    },
    "/organizations/{organizationId}/networks/combine": {
      "post": {
        "summary": "Combine multiple networks into a single network",
        "description": "Combine multiple networks into a single network",
        "operationId": "combineOrganizationNetworks",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "combineOrganizationNetworks",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the combined network"
                },
                "networkIds": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "A list of the network IDs that will be combined. If an ID of a combined network is included in this list, the other networks in the list will be grouped into that network"
                }
              },
              "example": {
                "name": "Long Island Office",
                "networkIds": [
                  "N_1234",
                  "N_5678"
                ]
              },
              "required": [
                "name",
                "networkIds"
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "resultingNetwork": {
                  "id": "L_123456",
                  "organizationId": 2930418,
                  "name": "Long Island Office",
                  "timeZone": "America/Los_Angeles",
                  "tags": " tag1 tag2 ",
                  "type": "combined",
                  "disableMyMerakiCom": false
                }
              }
            }
          }
        },
        "tags": [
          "Networks"
        ]
      }
    },
    "/networks/{networkId}/split": {
      "post": {
        "summary": "Split a combined network into individual networks for each type of device",
        "description": "Split a combined network into individual networks for each type of device",
        "operationId": "splitNetwork",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "resultingNetworks": [
                  {
                    "id": "N_1234",
                    "organizationId": 2930418,
                    "name": "Long Island Office - switch",
                    "timeZone": "America/Los_Angeles",
                    "tags": " tag1 tag2 ",
                    "type": "switch",
                    "disableMyMerakiCom": false
                  },
                  {
                    "id": "N_5678",
                    "organizationId": 2930418,
                    "name": "Long Island Office - wireless",
                    "timeZone": "America/Los_Angeles",
                    "tags": " tag1 tag2 ",
                    "type": "wireless",
                    "disableMyMerakiCom": false
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Networks"
        ]
      }
    },
    "/networks/{networkId}/siteToSiteVpn": {
      "get": {
        "summary": "Return the site-to-site VPN settings of a network. Only valid for MX networks.",
        "description": "Return the site-to-site VPN settings of a network. Only valid for MX networks.",
        "operationId": "getNetworkSiteToSiteVpn",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "mode": "spoke",
                "hubs": [
                  {
                    "hubId": "N_4901849",
                    "useDefaultRoute": true
                  },
                  {
                    "hubId": "N_1892489",
                    "useDefaultRoute": false
                  }
                ],
                "subnets": [
                  {
                    "localSubnet": "192.168.1.0/24",
                    "useVpn": true
                  },
                  {
                    "localSubnet": "192.168.128.0/24",
                    "useVpn": true
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Networks"
        ]
      },
      "put": {
        "summary": "Update the site-to-site VPN settings of a network. Only valid for MX networks in NAT mode.",
        "description": "Update the site-to-site VPN settings of a network. Only valid for MX networks in NAT mode.",
        "operationId": "updateNetworkSiteToSiteVpn",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkSiteToSiteVpn",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "mode": {
                  "type": "string",
                  "description": "The site-to-site VPN mode: hub, spoke, or none"
                },
                "hubs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "hubId": {
                        "type": "string",
                        "description": "The network ID of the hub."
                      },
                      "useDefaultRoute": {
                        "type": "boolean",
                        "description": "Only valid in 'spoke' mode. Indicates whether default route traffic should be sent to this hub."
                      }
                    },
                    "required": [
                      "hubId"
                    ]
                  },
                  "description": "The list of VPN hubs, in order of preference. In spoke mode, at least 1 hub is required."
                },
                "subnets": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "localSubnet": {
                        "type": "string",
                        "description": "The CIDR notation subnet used within the VPN"
                      },
                      "useVpn": {
                        "type": "boolean",
                        "description": "Indicates the presence of the subnet in the VPN"
                      }
                    },
                    "required": [
                      "localSubnet"
                    ]
                  },
                  "description": "The list of subnets and their VPN presence."
                }
              },
              "example": {
                "mode": "spoke",
                "hubs": [
                  {
                    "hubId": "N_4901849",
                    "useDefaultRoute": true
                  },
                  {
                    "hubId": "N_1892489",
                    "useDefaultRoute": false
                  }
                ],
                "subnets": [
                  {
                    "localSubnet": "192.168.1.0/24",
                    "useVpn": true
                  },
                  {
                    "localSubnet": "192.168.128.0/24",
                    "useVpn": true
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "mode": "spoke",
                "hubs": [
                  {
                    "hubId": "N_4901849",
                    "useDefaultRoute": true
                  },
                  {
                    "hubId": "N_1892489",
                    "useDefaultRoute": false
                  }
                ],
                "subnets": [
                  {
                    "localSubnet": "192.168.1.0/24",
                    "useVpn": true
                  },
                  {
                    "localSubnet": "192.168.128.0/24",
                    "useVpn": true
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Networks"
        ]
      }
    },
    "/networks/{networkId}/cameras/{serial}/videoLink": {
      "get": {
        "summary": "Returns video link for the specified camera. If a timestamp supplied, it links to that time.",
        "description": "Returns video link for the specified camera. If a timestamp supplied, it links to that time.",
        "operationId": "getNetworkCameraVideoLink",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "timestamp",
            "description": "The video link will start at this timestamp. The timestamp is in UNIX Epoch time (milliseconds).",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "url": "https://nxx.meraki.com/office-cameras/n/bs0a1k/manage/nodes/new_list/29048243992402?timestamp=1535732570077"
              }
            }
          }
        },
        "tags": [
          "Cameras"
        ]
      }
    },
    "/networks/{networkId}/cameras/{serial}/snapshot": {
      "post": {
        "summary": "Generate a snapshot of what the camera sees at the specified time and return a link to that image.",
        "description": "Generate a snapshot of what the camera sees at the specified time and return a link to that image.",
        "operationId": "generateNetworkCameraSnapshot",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "generateNetworkCameraSnapshot",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "timestamp": {
                  "type": "string",
                  "description": "[optional] The snapshot will be taken from this time on the camera. The timestamp is expected to be in ISO 8601 format. If no timestamp is specified, we will assume current time."
                }
              },
              "example": {

              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "url": "https://spn4.meraki.com/stream/jpeg/snapshot/b2d123asdf423qd22d2",
                "expiry": "Access to the image will expire at 2018-12-11T03:12:39Z."
              }
            }
          }
        },
        "tags": [
          "Cameras"
        ]
      }
    },
    "/networks/{networkId}/clients/{clientId}": {
      "get": {
        "summary": "Return the client associated with the given identifier. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
        "description": "Return the client associated with the given identifier. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
        "operationId": "getNetworkClient",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "clientId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "k74272e",
                "description": "Miles's phone",
                "mac": "00:11:22:33:44:55",
                "ip": "1.2.3.4",
                "user": "null",
                "vlan": "255",
                "switchport": null,
                "ip6": "",
                "firstSeen": 1518365681,
                "lastSeen": 1526087474,
                "manufacturer": "Apple",
                "os": "iOS",
                "ssid": "My SSID",
                "wirelessCapabilities": "802.11ac - 2.4 and 5 GHz",
                "smInstalled": true,
                "recentDeviceMac": "00:11:22:33:44:55",
                "clientVpnConnections": [
                  {
                    "remoteIp": "1.2.3.4",
                    "connectedAt": 1522613355,
                    "disconnectedAt": 1522613360
                  }
                ],
                "lldp": [
                  [
                    "System name",
                    "Some system name"
                  ],
                  [
                    "System description",
                    "Some system description"
                  ],
                  [
                    "Port ID",
                    "1"
                  ],
                  [
                    "Chassis ID",
                    "00:18:0a:00:00:00"
                  ],
                  [
                    "Port description",
                    "eth0"
                  ],
                  [
                    "System capabilities",
                    "Two-port MAC Relay"
                  ]
                ],
                "cdp": null
              }
            }
          }
        },
        "tags": [
          "Clients"
        ]
      }
    },
    "/networks/{networkId}/clients/provision": {
      "post": {
        "summary": "Provisions a client with a name and policy. Clients can be provisioned before they associate to the network.",
        "description": "Provisions a client with a name and policy. Clients can be provisioned before they associate to the network.",
        "operationId": "provisionNetworkClients",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "provisionNetworkClients",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "mac": {
                  "description": "The MAC address of the client. Required.",
                  "type": "string"
                },
                "name": {
                  "description": "The display name for the client. Optional. Limited to 255 bytes.",
                  "type": "string"
                },
                "devicePolicy": {
                  "description": "The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required.",
                  "type": "string"
                },
                "groupPolicyId": {
                  "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored.",
                  "type": "string"
                }
              },
              "example": {
                "mac": "00:11:22:33:44:55",
                "name": "Miles's phone",
                "devicePolicy": "Group policy",
                "groupPolicyId": "101"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "mac": "00:11:22:33:44:55",
                "clientId": "k74272e",
                "name": "Miles's phone",
                "devicePolicy": "Group policy",
                "groupPolicyId": "101"
              }
            }
          }
        },
        "tags": [
          "Clients"
        ]
      }
    },
    "/networks/{networkId}/clients/{clientId}/usageHistory": {
      "get": {
        "summary": "Return the client's daily usage history. Usage data is in kilobytes. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
        "description": "Return the client's daily usage history. Usage data is in kilobytes. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
        "operationId": "getNetworkClientUsageHistory",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "clientId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "sent": 500,
                  "received": 680,
                  "ts": 1518365681
                }
              ]
            }
          }
        },
        "tags": [
          "Clients"
        ]
      }
    },
    "/networks/{networkId}/clients/{clientId}/policy": {
      "get": {
        "summary": "Return the policy assigned to a client on the network. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
        "description": "Return the policy assigned to a client on the network. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
        "operationId": "getNetworkClientPolicy",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "clientId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "mac": "00:11:22:33:44:55",
                "type": "Group policy",
                "groupPolicyId": "101"
              }
            }
          }
        },
        "tags": [
          "Clients"
        ]
      },
      "put": {
        "summary": "Update the policy assigned to a client on the network. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
        "description": "Update the policy assigned to a client on the network. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
        "operationId": "updateNetworkClientPolicy",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "clientId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkClientPolicy",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "devicePolicy": {
                  "description": "The group policy (Whitelisted, Blocked, Normal, Group policy)",
                  "type": "string"
                },
                "groupPolicyId": {
                  "description": "[optional] If devicePolicy param is set to 'Group policy' this param is used to specify the group ID.",
                  "type": "string"
                }
              },
              "example": {
                "mac": "00:11:22:33:44:55",
                "type": "Group policy",
                "groupPolicyId": "101"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "mac": "00:11:22:33:44:55",
                "type": "Group policy",
                "groupPolicyId": "101"
              }
            }
          }
        },
        "tags": [
          "Clients"
        ]
      }
    },
    "/networks/{networkId}/clients/{clientId}/splashAuthorizationStatus": {
      "get": {
        "summary": "Return the splash authorization for a client, for each SSID they've associated with through splash. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
        "description": "Return the splash authorization for a client, for each SSID they've associated with through splash. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
        "operationId": "getNetworkClientSplashAuthorizationStatus",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "clientId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "ssids": {
                  "0": {
                    "isAuthorized": true,
                    "authorizedAt": "2017-07-19 16:24:13 UTC",
                    "expiresAt": "2017-07-20 16:24:13 UTC"
                  },
                  "2": {
                    "isAuthorized": false
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Clients"
        ]
      },
      "put": {
        "summary": "Update a client's splash authorization. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
        "description": "Update a client's splash authorization. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
        "operationId": "updateNetworkClientSplashAuthorizationStatus",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "clientId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkClientSplashAuthorizationStatus",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "ssids": {
                  "description": "The target SSIDs. For each SSID where isAuthorized is true, the expiration time will automatically be set according to the SSID's splash frequency.",
                  "type": "object",
                  "properties": {
                    "isAuthorized": {
                      "description": "New authorization status for SSID (true, false).",
                      "type": "string"
                    }
                  }
                }
              },
              "example": {
                "ssids": {
                  "0": {
                    "isAuthorized": true,
                    "authorizedAt": "2017-07-19 16:24:13 UTC",
                    "expiresAt": "2017-07-20 16:24:13 UTC"
                  },
                  "2": {
                    "isAuthorized": false
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "ssids": {
                  "0": {
                    "isAuthorized": true,
                    "authorizedAt": "2017-07-19 16:24:13 UTC",
                    "expiresAt": "2017-07-20 16:24:13 UTC"
                  },
                  "2": {
                    "isAuthorized": false
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Clients"
        ]
      }
    },
    "/networks/{networkId}/clients": {
      "get": {
        "summary": "List the clients that have used this network in the timespan",
        "description": "List the clients that have used this network in the timespan",
        "operationId": "getNetworkClients",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "t0",
            "in": "query",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
          },
          {
            "type": "integer",
            "name": "timespan",
            "in": "query",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
          },
          {
            "type": "integer",
            "name": "perPage",
            "in": "query",
            "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 10."
          },
          {
            "type": "string",
            "name": "startingAfter",
            "in": "query",
            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          },
          {
            "type": "string",
            "name": "endingBefore",
            "in": "query",
            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "headers": {
              "Link": {
                "type": "string",
                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
              }
            },
            "examples": {
              "application/json": {
                "usage": {
                  "sent": 138.0,
                  "recv": 61.0
                },
                "id": "k74272e",
                "description": "Miles's phone",
                "mac": "00:11:22:33:44:55",
                "ip": "1.2.3.4",
                "user": "milesmeraki",
                "vlan": 255,
                "switchport": null,
                "ip6": "",
                "firstSeen": 1518365681,
                "lastSeen": 1526087474,
                "manufacturer": "Apple",
                "os": "iOS"
              }
            }
          }
        },
        "tags": [
          "Clients"
        ]
      }
    },
    "/devices/{serial}/clients": {
      "get": {
        "summary": "List the clients of a device, up to a maximum of a month ago. The usage of each client is returned in kilobytes. If the device is a switch, the switchport is returned; otherwise the switchport field is null.",
        "description": "List the clients of a device, up to a maximum of a month ago. The usage of each client is returned in kilobytes. If the device is a switch, the switchport is returned; otherwise the switchport field is null.",
        "operationId": "getDeviceClients",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "t0",
            "in": "query",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
          },
          {
            "type": "integer",
            "name": "timespan",
            "in": "query",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "usage": {
                  "sent": 138.0,
                  "recv": 61.0
                },
                "id": "k74272e",
                "description": "Miles's phone",
                "mac": "00:11:22:33:44:55",
                "ip": "1.2.3.4",
                "user": "milesmeraki",
                "vlan": 255,
                "switchport": null,
                "mdnsName": "Miles's phone",
                "dhcpHostname": "MilesPhone"
              }
            }
          }
        },
        "tags": [
          "Clients"
        ]
      }
    },
    "/networks/{networkId}/clients/{clientId}/trafficHistory": {
      "get": {
        "summary": "Return the client's network traffic data over time. Usage data is in kilobytes. This endpoint requires detailed traffic analysis to be enabled on the Network-wide > General page. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
        "description": "Return the client's network traffic data over time. Usage data is in kilobytes. This endpoint requires detailed traffic analysis to be enabled on the Network-wide > General page. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
        "operationId": "getNetworkClientTrafficHistory",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "clientId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "integer",
            "name": "perPage",
            "in": "query",
            "description": "The number of entries per page returned. Acceptable range is 3 - 1000."
          },
          {
            "type": "string",
            "name": "startingAfter",
            "in": "query",
            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          },
          {
            "type": "string",
            "name": "endingBefore",
            "in": "query",
            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "headers": {
              "Link": {
                "type": "string",
                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
              }
            },
            "examples": {
              "application/json": [
                {
                  "ts": 1518365681,
                  "application": "Google",
                  "destination": "www.google.com",
                  "protocol": "UDP",
                  "port": 443,
                  "recv": 383,
                  "sent": 56,
                  "numFlows": 5,
                  "activeSeconds": 240
                }
              ]
            }
          }
        },
        "tags": [
          "Clients"
        ]
      }
    },
    "/networks/{networkId}/clients/{clientId}/events": {
      "get": {
        "summary": "Return the events associated with this client. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
        "description": "Return the events associated with this client. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
        "operationId": "getNetworkClientEvents",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "clientId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "integer",
            "name": "perPage",
            "in": "query",
            "description": "The number of entries per page returned. Acceptable range is 3 - 100. Default is 100."
          },
          {
            "type": "string",
            "name": "startingAfter",
            "in": "query",
            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          },
          {
            "type": "string",
            "name": "endingBefore",
            "in": "query",
            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "headers": {
              "Link": {
                "type": "string",
                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
              }
            },
            "examples": {
              "application/json": [
                {
                  "deviceSerial": "Q234-ABCD-5678",
                  "occurredAt": 1518365681,
                  "type": "l3roaming_assoc_start",
                  "details": {
                    "vap": "1",
                    "on_packet": "true"
                  }
                }
              ]
            }
          }
        },
        "tags": [
          "Clients"
        ]
      }
    },
    "/networks/{networkId}/clients/{clientId}/latencyHistory": {
      "get": {
        "summary": "Return the latency history for a client. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP. The latency data is from a sample of 2% of packets and is grouped into 4 traffic categories: background, best effort, video, voice. Within these categories the sampled packet counters are bucketed by latency in milliseconds.",
        "description": "Return the latency history for a client. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP. The latency data is from a sample of 2% of packets and is grouped into 4 traffic categories: background, best effort, video, voice. Within these categories the sampled packet counters are bucketed by latency in milliseconds.",
        "operationId": "getNetworkClientLatencyHistory",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "clientId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "t0",
            "in": "query",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 791 days from today."
          },
          {
            "type": "string",
            "name": "t1",
            "in": "query",
            "description": "The end of the timespan for the data. t1 can be a maximum of 791 days after t0."
          },
          {
            "type": "integer",
            "name": "timespan",
            "in": "query",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 791 days. The default is 1 day."
          },
          {
            "type": "integer",
            "name": "resolution",
            "in": "query",
            "description": "The time resolution in seconds for returned data. The valid resolutions are: 86400. The default is 86400."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "t0": 1550534400,
                  "t1": 1550620800,
                  "latencyBinsByCategory": {
                    "backgroundTraffic": {
                      "0.5": 41750,
                      "1.0": 21552,
                      "2.0": 59940,
                      "4.0": 146622,
                      "8.0": 57354,
                      "16.0": 0,
                      "32.0": 9954,
                      "64.0": 0,
                      "128.0": 0,
                      "256.0": 1896,
                      "512.0": 0,
                      "1024.0": 0,
                      "2048.0": 0
                    },
                    "bestEffortTraffic": {
                      "0.5": 1840899,
                      "1.0": 1644506,
                      "2.0": 629958,
                      "4.0": 449564,
                      "8.0": 2009658,
                      "16.0": 1329568,
                      "32.0": 282168,
                      "64.0": 97573,
                      "128.0": 191977,
                      "256.0": 30560,
                      "512.0": 26032,
                      "1024.0": 4943,
                      "2048.0": 12072
                    },
                    "videoTraffic": {
                      "0.5": 0,
                      "1.0": 0,
                      "2.0": 0,
                      "4.0": 0,
                      "8.0": 0,
                      "16.0": 0,
                      "32.0": 0,
                      "64.0": 0,
                      "128.0": 0,
                      "256.0": 0,
                      "512.0": 0,
                      "1024.0": 0,
                      "2048.0": 0
                    },
                    "voiceTraffic": {
                      "0.5": 716,
                      "1.0": 948,
                      "2.0": 474,
                      "4.0": 78,
                      "8.0": 0,
                      "16.0": 0,
                      "32.0": 0,
                      "64.0": 0,
                      "128.0": 0,
                      "256.0": 0,
                      "512.0": 0,
                      "1024.0": 0,
                      "2048.0": 0
                    }
                  }
                }
              ]
            }
          }
        },
        "tags": [
          "Clients"
        ]
      }
    },
    "/organizations/{organizationId}/configTemplates": {
      "get": {
        "summary": "List the configuration templates for this organization",
        "description": "List the configuration templates for this organization",
        "operationId": "getOrganizationConfigTemplates",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "id": "N_24329156",
                  "name": "My config template"
                }
              ]
            }
          }
        },
        "tags": [
          "Config templates"
        ]
      }
    },
    "/organizations/{organizationId}/configTemplates/{id}": {
      "delete": {
        "summary": "Remove a configuration template",
        "description": "Remove a configuration template",
        "operationId": "deleteOrganizationConfigTemplate",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "tags": [
          "Config templates"
        ]
      }
    },
    "/networks/{networkId}/devices/{serial}/lldp_cdp": {
      "get": {
        "summary": "List LLDP and CDP information for a device",
        "description": "List LLDP and CDP information for a device",
        "operationId": "getNetworkDeviceLldp_cdp",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "timespan",
            "description": "The timespan for which LLDP and CDP information will be fetched. Must be in seconds and less than or equal to a month (2592000 seconds). LLDP and CDP information is sent to the Meraki dashboard every 10 minutes. In instances where this LLDP and CDP information matches an existing entry in the Meraki dashboard, the data is updated once every two hours. Meraki recommends querying LLDP and CDP information at an interval slightly greater than two hours, to ensure that unchanged CDP / LLDP information can be queried consistently.",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "sourceMac": "00:11:22:33:44:55",
                "ports": {
                  "8": {
                    "cdp": {
                      "deviceId": "e0553d8cdf53",
                      "portId": "Port 10",
                      "address": "00:11:22:33:44:55",
                      "sourcePort": "8"
                    }
                  },
                  "12": {
                    "cdp": {
                      "deviceId": "e0553d8cdf53",
                      "portId": "Port 11",
                      "address": "00:11:22:33:44:55",
                      "sourcePort": "12"
                    },
                    "lldp": {
                      "systemName": "Meraki MS350-24X - Phineas",
                      "portId": "11",
                      "managementAddress": "00:11:22:33:44:55",
                      "sourcePort": "12"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Devices"
        ]
      }
    },
    "/organizations/{organizationId}/devices": {
      "get": {
        "summary": "List the devices in an organization",
        "description": "List the devices in an organization",
        "operationId": "getOrganizationDevices",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "integer",
            "name": "perPage",
            "in": "query",
            "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
          },
          {
            "type": "string",
            "name": "startingAfter",
            "in": "query",
            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          },
          {
            "type": "string",
            "name": "endingBefore",
            "in": "query",
            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "headers": {
              "Link": {
                "type": "string",
                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
              }
            },
            "examples": {
              "application/json": {
                "name": "My AP",
                "lat": 37.4180951010362,
                "lng": -122.098531723022,
                "address": "1600 Pennsylvania Ave",
                "notes": "My AP's note",
                "tags": " recently-added ",
                "networkId": "N_24329156",
                "serial": "Q234-ABCD-5678",
                "model": "MR34",
                "mac": "00:11:22:33:44:55",
                "lanIp": "1.2.3.4"
              }
            }
          }
        },
        "tags": [
          "Devices"
        ]
      }
    },
    "/networks/{networkId}/devices": {
      "get": {
        "summary": "List the devices in a network",
        "description": "List the devices in a network",
        "operationId": "getNetworkDevices",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "name": "My AP",
                  "lat": 37.4180951010362,
                  "lng": -122.098531723022,
                  "serial": "Q234-ABCD-5678",
                  "mac": "00:11:22:33:44:55",
                  "model": "MR34",
                  "address": "1600 Pennsylvania Ave",
                  "notes": "My AP's note",
                  "lanIp": "1.2.3.4",
                  "tags": " recently-added ",
                  "networkId": "N_24329156",
                  "beaconIdParams": {
                    "uuid": "00000000-0000-0000-0000-000000000000",
                    "major": 5,
                    "minor": 3
                  }
                }
              ]
            }
          }
        },
        "tags": [
          "Devices"
        ]
      }
    },
    "/networks/{networkId}/devices/{serial}": {
      "get": {
        "summary": "Return a single device",
        "description": "Return a single device",
        "operationId": "getNetworkDevice",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "name": "My AP",
                "lat": 37.4180951010362,
                "lng": -122.098531723022,
                "serial": "Q234-ABCD-5678",
                "mac": "00:11:22:33:44:55",
                "model": "MR34",
                "address": "1600 Pennsylvania Ave",
                "notes": "My AP's note",
                "lanIp": "1.2.3.4",
                "tags": " recently-added ",
                "networkId": "N_24329156",
                "beaconIdParams": {
                  "uuid": "00000000-0000-0000-0000-000000000000",
                  "major": 5,
                  "minor": 3
                }
              }
            }
          }
        },
        "tags": [
          "Devices"
        ]
      },
      "put": {
        "summary": "Update the attributes of a device",
        "description": "Update the attributes of a device",
        "operationId": "updateNetworkDevice",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkDevice",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of a device"
                },
                "tags": {
                  "type": "string",
                  "description": "The tags of a device"
                },
                "lat": {
                  "type": "number",
                  "format": "float",
                  "description": "The latitude of a device"
                },
                "lng": {
                  "type": "number",
                  "format": "float",
                  "description": "The longitude of a device"
                },
                "address": {
                  "type": "string",
                  "description": "The address of a device"
                },
                "notes": {
                  "type": "string",
                  "description": "The notes for the device. String. Limited to 255 characters."
                },
                "moveMapMarker": {
                  "type": "boolean",
                  "description": "Whether or not to set the latitude and longitude of a device based on the new address. Only applies when lat and lng are not specified."
                },
                "switchProfileId": {
                  "type": "string",
                  "description": "The ID of a switch profile to bind to the device (for available switch profiles, see the 'Switch Profiles' endpoint). Use null to unbind the switch device from the current profile. For a device to be bindable to a switch profile, it must (1) be a switch, and (2) belong to a network that is bound to a configuration template."
                }
              },
              "example": {
                "name": "My AP",
                "lat": 37.4180951010362,
                "lng": -122.098531723022,
                "serial": "Q234-ABCD-5678",
                "mac": "00:11:22:33:44:55",
                "tags": " recently-added "
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "name": "My AP",
                "lat": 37.4180951010362,
                "lng": -122.098531723022,
                "serial": "Q234-ABCD-5678",
                "mac": "00:11:22:33:44:55",
                "model": "MR34",
                "address": "1600 Pennsylvania Ave",
                "notes": "My AP's note",
                "lanIp": "1.2.3.4",
                "tags": " recently-added ",
                "networkId": "N_24329156",
                "beaconIdParams": {
                  "uuid": "00000000-0000-0000-0000-000000000000",
                  "major": 5,
                  "minor": 3
                }
              }
            }
          }
        },
        "tags": [
          "Devices"
        ]
      }
    },
    "/networks/{networkId}/devices/{serial}/performance": {
      "get": {
        "summary": "Return the performance score for a single device. Only primary MX devices supported. If no data is available, a 204 error code is returned.",
        "description": "Return the performance score for a single device. Only primary MX devices supported. If no data is available, a 204 error code is returned.",
        "operationId": "getNetworkDevicePerformance",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "perfScore": 10
              }
            }
          }
        },
        "tags": [
          "Devices"
        ]
      }
    },
    "/networks/{networkId}/devices/{serial}/uplink": {
      "get": {
        "summary": "Return the uplink information for a device.",
        "description": "Return the uplink information for a device.",
        "operationId": "getNetworkDeviceUplink",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "interface": "WAN 1",
                  "status": "Active",
                  "ip": "1.2.3.4",
                  "gateway": "1.2.3.5",
                  "publicIp": "123.123.123.1",
                  "dns": "8.8.8.8, 8.8.4.4",
                  "usingStaticIp": false
                }
              ]
            }
          }
        },
        "tags": [
          "Devices"
        ]
      }
    },
    "/networks/{networkId}/devices/claim": {
      "post": {
        "summary": "Claim a device into a network",
        "description": "Claim a device into a network",
        "operationId": "claimNetworkDevices",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "claimNetworkDevices",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "serial": {
                  "type": "string",
                  "description": "The serial of a device"
                }
              },
              "example": {
                "serial": "Q234-ABCD-5678"
              },
              "required": [
                "serial"
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            }
          }
        },
        "tags": [
          "Devices"
        ]
      }
    },
    "/networks/{networkId}/devices/{serial}/remove": {
      "post": {
        "summary": "Remove a single device",
        "description": "Remove a single device",
        "operationId": "removeNetworkDevice",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            }
          }
        },
        "tags": [
          "Devices"
        ]
      }
    },
    "/networks/{networkId}/devices/{serial}/lossAndLatencyHistory": {
      "get": {
        "summary": "Get the uplink loss percentage and latency in milliseconds for a wired network device.",
        "description": "Get the uplink loss percentage and latency in milliseconds for a wired network device.",
        "operationId": "getNetworkDeviceLossAndLatencyHistory",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "t0",
            "in": "query",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
          },
          {
            "type": "string",
            "name": "t1",
            "in": "query",
            "description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
          },
          {
            "type": "integer",
            "name": "timespan",
            "in": "query",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
          },
          {
            "type": "integer",
            "name": "resolution",
            "in": "query",
            "description": "The time resolution in seconds for returned data. The valid resolutions are: 60, 600, 3600, 86400. The default is 60."
          },
          {
            "type": "string",
            "name": "uplink",
            "in": "query",
            "description": "The WAN uplink used to obtain the requested stats. Valid uplinks are wan1, wan2, cellular. The default is wan1."
          },
          {
            "type": "string",
            "name": "ip",
            "in": "query",
            "required": true,
            "description": "The destination IP used to obtain the requested stats. This is required."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "startTime": "2018-10-09T22:18:27Z",
                  "endTime": "2018-10-09T22:19:27Z",
                  "lossPercent": 5,
                  "latencyMs": 324
                },
                {
                  "startTime": "2018-10-09T22:19:27Z",
                  "endTime": "2018-10-09T22:20:27Z",
                  "lossPercent": 1,
                  "latencyMs": 43
                },
                {
                  "startTime": "2018-10-09T22:20:27Z",
                  "endTime": "2018-10-09T22:21:27Z",
                  "lossPercent": 0,
                  "latencyMs": 44
                }
              ]
            }
          }
        },
        "tags": [
          "Devices"
        ]
      }
    },
    "/networks/{networkId}/devices/{serial}/reboot": {
      "post": {
        "summary": "Reboot a device",
        "description": "Reboot a device",
        "operationId": "rebootNetworkDevice",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          }
        },
        "tags": [
          "Devices"
        ]
      }
    },
    "/networks/{networkId}/devices/{serial}/blinkLeds": {
      "post": {
        "summary": "Blink the LEDs on a device",
        "description": "Blink the LEDs on a device",
        "operationId": "blinkNetworkDeviceLeds",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "blinkNetworkDeviceLeds",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "duration": {
                  "type": "integer",
                  "description": "The duration in seconds. Must be between 5 and 120. Default is 20 seconds"
                },
                "period": {
                  "type": "integer",
                  "description": "The period in milliseconds. Must be between 100 and 1000. Default is 160 milliseconds"
                },
                "duty": {
                  "type": "integer",
                  "description": "The duty cycle as the percent active. Must be between 10 and 90. Default is 50."
                }
              },
              "example": {
                "duration": 20,
                "period": 160,
                "duty": 50
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "sentToDevice": true
              }
            }
          }
        },
        "tags": [
          "Devices"
        ]
      }
    },
    "/networks/{networkId}/cellularFirewallRules": {
      "get": {
        "summary": "Return the cellular firewall rules for an MX network",
        "description": "Return the cellular firewall rules for an MX network",
        "operationId": "getNetworkCellularFirewallRules",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "comment": "Allow TCP traffic to subnet with HTTP servers.",
                  "policy": "allow",
                  "protocol": "tcp",
                  "destPort": 443,
                  "destCidr": "192.168.1.0/24",
                  "srcPort": "Any",
                  "srcCidr": "Any",
                  "syslogEnabled": false
                }
              ]
            }
          }
        },
        "tags": [
          "MX cellular firewall"
        ]
      },
      "put": {
        "summary": "Update the cellular firewall rules of an MX network",
        "description": "Update the cellular firewall rules of an MX network",
        "operationId": "updateNetworkCellularFirewallRules",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkCellularFirewallRules",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "rules": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "comment": {
                        "type": "string",
                        "description": "Description of the rule (optional)"
                      },
                      "policy": {
                        "type": "string",
                        "description": "'allow' or 'deny' traffic specified by this rule"
                      },
                      "protocol": {
                        "type": "string",
                        "description": "The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')"
                      },
                      "srcPort": {
                        "type": "string",
                        "description": "Comma-separated list of source port(s) (integer in the range 1-65535), or 'any'"
                      },
                      "srcCidr": {
                        "type": "string",
                        "description": "Comma-separated list of source IP address(es) (in IP or CIDR notation), or 'any' (note: FQDN not supported for source addresses)"
                      },
                      "destPort": {
                        "type": "string",
                        "description": "Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'"
                      },
                      "destCidr": {
                        "type": "string",
                        "description": "Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'"
                      },
                      "syslogEnabled": {
                        "type": "boolean",
                        "description": "Log this rule to syslog (true or false, boolean value) - only applicable if a syslog has been configured (optional)"
                      }
                    },
                    "required": [
                      "policy",
                      "protocol",
                      "srcCidr",
                      "destCidr"
                    ]
                  },
                  "description": "An ordered array of the firewall rules (not including the default rule)"
                }
              },
              "example": {
                "rules": [
                  {
                    "comment": "Allow TCP traffic to subnet with HTTP servers.",
                    "policy": "allow",
                    "protocol": "tcp",
                    "destPort": 443,
                    "destCidr": "192.168.1.0/24",
                    "srcPort": "Any",
                    "srcCidr": "Any",
                    "syslogEnabled": false
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "comment": "Allow TCP traffic to subnet with HTTP servers.",
                  "policy": "allow",
                  "protocol": "tcp",
                  "destPort": 443,
                  "destCidr": "192.168.1.0/24",
                  "srcPort": "Any",
                  "srcCidr": "Any",
                  "syslogEnabled": false
                }
              ]
            }
          }
        },
        "tags": [
          "MX cellular firewall"
        ]
      }
    },
    "/networks/{networkId}/l3FirewallRules": {
      "get": {
        "summary": "Return the L3 firewall rules for an MX network",
        "description": "Return the L3 firewall rules for an MX network",
        "operationId": "getNetworkL3FirewallRules",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "comment": "Allow TCP traffic to subnet with HTTP servers.",
                  "policy": "allow",
                  "protocol": "tcp",
                  "destPort": 443,
                  "destCidr": "192.168.1.0/24",
                  "srcPort": "Any",
                  "srcCidr": "Any",
                  "syslogEnabled": false
                }
              ]
            }
          }
        },
        "tags": [
          "MX L3 firewall"
        ]
      },
      "put": {
        "summary": "Update the L3 firewall rules of an MX network",
        "description": "Update the L3 firewall rules of an MX network",
        "operationId": "updateNetworkL3FirewallRules",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkL3FirewallRules",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "rules": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "comment": {
                        "type": "string",
                        "description": "Description of the rule (optional)"
                      },
                      "policy": {
                        "type": "string",
                        "description": "'allow' or 'deny' traffic specified by this rule"
                      },
                      "protocol": {
                        "type": "string",
                        "description": "The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')"
                      },
                      "srcPort": {
                        "type": "string",
                        "description": "Comma-separated list of source port(s) (integer in the range 1-65535), or 'any'"
                      },
                      "srcCidr": {
                        "type": "string",
                        "description": "Comma-separated list of source IP address(es) (in IP or CIDR notation), or 'any' (note: FQDN not supported for source addresses)"
                      },
                      "destPort": {
                        "type": "string",
                        "description": "Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'"
                      },
                      "destCidr": {
                        "type": "string",
                        "description": "Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'"
                      },
                      "syslogEnabled": {
                        "type": "boolean",
                        "description": "Log this rule to syslog (true or false, boolean value) - only applicable if a syslog has been configured (optional)"
                      }
                    },
                    "required": [
                      "policy",
                      "protocol",
                      "srcCidr",
                      "destCidr"
                    ]
                  },
                  "description": "An ordered array of the firewall rules (not including the default rule)"
                },
                "syslogDefaultRule": {
                  "type": "boolean",
                  "description": "Log the special default rule (boolean value - enable only if you've configured a syslog server) (optional)"
                }
              },
              "example": {
                "rules": [
                  {
                    "comment": "Allow TCP traffic to subnet with HTTP servers.",
                    "policy": "allow",
                    "protocol": "tcp",
                    "destPort": 443,
                    "destCidr": "192.168.1.0/24",
                    "srcPort": "Any",
                    "srcCidr": "Any",
                    "syslogEnabled": false
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "comment": "Allow TCP traffic to subnet with HTTP servers.",
                  "policy": "allow",
                  "protocol": "tcp",
                  "destPort": 443,
                  "destCidr": "192.168.1.0/24",
                  "srcPort": "Any",
                  "srcCidr": "Any",
                  "syslogEnabled": false
                }
              ]
            }
          }
        },
        "tags": [
          "MX L3 firewall"
        ]
      }
    },
    "/networks/{networkId}/l7FirewallRules/applicationCategories": {
      "get": {
        "summary": "Return the L7 firewall application categories and their associated applications for an MX network",
        "description": "Return the L7 firewall application categories and their associated applications for an MX network",
        "operationId": "getNetworkL7FirewallRulesApplicationCategories",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "applicationCategories": [
                    {
                      "id": "meraki:layer7/category/24",
                      "name": "Advertising",
                      "applications": [
                        {
                          "id": "meraki:layer7/application/5",
                          "name": "Advertising.com"
                        },
                        {
                          "id": "meraki:layer7/application/0",
                          "name": "AppNexus"
                        },
                        {
                          "id": "meraki:layer7/application/1",
                          "name": "Brightroll"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          }
        },
        "tags": [
          "MX L7 application categories"
        ]
      }
    },
    "/networks/{networkId}/l7FirewallRules": {
      "get": {
        "summary": "List the MX L7 firewall rules for an MX network",
        "description": "List the MX L7 firewall rules for an MX network",
        "operationId": "getNetworkL7FirewallRules",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "rules": [
                  {
                    "policy": "deny",
                    "type": "application",
                    "value": {
                      "id": "meraki:layer7/application/67",
                      "name": "Xbox LIVE"
                    }
                  },
                  {
                    "policy": "deny",
                    "type": "applicationCategory",
                    "value": {
                      "id": "meraki:layer7/category/2",
                      "name": "Blogging"
                    }
                  },
                  {
                    "policy": "deny",
                    "type": "host",
                    "value": "google.com"
                  },
                  {
                    "policy": "deny",
                    "type": "port",
                    "value": "23"
                  },
                  {
                    "policy": "deny",
                    "type": "ipRange",
                    "value": "10.11.12.00/24"
                  },
                  {
                    "policy": "deny",
                    "type": "ipRange",
                    "value": "10.11.12.00/24:5555"
                  },
                  {
                    "policy": "deny",
                    "type": "blacklistedCountries",
                    "value": [
                      "AX",
                      "CA"
                    ]
                  },
                  {
                    "policy": "deny",
                    "type": "whitelistedCountries",
                    "value": [
                      "US"
                    ]
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "MX L7 firewall"
        ]
      },
      "put": {
        "summary": "Update the MX L7 firewall rules for an MX network",
        "description": "Update the MX L7 firewall rules for an MX network",
        "operationId": "updateNetworkL7FirewallRules",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkL7FirewallRules",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "rules": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "policy": {
                        "type": "string",
                        "enum": [
                          "deny"
                        ],
                        "description": "'Deny' traffic specified by this rule"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "application",
                          "applicationCategory",
                          "host",
                          "port",
                          "ipRange"
                        ],
                        "description": "Type of the L7 rule. One of: 'application', 'applicationCategory', 'host', 'port', 'ipRange'"
                      },
                      "value": {
                        "type": "string",
                        "description": "The 'value' of what you want to block. Format of 'value' varies depending on type of the rule. See sample request. The application categories and application ids can be retrieved from the the 'MX L7 application categories' endpoint. The countries follow the two-letter ISO 3166-1 alpha-2 format."
                      }
                    }
                  },
                  "description": "An ordered array of the MX L7 firewall rules"
                }
              },
              "example": {
                "rules": [
                  {
                    "policy": "deny",
                    "type": "application",
                    "value": {
                      "id": "meraki:layer7/application/67",
                      "name": "Xbox LIVE"
                    }
                  },
                  {
                    "policy": "deny",
                    "type": "applicationCategory",
                    "value": {
                      "id": "meraki:layer7/category/2",
                      "name": "Blogging"
                    }
                  },
                  {
                    "policy": "deny",
                    "type": "host",
                    "value": "google.com"
                  },
                  {
                    "policy": "deny",
                    "type": "port",
                    "value": "23"
                  },
                  {
                    "policy": "deny",
                    "type": "ipRange",
                    "value": "10.11.12.00/24"
                  },
                  {
                    "policy": "deny",
                    "type": "ipRange",
                    "value": "10.11.12.00/24:5555"
                  },
                  {
                    "policy": "deny",
                    "type": "blacklistedCountries",
                    "value": [
                      "AX",
                      "CA"
                    ]
                  },
                  {
                    "policy": "deny",
                    "type": "whitelistedCountries",
                    "value": [
                      "US"
                    ]
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "rules": [
                  {
                    "policy": "deny",
                    "type": "application",
                    "value": {
                      "id": "meraki:layer7/application/67",
                      "name": "Xbox LIVE"
                    }
                  },
                  {
                    "policy": "deny",
                    "type": "applicationCategory",
                    "value": {
                      "id": "meraki:layer7/category/2",
                      "name": "Blogging"
                    }
                  },
                  {
                    "policy": "deny",
                    "type": "host",
                    "value": "google.com"
                  },
                  {
                    "policy": "deny",
                    "type": "port",
                    "value": "23"
                  },
                  {
                    "policy": "deny",
                    "type": "ipRange",
                    "value": "10.11.12.00/24"
                  },
                  {
                    "policy": "deny",
                    "type": "ipRange",
                    "value": "10.11.12.00/24:5555"
                  },
                  {
                    "policy": "deny",
                    "type": "blacklistedCountries",
                    "value": [
                      "AX",
                      "CA"
                    ]
                  },
                  {
                    "policy": "deny",
                    "type": "whitelistedCountries",
                    "value": [
                      "US"
                    ]
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "MX L7 firewall"
        ]
      }
    },
    "/organizations/{organizationId}/vpnFirewallRules": {
      "get": {
        "summary": "Return the firewall rules for an organization's site-to-site VPN",
        "description": "Return the firewall rules for an organization's site-to-site VPN",
        "operationId": "getOrganizationVpnFirewallRules",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "comment": "Allow TCP traffic to subnet with HTTP servers.",
                  "policy": "allow",
                  "protocol": "tcp",
                  "destPort": 443,
                  "destCidr": "192.168.1.0/24",
                  "srcPort": "Any",
                  "srcCidr": "Any",
                  "syslogEnabled": false
                }
              ]
            }
          }
        },
        "tags": [
          "MX VPN firewall"
        ]
      },
      "put": {
        "summary": "Update the firewall rules of an organization's site-to-site VPN",
        "description": "Update the firewall rules of an organization's site-to-site VPN",
        "operationId": "updateOrganizationVpnFirewallRules",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateOrganizationVpnFirewallRules",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "rules": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "comment": {
                        "type": "string",
                        "description": "Description of the rule (optional)"
                      },
                      "policy": {
                        "type": "string",
                        "description": "'allow' or 'deny' traffic specified by this rule"
                      },
                      "protocol": {
                        "type": "string",
                        "description": "The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')"
                      },
                      "srcPort": {
                        "type": "string",
                        "description": "Comma-separated list of source port(s) (integer in the range 1-65535), or 'any'"
                      },
                      "srcCidr": {
                        "type": "string",
                        "description": "Comma-separated list of source IP address(es) (in IP or CIDR notation), or 'any' (FQDN not supported)"
                      },
                      "destPort": {
                        "type": "string",
                        "description": "Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'"
                      },
                      "destCidr": {
                        "type": "string",
                        "description": "Comma-separated list of destination IP address(es) (in IP or CIDR notation) or 'any' (FQDN not supported)"
                      },
                      "syslogEnabled": {
                        "type": "boolean",
                        "description": "Log this rule to syslog (true or false, boolean value) - only applicable if a syslog has been configured (optional)"
                      }
                    },
                    "required": [
                      "policy",
                      "protocol",
                      "srcCidr",
                      "destCidr"
                    ]
                  },
                  "description": "An ordered array of the firewall rules (not including the default rule)"
                },
                "syslogDefaultRule": {
                  "type": "boolean",
                  "description": "Log the special default rule (boolean value - enable only if you've configured a syslog server) (optional)"
                }
              },
              "example": {
                "rules": [
                  {
                    "comment": "Allow TCP traffic to subnet with HTTP servers.",
                    "policy": "allow",
                    "protocol": "tcp",
                    "destPort": 443,
                    "destCidr": "192.168.1.0/24",
                    "srcPort": "Any",
                    "srcCidr": "Any",
                    "syslogEnabled": false
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "comment": "Allow TCP traffic to subnet with HTTP servers.",
                  "policy": "allow",
                  "protocol": "tcp",
                  "destPort": 443,
                  "destCidr": "192.168.1.0/24",
                  "srcPort": "Any",
                  "srcCidr": "Any",
                  "syslogEnabled": false
                }
              ]
            }
          }
        },
        "tags": [
          "MX VPN firewall"
        ]
      }
    },
    "/networks/{networkId}/ssids/{number}/l3FirewallRules": {
      "get": {
        "summary": "Return the L3 firewall rules for an SSID on an MR network",
        "description": "Return the L3 firewall rules for an SSID on an MR network",
        "operationId": "getNetworkSsidL3FirewallRules",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "number",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "comment": "Allow TCP traffic to subnet with HTTP servers.",
                  "policy": "allow",
                  "protocol": "tcp",
                  "destPort": 443,
                  "destCidr": "192.168.1.0/24"
                }
              ]
            }
          }
        },
        "tags": [
          "MR L3 firewall"
        ]
      },
      "put": {
        "summary": "Update the L3 firewall rules of an SSID on an MR network",
        "description": "Update the L3 firewall rules of an SSID on an MR network",
        "operationId": "updateNetworkSsidL3FirewallRules",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "number",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkSsidL3FirewallRules",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "rules": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "comment": {
                        "type": "string",
                        "description": "Description of the rule (optional)"
                      },
                      "policy": {
                        "type": "string",
                        "description": "'allow' or 'deny' traffic specified by this rule"
                      },
                      "protocol": {
                        "type": "string",
                        "description": "The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')"
                      },
                      "destPort": {
                        "type": "string",
                        "description": "Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'"
                      },
                      "destCidr": {
                        "type": "string",
                        "description": "Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'"
                      }
                    },
                    "required": [
                      "policy",
                      "protocol",
                      "destCidr"
                    ]
                  },
                  "description": "An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule)"
                },
                "allowLanAccess": {
                  "type": "boolean",
                  "description": "Allow wireless client access to local LAN (boolean value - true allows access and false denies access) (optional)"
                }
              },
              "example": {
                "rules": [
                  {
                    "comment": "Allow TCP traffic to subnet with HTTP servers.",
                    "policy": "allow",
                    "protocol": "tcp",
                    "destPort": 443,
                    "destCidr": "192.168.1.0/24"
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "comment": "Allow TCP traffic to subnet with HTTP servers.",
                  "policy": "allow",
                  "protocol": "tcp",
                  "destPort": 443,
                  "destCidr": "192.168.1.0/24"
                }
              ]
            }
          }
        },
        "tags": [
          "MR L3 firewall"
        ]
      }
    },
    "/networks/{networkId}/groupPolicies": {
      "get": {
        "summary": "List the group policies in a network",
        "description": "List the group policies in a network",
        "operationId": "getNetworkGroupPolicies",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "name": "No video streaming",
                  "groupPolicyId": "101",
                  "scheduling": {
                    "enabled": true,
                    "monday": {
                      "active": true,
                      "from": "9:00",
                      "to": "17:00"
                    },
                    "tuesday": {
                      "active": true,
                      "from": "9:00",
                      "to": "17:00"
                    },
                    "wednesday": {
                      "active": true,
                      "from": "9:00",
                      "to": "17:00"
                    },
                    "thursday": {
                      "active": true,
                      "from": "9:00",
                      "to": "17:00"
                    },
                    "friday": {
                      "active": true,
                      "from": "9:00",
                      "to": "17:00"
                    },
                    "saturday": {
                      "active": false,
                      "from": "0:00",
                      "to": "24:00"
                    },
                    "sunday": {
                      "active": false,
                      "from": "0:00",
                      "to": "24:00"
                    }
                  },
                  "bandwidth": {
                    "settings": "custom",
                    "bandwidthLimits": {
                      "limitUp": 1000000,
                      "limitDown": 1000000
                    }
                  },
                  "firewallAndTrafficShaping": {
                    "settings": "custom",
                    "trafficShapingRules": [
                      {
                        "definitions": [
                          {
                            "type": "host",
                            "value": "google.com"
                          },
                          {
                            "type": "port",
                            "value": "9090"
                          },
                          {
                            "type": "ipRange",
                            "value": "192.1.0.0"
                          },
                          {
                            "type": "ipRange",
                            "value": "192.1.0.0/16"
                          },
                          {
                            "type": "ipRange",
                            "value": "10.1.0.0/16:80"
                          },
                          {
                            "type": "localNet",
                            "value": "192.168.0.0/16"
                          },
                          {
                            "type": "applicationCategory",
                            "value": {
                              "id": "meraki:layer7/category/2",
                              "name": "Blogging"
                            }
                          },
                          {
                            "type": "application",
                            "value": {
                              "id": "meraki:layer7/application/133",
                              "name": "Battle.net"
                            }
                          }
                        ],
                        "perClientBandwidthLimits": {
                          "settings": "custom",
                          "bandwidthLimits": {
                            "limitUp": 1000000,
                            "limitDown": 1000000
                          }
                        },
                        "dscpTagValue": null,
                        "pcpTagValue": null
                      }
                    ],
                    "l3FirewallRules": [
                      {
                        "comment": "Allow TCP traffic to subnet with HTTP servers.",
                        "policy": "allow",
                        "protocol": "tcp",
                        "destPort": 443,
                        "destCidr": "192.168.1.0/24"
                      }
                    ],
                    "l7FirewallRules": [
                      [
                        {
                          "policy": "deny",
                          "type": "application",
                          "value": {
                            "id": "meraki:layer7/application/67",
                            "name": "Xbox LIVE"
                          }
                        },
                        {
                          "policy": "deny",
                          "type": "applicationCategory",
                          "value": {
                            "id": "meraki:layer7/category/2",
                            "name": "Blogging"
                          }
                        },
                        {
                          "policy": "deny",
                          "type": "host",
                          "value": "google.com"
                        },
                        {
                          "policy": "deny",
                          "type": "port",
                          "value": "23"
                        },
                        {
                          "policy": "deny",
                          "type": "ipRange",
                          "value": "10.11.12.00/24"
                        },
                        {
                          "policy": "deny",
                          "type": "ipRange",
                          "value": "10.11.12.00/24:5555"
                        },
                        {
                          "policy": "deny",
                          "type": "blacklistedCountries",
                          "value": [
                            "AX",
                            "CA"
                          ]
                        },
                        {
                          "policy": "deny",
                          "type": "whitelistedCountries",
                          "value": [
                            "US"
                          ]
                        }
                      ]
                    ]
                  },
                  "splashAuthSettings": "bypass",
                  "vlanTagging": {
                    "settings": "custom",
                    "vlanId": "1"
                  },
                  "bonjourForwarding": {
                    "settings": "custom",
                    "rules": [
                      {
                        "description": "A simple bonjour rule",
                        "vlanId": "1",
                        "services": [
                          "All Services"
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          }
        },
        "tags": [
          "Group policies"
        ]
      },
      "post": {
        "summary": "Create a group policy",
        "description": "Create a group policy",
        "operationId": "createNetworkGroupPolicy",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "createNetworkGroupPolicy",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name for your group policy. Required."
                },
                "scheduling": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "description": "Whether scheduling is enabled (true) or disabled (false). Defaults to false. If true, the schedule objects for each day of the week (monday - sunday) are parsed."
                    },
                    "monday": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                        },
                        "from": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                        },
                        "to": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                        }
                      },
                      "description": "The schedule object for Monday."
                    },
                    "tuesday": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                        },
                        "from": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                        },
                        "to": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                        }
                      },
                      "description": "The schedule object for Tuesday."
                    },
                    "wednesday": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                        },
                        "from": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                        },
                        "to": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                        }
                      },
                      "description": "The schedule object for Wednesday."
                    },
                    "thursday": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                        },
                        "from": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                        },
                        "to": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                        }
                      },
                      "description": "The schedule object for Thursday."
                    },
                    "friday": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                        },
                        "from": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                        },
                        "to": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                        }
                      },
                      "description": "The schedule object for Friday."
                    },
                    "saturday": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                        },
                        "from": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                        },
                        "to": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                        }
                      },
                      "description": "The schedule object for Saturday."
                    },
                    "sunday": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                        },
                        "from": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                        },
                        "to": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                        }
                      },
                      "description": "The schedule object for Sunday."
                    }
                  },
                  "description": "    The schedule for the group policy. Schedules are applied to days of the week.\n"
                },
                "bandwidth": {
                  "type": "object",
                  "properties": {
                    "settings": {
                      "type": "string",
                      "enum": [
                        "network default",
                        "ignore",
                        "custom"
                      ],
                      "description": "How bandwidth limits are enforced. Can be 'network default', 'ignore' or 'custom'."
                    },
                    "bandwidthLimits": {
                      "type": "object",
                      "properties": {
                        "limitUp": {
                          "type": "integer",
                          "description": "The maximum upload limit (integer, in Kbps). null indicates no limit"
                        },
                        "limitDown": {
                          "type": "integer",
                          "description": "The maximum download limit (integer, in Kbps). null indicates no limit"
                        }
                      },
                      "description": "The bandwidth limits object, specifying upload and download speed for clients bound to the group policy. These are only enforced if 'settings' is set to 'custom'."
                    }
                  },
                  "description": "    The bandwidth settings for clients bound to your group policy.\n"
                },
                "firewallAndTrafficShaping": {
                  "type": "object",
                  "properties": {
                    "settings": {
                      "type": "string",
                      "enum": [
                        "network default",
                        "ignore",
                        "custom"
                      ],
                      "description": "How firewall and traffic shaping rules are enforced. Can be 'network default', 'ignore' or 'custom'."
                    },
                    "trafficShapingRules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "definitions": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "application",
                                    "applicationCategory",
                                    "host",
                                    "port",
                                    "ipRange",
                                    "localNet"
                                  ],
                                  "description": "The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'."
                                },
                                "value": {
                                  "type": "string",
                                  "description": "    If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n     If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": \"meraki:layer7/...\" }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    endpoint).\n"
                                }
                              },
                              "required": [
                                "type",
                                "value"
                              ]
                            },
                            "description": "    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\n"
                          },
                          "perClientBandwidthLimits": {
                            "type": "object",
                            "properties": {
                              "settings": {
                                "type": "string",
                                "description": "How bandwidth limits are applied by your rule. Can be one of 'network default', 'ignore' or 'custom'."
                              },
                              "bandwidthLimits": {
                                "type": "object",
                                "properties": {
                                  "limitUp": {
                                    "type": "integer",
                                    "description": "The maximum upload limit (integer, in Kbps)."
                                  },
                                  "limitDown": {
                                    "type": "integer",
                                    "description": "The maximum download limit (integer, in Kbps)."
                                  }
                                },
                                "description": "The bandwidth limits object, specifying the upload ('limitUp') and download ('limitDown') speed in Kbps. These are only enforced if 'settings' is set to 'custom'."
                              }
                            },
                            "description": "    An object describing the bandwidth settings for your rule.\n"
                          },
                          "dscpTagValue": {
                            "type": "integer",
                            "description": "    The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.\n    For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.\n"
                          },
                          "pcpTagValue": {
                            "type": "integer",
                            "description": "    The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).\n    null means 'Do not set PCP tag'.\n"
                          },
                          "priority": {
                            "type": "string",
                            "description": "    A string, indicating the priority level for packets bound to your rule.\n    Can be 'low', 'normal' or 'high'.\n"
                          }
                        },
                        "required": [
                          "definitions"
                        ]
                      },
                      "description": "    An array of traffic shaping rules. Rules are applied in the order that\n    they are specified in. An empty list (or null) means no rules. Note that\n    you are allowed a maximum of 8 rules.\n"
                    },
                    "l3FirewallRules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "comment": {
                            "type": "string",
                            "description": "Description of the rule (optional)"
                          },
                          "policy": {
                            "type": "string",
                            "description": "'allow' or 'deny' traffic specified by this rule"
                          },
                          "protocol": {
                            "type": "string",
                            "description": "The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')"
                          },
                          "destPort": {
                            "type": "string",
                            "description": "Destination port (integer in the range 1-65535), a port range (e.g. 8080-9090), or 'any'"
                          },
                          "destCidr": {
                            "type": "string",
                            "description": "Destination IP address (in IP or CIDR notation), a fully-qualified domain name (FQDN, if your network supports it) or 'any'."
                          }
                        },
                        "required": [
                          "policy",
                          "protocol",
                          "destCidr"
                        ]
                      },
                      "description": "An ordered array of the L3 firewall rules"
                    },
                    "l7FirewallRules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "policy": {
                            "type": "string",
                            "enum": [
                              "deny"
                            ],
                            "description": "The policy applied to matching traffic. Must be 'deny'."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "application",
                              "applicationCategory",
                              "host",
                              "port",
                              "ipRange"
                            ],
                            "description": "Type of the L7 Rule. Must be 'application', 'applicationCategory', 'host', 'port' or 'ipRange'"
                          },
                          "value": {
                            "type": "string",
                            "description": "The 'value' of what you want to block. If 'type' is 'host', 'port' or 'ipRange', 'value' must be a string matching either a hostname (e.g. somewhere.com), a port (e.g. 8080), or an IP range (e.g. 192.1.0.0/16). If 'type' is 'application' or 'applicationCategory', then 'value' must be an object with an ID for the application."
                          }
                        }
                      },
                      "description": "An ordered array of L7 firewall rules"
                    }
                  },
                  "description": "    The firewall and traffic shaping rules and settings for your policy.\n"
                },
                "splashAuthSettings": {
                  "type": "string",
                  "enum": [
                    "network default",
                    "bypass"
                  ],
                  "description": "Whether clients bound to your policy will bypass splash authorization or behave according to the network's rules. Can be one of 'network default' or 'bypass'. Only available if your network has a wireless configuration."
                },
                "vlanTagging": {
                  "type": "object",
                  "properties": {
                    "settings": {
                      "type": "string",
                      "enum": [
                        "network default",
                        "ignore",
                        "custom"
                      ],
                      "description": "How VLAN tagging is applied. Can be 'network default', 'ignore' or 'custom'."
                    },
                    "vlanId": {
                      "type": "string",
                      "description": "The ID of the vlan you want to tag. This only applies if 'settings' is set to 'custom'."
                    }
                  },
                  "description": "The VLAN tagging settings for your group policy. Only available if your network has a wireless configuration."
                },
                "bonjourForwarding": {
                  "type": "object",
                  "properties": {
                    "settings": {
                      "type": "string",
                      "enum": [
                        "network default",
                        "ignore",
                        "custom"
                      ],
                      "description": "How Bonjour rules are applied. Can be 'network default', 'ignore' or 'custom'."
                    },
                    "rules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "description": {
                            "type": "string",
                            "description": "A description for your Bonjour forwarding rule. Optional."
                          },
                          "vlanId": {
                            "type": "string",
                            "description": "The ID of the service VLAN. Required."
                          },
                          "services": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "All Services",
                                "AirPlay",
                                "AFP",
                                "BitTorrent",
                                "FTP",
                                "iChat",
                                "iTunes",
                                "Printers",
                                "Samba",
                                "Scanners",
                                "SSH"
                              ]
                            },
                            "description": "A list of Bonjour services. At least one service must be specified. Available services are 'All Services', 'AirPlay', 'AFP', 'BitTorrent', 'FTP', 'iChat', 'iTunes', 'Printers', 'Samba', 'Scanners' and 'SSH'"
                          }
                        },
                        "required": [
                          "vlanId",
                          "services"
                        ]
                      },
                      "description": "A list of the Bonjour forwarding rules for your group policy. If 'settings' is set to 'custom', at least one rule must be specified."
                    }
                  },
                  "description": "The Bonjour settings for your group policy. Only valid if your network has a wireless configuration."
                }
              },
              "example": {
                "name": "No video streaming",
                "scheduling": {
                  "enabled": true,
                  "monday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "tuesday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "wednesday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "thursday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "friday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "saturday": {
                    "active": false,
                    "from": "0:00",
                    "to": "24:00"
                  },
                  "sunday": {
                    "active": false,
                    "from": "0:00",
                    "to": "24:00"
                  }
                },
                "bandwidth": {
                  "settings": "custom",
                  "bandwidthLimits": {
                    "limitUp": 1000000,
                    "limitDown": 1000000
                  }
                },
                "firewallAndTrafficShaping": {
                  "settings": "custom",
                  "trafficShapingRules": [
                    {
                      "definitions": [
                        {
                          "type": "host",
                          "value": "google.com"
                        },
                        {
                          "type": "port",
                          "value": "9090"
                        },
                        {
                          "type": "ipRange",
                          "value": "192.1.0.0"
                        },
                        {
                          "type": "ipRange",
                          "value": "192.1.0.0/16"
                        },
                        {
                          "type": "ipRange",
                          "value": "10.1.0.0/16:80"
                        },
                        {
                          "type": "localNet",
                          "value": "192.168.0.0/16"
                        },
                        {
                          "type": "applicationCategory",
                          "value": {
                            "id": "meraki:layer7/category/2",
                            "name": "Blogging"
                          }
                        },
                        {
                          "type": "application",
                          "value": {
                            "id": "meraki:layer7/application/133",
                            "name": "Battle.net"
                          }
                        }
                      ],
                      "perClientBandwidthLimits": {
                        "settings": "custom",
                        "bandwidthLimits": {
                          "limitUp": 1000000,
                          "limitDown": 1000000
                        }
                      },
                      "dscpTagValue": null,
                      "pcpTagValue": null
                    }
                  ],
                  "l3FirewallRules": [
                    {
                      "comment": "Allow TCP traffic to subnet with HTTP servers.",
                      "policy": "allow",
                      "protocol": "tcp",
                      "destPort": 443,
                      "destCidr": "192.168.1.0/24"
                    }
                  ],
                  "l7FirewallRules": [
                    [
                      {
                        "policy": "deny",
                        "type": "application",
                        "value": {
                          "id": "meraki:layer7/application/67",
                          "name": "Xbox LIVE"
                        }
                      },
                      {
                        "policy": "deny",
                        "type": "applicationCategory",
                        "value": {
                          "id": "meraki:layer7/category/2",
                          "name": "Blogging"
                        }
                      },
                      {
                        "policy": "deny",
                        "type": "host",
                        "value": "google.com"
                      },
                      {
                        "policy": "deny",
                        "type": "port",
                        "value": "23"
                      },
                      {
                        "policy": "deny",
                        "type": "ipRange",
                        "value": "10.11.12.00/24"
                      },
                      {
                        "policy": "deny",
                        "type": "ipRange",
                        "value": "10.11.12.00/24:5555"
                      },
                      {
                        "policy": "deny",
                        "type": "blacklistedCountries",
                        "value": [
                          "AX",
                          "CA"
                        ]
                      },
                      {
                        "policy": "deny",
                        "type": "whitelistedCountries",
                        "value": [
                          "US"
                        ]
                      }
                    ]
                  ]
                },
                "splashAuthSettings": "bypass",
                "vlanTagging": {
                  "settings": "custom",
                  "vlanId": "1"
                },
                "bonjourForwarding": {
                  "settings": "custom",
                  "rules": [
                    {
                      "description": "A simple bonjour rule",
                      "vlanId": "1",
                      "services": [
                        "All Services"
                      ]
                    }
                  ]
                }
              },
              "required": [
                "name"
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "name": "No video streaming",
                "groupPolicyId": "101",
                "scheduling": {
                  "enabled": true,
                  "monday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "tuesday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "wednesday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "thursday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "friday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "saturday": {
                    "active": false,
                    "from": "0:00",
                    "to": "24:00"
                  },
                  "sunday": {
                    "active": false,
                    "from": "0:00",
                    "to": "24:00"
                  }
                },
                "bandwidth": {
                  "settings": "custom",
                  "bandwidthLimits": {
                    "limitUp": 1000000,
                    "limitDown": 1000000
                  }
                },
                "firewallAndTrafficShaping": {
                  "settings": "custom",
                  "trafficShapingRules": [
                    {
                      "definitions": [
                        {
                          "type": "host",
                          "value": "google.com"
                        },
                        {
                          "type": "port",
                          "value": "9090"
                        },
                        {
                          "type": "ipRange",
                          "value": "192.1.0.0"
                        },
                        {
                          "type": "ipRange",
                          "value": "192.1.0.0/16"
                        },
                        {
                          "type": "ipRange",
                          "value": "10.1.0.0/16:80"
                        },
                        {
                          "type": "localNet",
                          "value": "192.168.0.0/16"
                        },
                        {
                          "type": "applicationCategory",
                          "value": {
                            "id": "meraki:layer7/category/2",
                            "name": "Blogging"
                          }
                        },
                        {
                          "type": "application",
                          "value": {
                            "id": "meraki:layer7/application/133",
                            "name": "Battle.net"
                          }
                        }
                      ],
                      "perClientBandwidthLimits": {
                        "settings": "custom",
                        "bandwidthLimits": {
                          "limitUp": 1000000,
                          "limitDown": 1000000
                        }
                      },
                      "dscpTagValue": null,
                      "pcpTagValue": null
                    }
                  ],
                  "l3FirewallRules": [
                    {
                      "comment": "Allow TCP traffic to subnet with HTTP servers.",
                      "policy": "allow",
                      "protocol": "tcp",
                      "destPort": 443,
                      "destCidr": "192.168.1.0/24"
                    }
                  ],
                  "l7FirewallRules": [
                    [
                      {
                        "policy": "deny",
                        "type": "application",
                        "value": {
                          "id": "meraki:layer7/application/67",
                          "name": "Xbox LIVE"
                        }
                      },
                      {
                        "policy": "deny",
                        "type": "applicationCategory",
                        "value": {
                          "id": "meraki:layer7/category/2",
                          "name": "Blogging"
                        }
                      },
                      {
                        "policy": "deny",
                        "type": "host",
                        "value": "google.com"
                      },
                      {
                        "policy": "deny",
                        "type": "port",
                        "value": "23"
                      },
                      {
                        "policy": "deny",
                        "type": "ipRange",
                        "value": "10.11.12.00/24"
                      },
                      {
                        "policy": "deny",
                        "type": "ipRange",
                        "value": "10.11.12.00/24:5555"
                      },
                      {
                        "policy": "deny",
                        "type": "blacklistedCountries",
                        "value": [
                          "AX",
                          "CA"
                        ]
                      },
                      {
                        "policy": "deny",
                        "type": "whitelistedCountries",
                        "value": [
                          "US"
                        ]
                      }
                    ]
                  ]
                },
                "splashAuthSettings": "bypass",
                "vlanTagging": {
                  "settings": "custom",
                  "vlanId": "1"
                },
                "bonjourForwarding": {
                  "settings": "custom",
                  "rules": [
                    {
                      "description": "A simple bonjour rule",
                      "vlanId": "1",
                      "services": [
                        "All Services"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Group policies"
        ]
      }
    },
    "/networks/{networkId}/groupPolicies/{groupPolicyId}": {
      "get": {
        "summary": "Display a group policy",
        "description": "Display a group policy",
        "operationId": "getNetworkGroupPolicy",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "groupPolicyId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "name": "No video streaming",
                "groupPolicyId": "101",
                "scheduling": {
                  "enabled": true,
                  "monday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "tuesday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "wednesday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "thursday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "friday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "saturday": {
                    "active": false,
                    "from": "0:00",
                    "to": "24:00"
                  },
                  "sunday": {
                    "active": false,
                    "from": "0:00",
                    "to": "24:00"
                  }
                },
                "bandwidth": {
                  "settings": "custom",
                  "bandwidthLimits": {
                    "limitUp": 1000000,
                    "limitDown": 1000000
                  }
                },
                "firewallAndTrafficShaping": {
                  "settings": "custom",
                  "trafficShapingRules": [
                    {
                      "definitions": [
                        {
                          "type": "host",
                          "value": "google.com"
                        },
                        {
                          "type": "port",
                          "value": "9090"
                        },
                        {
                          "type": "ipRange",
                          "value": "192.1.0.0"
                        },
                        {
                          "type": "ipRange",
                          "value": "192.1.0.0/16"
                        },
                        {
                          "type": "ipRange",
                          "value": "10.1.0.0/16:80"
                        },
                        {
                          "type": "localNet",
                          "value": "192.168.0.0/16"
                        },
                        {
                          "type": "applicationCategory",
                          "value": {
                            "id": "meraki:layer7/category/2",
                            "name": "Blogging"
                          }
                        },
                        {
                          "type": "application",
                          "value": {
                            "id": "meraki:layer7/application/133",
                            "name": "Battle.net"
                          }
                        }
                      ],
                      "perClientBandwidthLimits": {
                        "settings": "custom",
                        "bandwidthLimits": {
                          "limitUp": 1000000,
                          "limitDown": 1000000
                        }
                      },
                      "dscpTagValue": null,
                      "pcpTagValue": null
                    }
                  ],
                  "l3FirewallRules": [
                    {
                      "comment": "Allow TCP traffic to subnet with HTTP servers.",
                      "policy": "allow",
                      "protocol": "tcp",
                      "destPort": 443,
                      "destCidr": "192.168.1.0/24"
                    }
                  ],
                  "l7FirewallRules": [
                    [
                      {
                        "policy": "deny",
                        "type": "application",
                        "value": {
                          "id": "meraki:layer7/application/67",
                          "name": "Xbox LIVE"
                        }
                      },
                      {
                        "policy": "deny",
                        "type": "applicationCategory",
                        "value": {
                          "id": "meraki:layer7/category/2",
                          "name": "Blogging"
                        }
                      },
                      {
                        "policy": "deny",
                        "type": "host",
                        "value": "google.com"
                      },
                      {
                        "policy": "deny",
                        "type": "port",
                        "value": "23"
                      },
                      {
                        "policy": "deny",
                        "type": "ipRange",
                        "value": "10.11.12.00/24"
                      },
                      {
                        "policy": "deny",
                        "type": "ipRange",
                        "value": "10.11.12.00/24:5555"
                      },
                      {
                        "policy": "deny",
                        "type": "blacklistedCountries",
                        "value": [
                          "AX",
                          "CA"
                        ]
                      },
                      {
                        "policy": "deny",
                        "type": "whitelistedCountries",
                        "value": [
                          "US"
                        ]
                      }
                    ]
                  ]
                },
                "splashAuthSettings": "bypass",
                "vlanTagging": {
                  "settings": "custom",
                  "vlanId": "1"
                },
                "bonjourForwarding": {
                  "settings": "custom",
                  "rules": [
                    {
                      "description": "A simple bonjour rule",
                      "vlanId": "1",
                      "services": [
                        "All Services"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Group policies"
        ]
      },
      "put": {
        "summary": "Update a group policy",
        "description": "Update a group policy",
        "operationId": "updateNetworkGroupPolicy",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "groupPolicyId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkGroupPolicy",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name for your group policy."
                },
                "scheduling": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "description": "Whether scheduling is enabled (true) or disabled (false). Defaults to false. If true, the schedule objects for each day of the week (monday - sunday) are parsed."
                    },
                    "monday": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                        },
                        "from": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                        },
                        "to": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                        }
                      },
                      "description": "The schedule object for Monday."
                    },
                    "tuesday": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                        },
                        "from": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                        },
                        "to": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                        }
                      },
                      "description": "The schedule object for Tuesday."
                    },
                    "wednesday": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                        },
                        "from": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                        },
                        "to": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                        }
                      },
                      "description": "The schedule object for Wednesday."
                    },
                    "thursday": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                        },
                        "from": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                        },
                        "to": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                        }
                      },
                      "description": "The schedule object for Thursday."
                    },
                    "friday": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                        },
                        "from": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                        },
                        "to": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                        }
                      },
                      "description": "The schedule object for Friday."
                    },
                    "saturday": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                        },
                        "from": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                        },
                        "to": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                        }
                      },
                      "description": "The schedule object for Saturday."
                    },
                    "sunday": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                        },
                        "from": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                        },
                        "to": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                        }
                      },
                      "description": "The schedule object for Sunday."
                    }
                  },
                  "description": "    The schedule for the group policy. Schedules are applied to days of the week.\n"
                },
                "bandwidth": {
                  "type": "object",
                  "properties": {
                    "settings": {
                      "type": "string",
                      "enum": [
                        "network default",
                        "ignore",
                        "custom"
                      ],
                      "description": "How bandwidth limits are enforced. Can be 'network default', 'ignore' or 'custom'."
                    },
                    "bandwidthLimits": {
                      "type": "object",
                      "properties": {
                        "limitUp": {
                          "type": "integer",
                          "description": "The maximum upload limit (integer, in Kbps). null indicates no limit"
                        },
                        "limitDown": {
                          "type": "integer",
                          "description": "The maximum download limit (integer, in Kbps). null indicates no limit"
                        }
                      },
                      "description": "The bandwidth limits object, specifying upload and download speed for clients bound to the group policy. These are only enforced if 'settings' is set to 'custom'."
                    }
                  },
                  "description": "    The bandwidth settings for clients bound to your group policy.\n"
                },
                "firewallAndTrafficShaping": {
                  "type": "object",
                  "properties": {
                    "settings": {
                      "type": "string",
                      "enum": [
                        "network default",
                        "ignore",
                        "custom"
                      ],
                      "description": "How firewall and traffic shaping rules are enforced. Can be 'network default', 'ignore' or 'custom'."
                    },
                    "trafficShapingRules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "definitions": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "application",
                                    "applicationCategory",
                                    "host",
                                    "port",
                                    "ipRange",
                                    "localNet"
                                  ],
                                  "description": "The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'."
                                },
                                "value": {
                                  "type": "string",
                                  "description": "    If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n     If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": \"meraki:layer7/...\" }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    endpoint).\n"
                                }
                              },
                              "required": [
                                "type",
                                "value"
                              ]
                            },
                            "description": "    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\n"
                          },
                          "perClientBandwidthLimits": {
                            "type": "object",
                            "properties": {
                              "settings": {
                                "type": "string",
                                "description": "How bandwidth limits are applied by your rule. Can be one of 'network default', 'ignore' or 'custom'."
                              },
                              "bandwidthLimits": {
                                "type": "object",
                                "properties": {
                                  "limitUp": {
                                    "type": "integer",
                                    "description": "The maximum upload limit (integer, in Kbps)."
                                  },
                                  "limitDown": {
                                    "type": "integer",
                                    "description": "The maximum download limit (integer, in Kbps)."
                                  }
                                },
                                "description": "The bandwidth limits object, specifying the upload ('limitUp') and download ('limitDown') speed in Kbps. These are only enforced if 'settings' is set to 'custom'."
                              }
                            },
                            "description": "    An object describing the bandwidth settings for your rule.\n"
                          },
                          "dscpTagValue": {
                            "type": "integer",
                            "description": "    The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.\n    For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.\n"
                          },
                          "pcpTagValue": {
                            "type": "integer",
                            "description": "    The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).\n    null means 'Do not set PCP tag'.\n"
                          },
                          "priority": {
                            "type": "string",
                            "description": "    A string, indicating the priority level for packets bound to your rule.\n    Can be 'low', 'normal' or 'high'.\n"
                          }
                        },
                        "required": [
                          "definitions"
                        ]
                      },
                      "description": "    An array of traffic shaping rules. Rules are applied in the order that\n    they are specified in. An empty list (or null) means no rules. Note that\n    you are allowed a maximum of 8 rules.\n"
                    },
                    "l3FirewallRules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "comment": {
                            "type": "string",
                            "description": "Description of the rule (optional)"
                          },
                          "policy": {
                            "type": "string",
                            "description": "'allow' or 'deny' traffic specified by this rule"
                          },
                          "protocol": {
                            "type": "string",
                            "description": "The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')"
                          },
                          "destPort": {
                            "type": "string",
                            "description": "Destination port (integer in the range 1-65535), a port range (e.g. 8080-9090), or 'any'"
                          },
                          "destCidr": {
                            "type": "string",
                            "description": "Destination IP address (in IP or CIDR notation), a fully-qualified domain name (FQDN, if your network supports it) or 'any'."
                          }
                        },
                        "required": [
                          "policy",
                          "protocol",
                          "destCidr"
                        ]
                      },
                      "description": "An ordered array of the L3 firewall rules"
                    },
                    "l7FirewallRules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "policy": {
                            "type": "string",
                            "enum": [
                              "deny"
                            ],
                            "description": "The policy applied to matching traffic. Must be 'deny'."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "application",
                              "applicationCategory",
                              "host",
                              "port",
                              "ipRange"
                            ],
                            "description": "Type of the L7 Rule. Must be 'application', 'applicationCategory', 'host', 'port' or 'ipRange'"
                          },
                          "value": {
                            "type": "string",
                            "description": "The 'value' of what you want to block. If 'type' is 'host', 'port' or 'ipRange', 'value' must be a string matching either a hostname (e.g. somewhere.com), a port (e.g. 8080), or an IP range (e.g. 192.1.0.0/16). If 'type' is 'application' or 'applicationCategory', then 'value' must be an object with an ID for the application."
                          }
                        }
                      },
                      "description": "An ordered array of L7 firewall rules"
                    }
                  },
                  "description": "    The firewall and traffic shaping rules and settings for your policy.\n"
                },
                "splashAuthSettings": {
                  "type": "string",
                  "enum": [
                    "network default",
                    "bypass"
                  ],
                  "description": "Whether clients bound to your policy will bypass splash authorization or behave according to the network's rules. Can be one of 'network default' or 'bypass'. Only available if your network has a wireless configuration."
                },
                "vlanTagging": {
                  "type": "object",
                  "properties": {
                    "settings": {
                      "type": "string",
                      "enum": [
                        "network default",
                        "ignore",
                        "custom"
                      ],
                      "description": "How VLAN tagging is applied. Can be 'network default', 'ignore' or 'custom'."
                    },
                    "vlanId": {
                      "type": "string",
                      "description": "The ID of the vlan you want to tag. This only applies if 'settings' is set to 'custom'."
                    }
                  },
                  "description": "The VLAN tagging settings for your group policy. Only available if your network has a wireless configuration."
                },
                "bonjourForwarding": {
                  "type": "object",
                  "properties": {
                    "settings": {
                      "type": "string",
                      "enum": [
                        "network default",
                        "ignore",
                        "custom"
                      ],
                      "description": "How Bonjour rules are applied. Can be 'network default', 'ignore' or 'custom'."
                    },
                    "rules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "description": {
                            "type": "string",
                            "description": "A description for your Bonjour forwarding rule. Optional."
                          },
                          "vlanId": {
                            "type": "string",
                            "description": "The ID of the service VLAN. Required."
                          },
                          "services": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "All Services",
                                "AirPlay",
                                "AFP",
                                "BitTorrent",
                                "FTP",
                                "iChat",
                                "iTunes",
                                "Printers",
                                "Samba",
                                "Scanners",
                                "SSH"
                              ]
                            },
                            "description": "A list of Bonjour services. At least one service must be specified. Available services are 'All Services', 'AirPlay', 'AFP', 'BitTorrent', 'FTP', 'iChat', 'iTunes', 'Printers', 'Samba', 'Scanners' and 'SSH'"
                          }
                        },
                        "required": [
                          "vlanId",
                          "services"
                        ]
                      },
                      "description": "A list of the Bonjour forwarding rules for your group policy. If 'settings' is set to 'custom', at least one rule must be specified."
                    }
                  },
                  "description": "The Bonjour settings for your group policy. Only valid if your network has a wireless configuration."
                }
              },
              "example": {
                "name": "No video streaming",
                "scheduling": {
                  "enabled": true,
                  "monday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "tuesday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "wednesday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "thursday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "friday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "saturday": {
                    "active": false,
                    "from": "0:00",
                    "to": "24:00"
                  },
                  "sunday": {
                    "active": false,
                    "from": "0:00",
                    "to": "24:00"
                  }
                },
                "bandwidth": {
                  "settings": "custom",
                  "bandwidthLimits": {
                    "limitUp": 1000000,
                    "limitDown": 1000000
                  }
                },
                "firewallAndTrafficShaping": {
                  "settings": "custom",
                  "trafficShapingRules": [
                    {
                      "definitions": [
                        {
                          "type": "host",
                          "value": "google.com"
                        },
                        {
                          "type": "port",
                          "value": "9090"
                        },
                        {
                          "type": "ipRange",
                          "value": "192.1.0.0"
                        },
                        {
                          "type": "ipRange",
                          "value": "192.1.0.0/16"
                        },
                        {
                          "type": "ipRange",
                          "value": "10.1.0.0/16:80"
                        },
                        {
                          "type": "localNet",
                          "value": "192.168.0.0/16"
                        },
                        {
                          "type": "applicationCategory",
                          "value": {
                            "id": "meraki:layer7/category/2",
                            "name": "Blogging"
                          }
                        },
                        {
                          "type": "application",
                          "value": {
                            "id": "meraki:layer7/application/133",
                            "name": "Battle.net"
                          }
                        }
                      ],
                      "perClientBandwidthLimits": {
                        "settings": "custom",
                        "bandwidthLimits": {
                          "limitUp": 1000000,
                          "limitDown": 1000000
                        }
                      },
                      "dscpTagValue": null,
                      "pcpTagValue": null
                    }
                  ],
                  "l3FirewallRules": [
                    {
                      "comment": "Allow TCP traffic to subnet with HTTP servers.",
                      "policy": "allow",
                      "protocol": "tcp",
                      "destPort": 443,
                      "destCidr": "192.168.1.0/24"
                    }
                  ],
                  "l7FirewallRules": [
                    [
                      {
                        "policy": "deny",
                        "type": "application",
                        "value": {
                          "id": "meraki:layer7/application/67",
                          "name": "Xbox LIVE"
                        }
                      },
                      {
                        "policy": "deny",
                        "type": "applicationCategory",
                        "value": {
                          "id": "meraki:layer7/category/2",
                          "name": "Blogging"
                        }
                      },
                      {
                        "policy": "deny",
                        "type": "host",
                        "value": "google.com"
                      },
                      {
                        "policy": "deny",
                        "type": "port",
                        "value": "23"
                      },
                      {
                        "policy": "deny",
                        "type": "ipRange",
                        "value": "10.11.12.00/24"
                      },
                      {
                        "policy": "deny",
                        "type": "ipRange",
                        "value": "10.11.12.00/24:5555"
                      },
                      {
                        "policy": "deny",
                        "type": "blacklistedCountries",
                        "value": [
                          "AX",
                          "CA"
                        ]
                      },
                      {
                        "policy": "deny",
                        "type": "whitelistedCountries",
                        "value": [
                          "US"
                        ]
                      }
                    ]
                  ]
                },
                "splashAuthSettings": "bypass",
                "vlanTagging": {
                  "settings": "custom",
                  "vlanId": "1"
                },
                "bonjourForwarding": {
                  "settings": "custom",
                  "rules": [
                    {
                      "description": "A simple bonjour rule",
                      "vlanId": "1",
                      "services": [
                        "All Services"
                      ]
                    }
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "name": "No video streaming",
                "groupPolicyId": "101",
                "scheduling": {
                  "enabled": true,
                  "monday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "tuesday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "wednesday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "thursday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "friday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "saturday": {
                    "active": false,
                    "from": "0:00",
                    "to": "24:00"
                  },
                  "sunday": {
                    "active": false,
                    "from": "0:00",
                    "to": "24:00"
                  }
                },
                "bandwidth": {
                  "settings": "custom",
                  "bandwidthLimits": {
                    "limitUp": 1000000,
                    "limitDown": 1000000
                  }
                },
                "firewallAndTrafficShaping": {
                  "settings": "custom",
                  "trafficShapingRules": [
                    {
                      "definitions": [
                        {
                          "type": "host",
                          "value": "google.com"
                        },
                        {
                          "type": "port",
                          "value": "9090"
                        },
                        {
                          "type": "ipRange",
                          "value": "192.1.0.0"
                        },
                        {
                          "type": "ipRange",
                          "value": "192.1.0.0/16"
                        },
                        {
                          "type": "ipRange",
                          "value": "10.1.0.0/16:80"
                        },
                        {
                          "type": "localNet",
                          "value": "192.168.0.0/16"
                        },
                        {
                          "type": "applicationCategory",
                          "value": {
                            "id": "meraki:layer7/category/2",
                            "name": "Blogging"
                          }
                        },
                        {
                          "type": "application",
                          "value": {
                            "id": "meraki:layer7/application/133",
                            "name": "Battle.net"
                          }
                        }
                      ],
                      "perClientBandwidthLimits": {
                        "settings": "custom",
                        "bandwidthLimits": {
                          "limitUp": 1000000,
                          "limitDown": 1000000
                        }
                      },
                      "dscpTagValue": null,
                      "pcpTagValue": null
                    }
                  ],
                  "l3FirewallRules": [
                    {
                      "comment": "Allow TCP traffic to subnet with HTTP servers.",
                      "policy": "allow",
                      "protocol": "tcp",
                      "destPort": 443,
                      "destCidr": "192.168.1.0/24"
                    }
                  ],
                  "l7FirewallRules": [
                    [
                      {
                        "policy": "deny",
                        "type": "application",
                        "value": {
                          "id": "meraki:layer7/application/67",
                          "name": "Xbox LIVE"
                        }
                      },
                      {
                        "policy": "deny",
                        "type": "applicationCategory",
                        "value": {
                          "id": "meraki:layer7/category/2",
                          "name": "Blogging"
                        }
                      },
                      {
                        "policy": "deny",
                        "type": "host",
                        "value": "google.com"
                      },
                      {
                        "policy": "deny",
                        "type": "port",
                        "value": "23"
                      },
                      {
                        "policy": "deny",
                        "type": "ipRange",
                        "value": "10.11.12.00/24"
                      },
                      {
                        "policy": "deny",
                        "type": "ipRange",
                        "value": "10.11.12.00/24:5555"
                      },
                      {
                        "policy": "deny",
                        "type": "blacklistedCountries",
                        "value": [
                          "AX",
                          "CA"
                        ]
                      },
                      {
                        "policy": "deny",
                        "type": "whitelistedCountries",
                        "value": [
                          "US"
                        ]
                      }
                    ]
                  ]
                },
                "splashAuthSettings": "bypass",
                "vlanTagging": {
                  "settings": "custom",
                  "vlanId": "1"
                },
                "bonjourForwarding": {
                  "settings": "custom",
                  "rules": [
                    {
                      "description": "A simple bonjour rule",
                      "vlanId": "1",
                      "services": [
                        "All Services"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Group policies"
        ]
      },
      "delete": {
        "summary": "Delete a group policy",
        "description": "Delete a group policy",
        "operationId": "deleteNetworkGroupPolicy",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "groupPolicyId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          }
        },
        "tags": [
          "Group policies"
        ]
      }
    },
    "/networks/{networkId}/httpServers": {
      "get": {
        "summary": "List the HTTP servers for a network",
        "description": "List the HTTP servers for a network",
        "operationId": "getNetworkHttpServers",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "id": "ABC123",
                  "networkId": "N_123",
                  "name": "My HTTP server",
                  "url": "https://www.example.com/webhooks",
                  "sharedSecret": "foobar"
                }
              ]
            }
          }
        },
        "tags": [
          "HTTP servers"
        ]
      },
      "post": {
        "summary": "Add an HTTP server",
        "description": "Add an HTTP server",
        "operationId": "createNetworkHttpServer",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "createNetworkHttpServer",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "A name for easy reference to the HTTP server",
                  "type": "string"
                },
                "url": {
                  "description": "The URL of the HTTP server",
                  "type": "string"
                },
                "sharedSecret": {
                  "description": "A shared secret that will be included in POSTs sent to the HTTP server. This secret can be used to verify that the request was sent by Meraki.",
                  "type": "string"
                }
              },
              "example": {
                "name": "My HTTP server",
                "url": "https://www.example.com/webhooks",
                "sharedSecret": "foobar"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "ABC123",
                "networkId": "N_123",
                "name": "My HTTP server",
                "url": "https://www.example.com/webhooks",
                "sharedSecret": "foobar"
              }
            }
          }
        },
        "tags": [
          "HTTP servers"
        ]
      }
    },
    "/networks/{networkId}/httpServers/{id}": {
      "get": {
        "summary": "Return an HTTP server",
        "description": "Return an HTTP server",
        "operationId": "getNetworkHttpServer",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "ABC123",
                "networkId": "N_123",
                "name": "My HTTP server",
                "url": "https://www.example.com/webhooks",
                "sharedSecret": "foobar"
              }
            }
          }
        },
        "tags": [
          "HTTP servers"
        ]
      },
      "put": {
        "summary": "Update an HTTP server",
        "description": "Update an HTTP server",
        "operationId": "updateNetworkHttpServer",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkHttpServer",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "A name for easy reference to the HTTP server",
                  "type": "string"
                },
                "url": {
                  "description": "The URL of the HTTP server",
                  "type": "string"
                },
                "sharedSecret": {
                  "description": "A shared secret that will be included in POSTs sent to the HTTP server. This secret can be used to verify that the request was sent by Meraki.",
                  "type": "string"
                }
              },
              "example": {
                "name": "My HTTP server",
                "url": "https://www.example.com/webhooks",
                "sharedSecret": "foobar"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "ABC123",
                "networkId": "N_123",
                "name": "My HTTP server",
                "url": "https://www.example.com/webhooks",
                "sharedSecret": "foobar"
              }
            }
          }
        },
        "tags": [
          "HTTP servers"
        ]
      },
      "delete": {
        "summary": "Delete an HTTP server",
        "description": "Delete an HTTP server",
        "operationId": "deleteNetworkHttpServer",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          }
        },
        "tags": [
          "HTTP servers"
        ]
      }
    },
    "/networks/{networkId}/httpServers/webhookTests": {
      "post": {
        "summary": "Send a test webhook",
        "description": "Send a test webhook",
        "operationId": "createNetworkHttpServersWebhookTest",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "createNetworkHttpServersWebhookTest",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "url": {
                  "description": "The URL where the test webhook will be sent",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "1234",
                "url": "https://www.example.com/path",
                "status": "enqueued"
              }
            }
          }
        },
        "tags": [
          "HTTP servers"
        ]
      }
    },
    "/networks/{networkId}/httpServers/webhookTests/{id}": {
      "get": {
        "summary": "Return the status of a webhook test",
        "description": "Return the status of a webhook test",
        "operationId": "getNetworkHttpServersWebhookTest",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "1234",
                "url": "https://www.example.com/path",
                "status": "delivered"
              }
            }
          }
        },
        "tags": [
          "HTTP servers"
        ]
      }
    },
    "/networks/{networkId}/devices/{serial}/managementInterfaceSettings": {
      "get": {
        "summary": "Return the management interface settings for a device",
        "description": "Return the management interface settings for a device",
        "operationId": "getNetworkDeviceManagementInterfaceSettings",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "wan1": {
                  "wanEnabled": "not configured",
                  "usingStaticIp": true,
                  "staticIp": "1.2.3.4",
                  "staticSubnetMask": "255.255.255.0",
                  "staticGatewayIp": "1.2.3.1",
                  "staticDns": [
                    "1.2.3.2",
                    "1.2.3.3"
                  ],
                  "vlan": 7
                },
                "wan2": {
                  "wanEnabled": "enabled",
                  "usingStaticIp": false,
                  "vlan": 2
                }
              }
            }
          }
        },
        "tags": [
          "Management interface settings"
        ]
      },
      "put": {
        "summary": "Update the management interface settings for a device",
        "description": "Update the management interface settings for a device",
        "operationId": "updateNetworkDeviceManagementInterfaceSettings",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkDeviceManagementInterfaceSettings",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "wan1": {
                  "type": "object",
                  "properties": {
                    "wanEnabled": {
                      "type": "string",
                      "enum": [
                        "enabled",
                        "disabled",
                        "not configured"
                      ],
                      "description": "Enable or disable the interface (only for MX devices). Valid values are 'enabled', 'disabled', and 'not configured'."
                    },
                    "usingStaticIp": {
                      "type": "boolean",
                      "description": "Configue the interface to have static IP settings or use DHCP."
                    },
                    "staticIp": {
                      "type": "string",
                      "description": "The IP the device should use on the WAN."
                    },
                    "staticGatewayIp": {
                      "type": "string",
                      "description": "The IP of the gateway on the WAN."
                    },
                    "staticSubnetMask": {
                      "type": "string",
                      "description": "The subnet mask for the WAN."
                    },
                    "staticDns": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Up to two DNS IPs."
                    },
                    "vlan": {
                      "type": "integer",
                      "description": "The VLAN that management traffic should be tagged with. Applies whether usingStaticIp is true or false."
                    }
                  },
                  "description": "WAN 1 settings"
                },
                "wan2": {
                  "type": "object",
                  "properties": {
                    "wanEnabled": {
                      "type": "string",
                      "enum": [
                        "enabled",
                        "disabled",
                        "not configured"
                      ],
                      "description": "Enable or disable the interface (only for MX devices). Valid values are 'enabled', 'disabled', and 'not configured'."
                    },
                    "usingStaticIp": {
                      "type": "boolean",
                      "description": "Configue the interface to have static IP settings or use DHCP."
                    },
                    "staticIp": {
                      "type": "string",
                      "description": "The IP the device should use on the WAN."
                    },
                    "staticGatewayIp": {
                      "type": "string",
                      "description": "The IP of the gateway on the WAN."
                    },
                    "staticSubnetMask": {
                      "type": "string",
                      "description": "The subnet mask for the WAN."
                    },
                    "staticDns": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Up to two DNS IPs."
                    },
                    "vlan": {
                      "type": "integer",
                      "description": "The VLAN that management traffic should be tagged with. Applies whether usingStaticIp is true or false."
                    }
                  },
                  "description": "WAN 2 settings (only for MX devices)"
                }
              },
              "example": {
                "wan1": {
                  "wanEnabled": "not configured",
                  "usingStaticIp": true,
                  "staticIp": "1.2.3.4",
                  "staticSubnetMask": "255.255.255.0",
                  "staticGatewayIp": "1.2.3.1",
                  "staticDns": [
                    "1.2.3.2",
                    "1.2.3.3"
                  ],
                  "vlan": 7
                },
                "wan2": {
                  "wanEnabled": "enabled",
                  "usingStaticIp": false,
                  "vlan": 2
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "wan1": {
                  "wanEnabled": "not configured",
                  "usingStaticIp": true,
                  "staticIp": "1.2.3.4",
                  "staticSubnetMask": "255.255.255.0",
                  "staticGatewayIp": "1.2.3.1",
                  "staticDns": [
                    "1.2.3.2",
                    "1.2.3.3"
                  ],
                  "vlan": 7
                },
                "wan2": {
                  "wanEnabled": "enabled",
                  "usingStaticIp": false,
                  "vlan": 2
                }
              }
            }
          }
        },
        "tags": [
          "Management interface settings"
        ]
      }
    },
    "/networks/{networkId}/merakiAuthUsers": {
      "get": {
        "summary": "List the splash or RADIUS users configured under Meraki Authentication for a network",
        "description": "List the splash or RADIUS users configured under Meraki Authentication for a network",
        "operationId": "getNetworkMerakiAuthUsers",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "id": "aGlAaGkuY29t",
                  "email": "miles@meraki.com",
                  "name": "Miles Meraki",
                  "createdAt": 1518365681,
                  "accountType": "Guest",
                  "authorizations": [
                    {
                      "authorizedZone": "Store WiFi",
                      "expiresAt": 1526087474,
                      "authorizedByName": "Miles Meraki",
                      "authorizedByEmail": "miles@meraki.com"
                    }
                  ]
                }
              ]
            }
          }
        },
        "tags": [
          "Meraki auth users"
        ]
      }
    },
    "/networks/{networkId}/merakiAuthUsers/{id}": {
      "get": {
        "summary": "Return the Meraki Auth splash or RADIUS user",
        "description": "Return the Meraki Auth splash or RADIUS user",
        "operationId": "getNetworkMerakiAuthUser",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "aGlAaGkuY29t",
                "email": "miles@meraki.com",
                "name": "Miles Meraki",
                "createdAt": 1518365681,
                "accountType": "Guest",
                "authorizations": [
                  {
                    "authorizedZone": "Store WiFi",
                    "expiresAt": 1526087474,
                    "authorizedByName": "Miles Meraki",
                    "authorizedByEmail": "miles@meraki.com"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Meraki auth users"
        ]
      }
    },
    "/networks/{networkId}/netflowSettings": {
      "get": {
        "summary": "Return the NetFlow traffic reporting settings for a network",
        "description": "Return the NetFlow traffic reporting settings for a network",
        "operationId": "getNetworkNetflowSettings",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "reportingEnabled": true,
                "collectorIp": "1.2.3.4",
                "collectorPort": 443
              }
            }
          }
        },
        "tags": [
          "NetFlow settings"
        ]
      },
      "put": {
        "summary": "Update the NetFlow traffic reporting settings for a network",
        "description": "Update the NetFlow traffic reporting settings for a network",
        "operationId": "updateNetworkNetflowSettings",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkNetflowSettings",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "reportingEnabled": {
                  "type": "boolean",
                  "description": "Boolean indicating whether NetFlow traffic reporting is enabled (true) or disabled (false)."
                },
                "collectorIp": {
                  "type": "string",
                  "description": "The IPv4 address of the NetFlow collector."
                },
                "collectorPort": {
                  "type": "integer",
                  "description": "The port that the NetFlow collector will be listening on."
                }
              },
              "example": {
                "reportingEnabled": true,
                "collectorIp": "1.2.3.4",
                "collectorPort": 443
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "reportingEnabled": true,
                "collectorIp": "1.2.3.4",
                "collectorPort": 443
              }
            }
          }
        },
        "tags": [
          "NetFlow settings"
        ]
      }
    },
    "/organizations/{organizationId}/openapiSpec": {
      "get": {
        "summary": "Return the OpenAPI 2.0 Specification of the organization's API documentation in JSON",
        "description": "Return the OpenAPI 2.0 Specification of the organization's API documentation in JSON",
        "operationId": "getOrganizationOpenapiSpec",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "swagger": "2.0",
                "info": {
                  "version": "0.1.0",
                  "title": "Meraki Dashboard API",
                  "description": "This collection of API calls provides an easy way to interact with a Cisco Meraki network"
                },
                "host": "api.meraki.com",
                "basePath": "/api/v0",
                "schemes": [
                  "https"
                ],
                "consumes": [
                  "application/json"
                ],
                "produces": [
                  "application/json"
                ],
                "securityDefinitions": {
                  "meraki_api_key": {
                    "type": "apiKey",
                    "name": "X-Cisco-Meraki-API-Key",
                    "in": "header"
                  }
                },
                "security": [
                  {
                    "meraki_api_key": [

                    ]
                  }
                ],
                "paths": {
                  "/pets": {
                    "get": {
                      "description": "Returns all pets from the system",
                      "operationId": "getPets",
                      "responses": {
                        "200": {
                          "description": "Successful operation",
                          "examples": {
                            "application/json": [
                              {
                                "id": 1,
                                "name": "Riley",
                                "type": "Cat"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "OpenAPI Spec"
        ]
      }
    },
    "/organizations": {
      "get": {
        "summary": "List the organizations that the user has privileges on",
        "description": "List the organizations that the user has privileges on",
        "operationId": "getOrganizations",
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "id": 2930418,
                  "name": "My organization"
                }
              ]
            }
          }
        },
        "tags": [
          "Organizations"
        ]
      },
      "post": {
        "summary": "Create a new organization",
        "description": "Create a new organization",
        "operationId": "createOrganization",
        "parameters": [
          {
            "name": "createOrganization",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of the organization",
                  "type": "string"
                }
              },
              "example": {
                "name": "My organization"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": 2930418,
                "name": "My organization"
              }
            }
          }
        },
        "tags": [
          "Organizations"
        ]
      }
    },
    "/organizations/{id}": {
      "get": {
        "summary": "Return an organization",
        "description": "Return an organization",
        "operationId": "getOrganization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": 2930418,
                "name": "My organization"
              }
            }
          }
        },
        "tags": [
          "Organizations"
        ]
      },
      "put": {
        "summary": "Update an organization",
        "description": "Update an organization",
        "operationId": "updateOrganization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateOrganization",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of the organization",
                  "type": "string"
                }
              },
              "example": {
                "name": "My organization"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": 2930418,
                "name": "My organization"
              }
            }
          }
        },
        "tags": [
          "Organizations"
        ]
      }
    },
    "/organizations/{id}/clone": {
      "post": {
        "summary": "Create a new organization by cloning the addressed organization",
        "description": "Create a new organization by cloning the addressed organization",
        "operationId": "cloneOrganization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "cloneOrganization",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of the new organization",
                  "type": "string"
                }
              },
              "example": {
                "name": "My organization"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": 2930418,
                "name": "My organization"
              }
            }
          }
        },
        "tags": [
          "Organizations"
        ]
      }
    },
    "/organizations/{id}/licenseState": {
      "get": {
        "summary": "Return the license state for an organization",
        "description": "Return the license state for an organization",
        "operationId": "getOrganizationLicenseState",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "status": "OK",
                "expirationDate": "Feb 8, 2020 UTC",
                "licensedDeviceCounts": {
                  "MS": 100
                }
              }
            }
          }
        },
        "tags": [
          "Organizations"
        ]
      }
    },
    "/organizations/{id}/inventory": {
      "get": {
        "summary": "Return the inventory for an organization",
        "description": "Return the inventory for an organization",
        "operationId": "getOrganizationInventory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "mac": "00:11:22:33:44:55",
                  "serial": "Q234-ABCD-5678",
                  "networkId": "N_24329156",
                  "model": "MR34",
                  "claimedAt": 1518365681.0,
                  "publicIp": "123.123.123.1",
                  "name": "My AP"
                }
              ]
            }
          }
        },
        "tags": [
          "Organizations"
        ]
      }
    },
    "/organizations/{id}/deviceStatuses": {
      "get": {
        "summary": "List the status of every Meraki device in the organization",
        "description": "List the status of every Meraki device in the organization",
        "operationId": "getOrganizationDeviceStatuses",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "name": "My AP",
                  "serial": "Q234-ABCD-5678",
                  "mac": "00:11:22:33:44:55",
                  "status": "online",
                  "lanIp": "1.2.3.4",
                  "publicIp": "123.123.123.1",
                  "networkId": "N_24329156"
                }
              ]
            }
          }
        },
        "tags": [
          "Organizations"
        ]
      }
    },
    "/organizations/{organizationId}/claim": {
      "post": {
        "summary": "Claim a device, license key, or order into an organization. When claiming by order, all devices and licenses in the order will be claimed; licenses will be added to the organization and devices will be placed in the organization's inventory. These three types of claims are mutually exclusive and cannot be performed in one request.",
        "description": "Claim a device, license key, or order into an organization. When claiming by order, all devices and licenses in the order will be claimed; licenses will be added to the organization and devices will be placed in the organization's inventory. These three types of claims are mutually exclusive and cannot be performed in one request.",
        "operationId": "claimOrganization",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "claimOrganization",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "order": {
                  "type": "string",
                  "description": "The order number that should be claimed"
                },
                "serial": {
                  "type": "string",
                  "description": "The serial of the device that should be claimed"
                },
                "licenseKey": {
                  "type": "string",
                  "description": "The license key that should be claimed"
                },
                "licenseMode": {
                  "type": "string",
                  "description": "Either 'renew' or 'addDevices'. 'addDevices' will increase the license limit, while 'renew' will extend the amount of time until expiration. This parameter is required when claiming by licenseKey. Please see <a target='_blank' href='https://documentation.meraki.com/zGeneral_Administration/Licensing/Adding_an_Enterprise_license_to_an_existing_Dashboard_account'>this article</a> for more information."
                }
              },
              "example": {
                "order": "4CXXXXXXX"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            }
          }
        },
        "tags": [
          "Organizations"
        ]
      }
    },
    "/organizations/{organizationId}/uplinksLossAndLatency": {
      "get": {
        "summary": "Return the uplink loss and latency for every MX in the organization from at latest 2 minutes ago",
        "description": "Return the uplink loss and latency for every MX in the organization from at latest 2 minutes ago",
        "operationId": "getOrganizationUplinksLossAndLatency",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "t0",
            "in": "query",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
          },
          {
            "type": "string",
            "name": "t1",
            "in": "query",
            "description": "The end of the timespan for the data. t1 can be a maximum of 5 minutes after t0. The latest possible time that t1 can be is 2 minutes into the past."
          },
          {
            "type": "integer",
            "name": "timespan",
            "in": "query",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 5 minutes. The default is 5 minutes."
          },
          {
            "type": "string",
            "name": "uplink",
            "in": "query",
            "description": "Optional filter for a specific WAN uplink. Valid uplinks are wan1, wan2, cellular. Default will return all uplinks."
          },
          {
            "type": "string",
            "name": "ip",
            "in": "query",
            "description": "Optional filter for a specific destination IP. Default will return all destination IPs."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "networkId": "N_12345",
                  "serial": "Q2AB-CDEF-GHIJ",
                  "uplink": "wan1",
                  "ip": "8.8.8.8",
                  "timeSeries": [
                    {
                      "ts": "2019-01-31T18:46:13Z",
                      "lossPercent": 5.3,
                      "latencyMs": 194.9
                    }
                  ]
                }
              ]
            }
          }
        },
        "tags": [
          "Organizations"
        ]
      }
    },
    "/organizations/{organizationId}/thirdPartyVPNPeers": {
      "get": {
        "summary": "Return the third party VPN peers for an organization",
        "description": "Return the third party VPN peers for an organization",
        "operationId": "getOrganizationThirdPartyVPNPeers",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "name": "My peer 1",
                  "publicIp": "123.123.123.1",
                  "privateSubnets": [
                    "192.168.1.0/24",
                    "192.168.128.0/24"
                  ],
                  "secret": "asdf1234",
                  "ipsecPolicies": {
                    "ikeCipherAlgo": [
                      "tripledes"
                    ],
                    "ikeAuthAlgo": [
                      "sha1"
                    ],
                    "ikeDiffieHellmanGroup": [
                      "group2"
                    ],
                    "ikeLifetime": 28800,
                    "childCipherAlgo": [
                      "aes128"
                    ],
                    "childAuthAlgo": [
                      "sha1"
                    ],
                    "childPfsGroup": [
                      "disabled"
                    ],
                    "childLifetime": 28800
                  }
                },
                {
                  "name": "My peer 2",
                  "publicIp": "123.123.123.2",
                  "privateSubnets": [
                    "192.168.2.0/24",
                    "192.168.129.0/24"
                  ],
                  "secret": "asdf56785678567856785678",
                  "ipsecPoliciesPreset": "default"
                }
              ]
            }
          }
        },
        "tags": [
          "Organizations"
        ]
      },
      "put": {
        "summary": "Update the third party VPN peers for an organization",
        "description": "Update the third party VPN peers for an organization",
        "operationId": "updateOrganizationThirdPartyVPNPeers",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateOrganizationThirdPartyVPNPeers",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "peers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the VPN peer"
                      },
                      "publicIp": {
                        "type": "string",
                        "description": "The public IP of the VPN peer"
                      },
                      "privateSubnets": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The list of the private subnets of the VPN peer"
                      },
                      "ipsecPolicies": {
                        "type": "object",
                        "properties": {
                          "ikeCipherAlgo": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "This is the cipher algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: 'aes256', 'aes192', 'aes128', 'tripledes', 'des'"
                          },
                          "ikeAuthAlgo": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "This is the authentication algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: 'sha1', 'md5'"
                          },
                          "ikeDiffieHellmanGroup": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "This is the Diffie-Hellman group to be used in Phase 1. The value should be an array with one of the following algorithms: 'group5', 'group2', 'group1'"
                          },
                          "ikeLifetime": {
                            "type": "integer",
                            "description": "The lifetime of the Phase 1 SA in seconds."
                          },
                          "childCipherAlgo": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "This is the cipher algorithms to be used in Phase 2. The value should be an array with one or more of the following algorithms: 'aes256', 'aes192', 'aes128', 'tripledes', 'des', 'null'"
                          },
                          "childAuthAlgo": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "This is the authentication algorithms to be used in Phase 2. The value should be an array with one of the following algorithms: 'sha1', 'md5'"
                          },
                          "childPfsGroup": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "This is the Diffie-Hellman group to be used for Perfect Forward Secrecy in Phase 2. The value should be an array with one of the following values: 'disabled', 'group5', 'group2', 'group1'"
                          },
                          "childLifetime": {
                            "type": "integer",
                            "description": "The lifetime of the Phase 2 SA in seconds."
                          }
                        },
                        "description": "Custom IPSec policies for the VPN peer. If not included and a preset has not been chosen, the default preset for IPSec policies will be used."
                      },
                      "ipsecPoliciesPreset": {
                        "type": "string",
                        "description": "One of the following available presets: 'default', 'aws', 'azure'. If this is provided, the 'ipsecPolicies' parameter is ignored."
                      },
                      "secret": {
                        "type": "string",
                        "description": "The shared secret with the VPN peer"
                      },
                      "networkTags": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "A list of network tags that will connect with this peer. Use ['all'] for all networks. Use ['none'] for no networks. If not included, the default is ['all']."
                      }
                    },
                    "required": [
                      "name",
                      "publicIp",
                      "privateSubnets",
                      "secret"
                    ]
                  },
                  "description": "The list of VPN peers"
                }
              },
              "example": {
                "peers": [
                  {
                    "name": "My peer 1",
                    "publicIp": "123.123.123.1",
                    "privateSubnets": [
                      "192.168.1.0/24",
                      "192.168.128.0/24"
                    ],
                    "secret": "asdf1234",
                    "ipsecPolicies": {
                      "ikeCipherAlgo": [
                        "tripledes"
                      ],
                      "ikeAuthAlgo": [
                        "sha1"
                      ],
                      "ikeDiffieHellmanGroup": [
                        "group2"
                      ],
                      "ikeLifetime": 28800,
                      "childCipherAlgo": [
                        "aes128"
                      ],
                      "childAuthAlgo": [
                        "sha1"
                      ],
                      "childPfsGroup": [
                        "disabled"
                      ],
                      "childLifetime": 28800
                    }
                  },
                  {
                    "name": "My peer 2",
                    "publicIp": "123.123.123.2",
                    "privateSubnets": [
                      "192.168.2.0/24",
                      "192.168.129.0/24"
                    ],
                    "secret": "asdf56785678567856785678",
                    "ipsecPoliciesPreset": "default"
                  }
                ]
              },
              "required": [
                "peers"
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "name": "My peer 1",
                  "publicIp": "123.123.123.1",
                  "privateSubnets": [
                    "192.168.1.0/24",
                    "192.168.128.0/24"
                  ],
                  "secret": "asdf1234",
                  "ipsecPolicies": {
                    "ikeCipherAlgo": [
                      "tripledes"
                    ],
                    "ikeAuthAlgo": [
                      "sha1"
                    ],
                    "ikeDiffieHellmanGroup": [
                      "group2"
                    ],
                    "ikeLifetime": 28800,
                    "childCipherAlgo": [
                      "aes128"
                    ],
                    "childAuthAlgo": [
                      "sha1"
                    ],
                    "childPfsGroup": [
                      "disabled"
                    ],
                    "childLifetime": 28800
                  }
                },
                {
                  "name": "My peer 2",
                  "publicIp": "123.123.123.2",
                  "privateSubnets": [
                    "192.168.2.0/24",
                    "192.168.129.0/24"
                  ],
                  "secret": "asdf56785678567856785678",
                  "ipsecPoliciesPreset": "default"
                }
              ]
            }
          }
        },
        "tags": [
          "Organizations"
        ]
      }
    },
    "/networks/{networkId}/pii/piiKeys": {
      "get": {
        "summary": "List the keys required to access Personally Identifiable Information (PII) for a given identifier. Exactly one identifier will be accepted. If the organization contains org-wide Systems Manager users matching the key provided then there will be an entry with the key \"0\" containing the applicable keys.",
        "description": "List the keys required to access Personally Identifiable Information (PII) for a given identifier. Exactly one identifier will be accepted. If the organization contains org-wide Systems Manager users matching the key provided then there will be an entry with the key \"0\" containing the applicable keys.\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/piiKeys\n```",
        "operationId": "getNetworkPiiPiiKeys",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "username",
            "in": "query",
            "description": "The username of a Systems Manager user"
          },
          {
            "type": "string",
            "name": "email",
            "in": "query",
            "description": "The email of a network user account or a Systems Manager device"
          },
          {
            "type": "string",
            "name": "mac",
            "in": "query",
            "description": "The MAC of a network client device or a Systems Manager device"
          },
          {
            "type": "string",
            "name": "serial",
            "in": "query",
            "description": "The serial of a Systems Manager device"
          },
          {
            "type": "string",
            "name": "imei",
            "in": "query",
            "description": "The IMEI of a Systems Manager device"
          },
          {
            "type": "string",
            "name": "bluetoothMac",
            "in": "query",
            "description": "The MAC of a Bluetooth client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "N_1234": {
                  "macs": [
                    "00:77:00:77:00:77"
                  ],
                  "emails": [
                    "fake@example.com"
                  ],
                  "usernames": [
                    "fakename"
                  ],
                  "serials": [
                    "abcd1234"
                  ],
                  "imeis": [
                    "990000862471854"
                  ],
                  "bluetoothMacs": [
                    "00:77:00:77:00:77"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "PII"
        ]
      }
    },
    "/networks/{networkId}/pii/smDevicesForKey": {
      "get": {
        "summary": "Given a piece of Personally Identifiable Information (PII), return the Systems Manager device ID(s) associated with that identifier. These device IDs can be used with the Systems Manager API endpoints to retrieve device details. Exactly one identifier will be accepted.",
        "description": "Given a piece of Personally Identifiable Information (PII), return the Systems Manager device ID(s) associated with that identifier. These device IDs can be used with the Systems Manager API endpoints to retrieve device details. Exactly one identifier will be accepted.\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/smDevicesForKey\n```",
        "operationId": "getNetworkPiiSmDevicesForKey",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "username",
            "in": "query",
            "description": "The username of a Systems Manager user"
          },
          {
            "type": "string",
            "name": "email",
            "in": "query",
            "description": "The email of a network user account or a Systems Manager device"
          },
          {
            "type": "string",
            "name": "mac",
            "in": "query",
            "description": "The MAC of a network client device or a Systems Manager device"
          },
          {
            "type": "string",
            "name": "serial",
            "in": "query",
            "description": "The serial of a Systems Manager device"
          },
          {
            "type": "string",
            "name": "imei",
            "in": "query",
            "description": "The IMEI of a Systems Manager device"
          },
          {
            "type": "string",
            "name": "bluetoothMac",
            "in": "query",
            "description": "The MAC of a Bluetooth client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "N_1234": [
                  "1099541095293",
                  "8348382288234"
                ]
              }
            }
          }
        },
        "tags": [
          "PII"
        ]
      }
    },
    "/networks/{networkId}/pii/smOwnersForKey": {
      "get": {
        "summary": "Given a piece of Personally Identifiable Information (PII), return the Systems Manager owner ID(s) associated with that identifier. These owner IDs can be used with the Systems Manager API endpoints to retrieve owner details. Exactly one identifier will be accepted.",
        "description": "Given a piece of Personally Identifiable Information (PII), return the Systems Manager owner ID(s) associated with that identifier. These owner IDs can be used with the Systems Manager API endpoints to retrieve owner details. Exactly one identifier will be accepted.\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/smOwnersForKey\n```",
        "operationId": "getNetworkPiiSmOwnersForKey",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "username",
            "in": "query",
            "description": "The username of a Systems Manager user"
          },
          {
            "type": "string",
            "name": "email",
            "in": "query",
            "description": "The email of a network user account or a Systems Manager device"
          },
          {
            "type": "string",
            "name": "mac",
            "in": "query",
            "description": "The MAC of a network client device or a Systems Manager device"
          },
          {
            "type": "string",
            "name": "serial",
            "in": "query",
            "description": "The serial of a Systems Manager device"
          },
          {
            "type": "string",
            "name": "imei",
            "in": "query",
            "description": "The IMEI of a Systems Manager device"
          },
          {
            "type": "string",
            "name": "bluetoothMac",
            "in": "query",
            "description": "The MAC of a Bluetooth client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "N_1234": [
                  "1099541095293"
                ]
              }
            }
          }
        },
        "tags": [
          "PII"
        ]
      }
    },
    "/networks/{networkId}/pii/requests": {
      "get": {
        "summary": "List the PII requests for this network or organization",
        "description": "List the PII requests for this network or organization\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/requests\n```",
        "operationId": "getNetworkPiiRequests",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "id": "1234",
                  "organizationWide": false,
                  "networkId": "N_1234",
                  "type": "delete",
                  "mac": "00:77:00:77:00:77",
                  "datasets": "['usage', 'events']",
                  "status": "Completed",
                  "createdAt": 1524692227,
                  "completedAt": 1524702227
                }
              ]
            }
          }
        },
        "tags": [
          "PII"
        ]
      },
      "post": {
        "summary": "Submit a new delete or restrict processing PII request",
        "description": "Submit a new delete or restrict processing PII request\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/requests\n```",
        "operationId": "createNetworkPiiRequest",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "createNetworkPiiRequest",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "delete",
                    "restrict processing"
                  ],
                  "description": "One of \"delete\" or \"restrict processing\""
                },
                "datasets": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The datasets related to the provided key that should be deleted. Only applies to \"delete\" requests. The value \"all\" will be expanded to all datasets applicable to this type. The datasets by applicable to each type are: mac (usage, events, traffic), email (users, loginAttempts), username (users, loginAttempts), bluetoothMac (client, connectivity), smDeviceId (device), smUserId (user)"
                },
                "username": {
                  "type": "string",
                  "description": "The username of a network log in. Only applies to \"delete\" requests."
                },
                "email": {
                  "type": "string",
                  "description": "The email of a network user account. Only applies to \"delete\" requests."
                },
                "mac": {
                  "type": "string",
                  "description": "The MAC of a network client device. Applies to both \"restrict processing\" and \"delete\" requests."
                },
                "smDeviceId": {
                  "type": "string",
                  "description": "The sm_device_id of a Systems Manager device. The only way to \"restrict processing\" or \"delete\" a Systems Manager device. Must include \"device\" in the dataset for a \"delete\" request to destroy the device."
                },
                "smUserId": {
                  "type": "string",
                  "description": "The sm_user_id of a Systems Manager user. The only way to \"restrict processing\" or \"delete\" a Systems Manager user. Must include \"user\" in the dataset for a \"delete\" request to destroy the user."
                }
              },
              "example": {
                "type": "delete",
                "datasets": [
                  "usage",
                  "events"
                ],
                "mac": "00:77:00:77:00:77"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "1234",
                "organizationWide": false,
                "networkId": "N_1234",
                "type": "delete",
                "mac": "00:77:00:77:00:77",
                "datasets": "['usage', 'events']",
                "status": "Not visible in Dashboard; database deletion in process",
                "createdAt": 1524692227,
                "completedAt": null
              }
            }
          }
        },
        "tags": [
          "PII"
        ]
      }
    },
    "/networks/{networkId}/pii/requests/{requestId}": {
      "get": {
        "summary": "Return a PII request",
        "description": "Return a PII request\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/requests/{requestId}\n```",
        "operationId": "getNetworkPiiRequest",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "requestId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "1234",
                "organizationWide": false,
                "networkId": "N_1234",
                "type": "delete",
                "mac": "00:77:00:77:00:77",
                "datasets": "['usage', 'events']",
                "status": "Completed",
                "createdAt": 1524692227,
                "completedAt": 1524702227
              }
            }
          }
        },
        "tags": [
          "PII"
        ]
      },
      "delete": {
        "summary": "Delete a restrict processing PII request",
        "description": "Delete a restrict processing PII request\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/requests/{requestId}\n```",
        "operationId": "deleteNetworkPiiRequest",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "requestId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          }
        },
        "tags": [
          "PII"
        ]
      }
    },
    "/networks/{networkId}/devices/{serial}/wireless/radioSettings": {
      "get": {
        "summary": "Return the radio settings of a device",
        "description": "Return the radio settings of a device",
        "operationId": "getNetworkDeviceWirelessRadioSettings",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "serial": "Q234-ABCD-5678",
                "rfProfileId": "1234"
              }
            }
          }
        },
        "tags": [
          "Radio settings"
        ]
      },
      "put": {
        "summary": "Update the radio settings of a device",
        "description": "Update the radio settings of a device",
        "operationId": "updateNetworkDeviceWirelessRadioSettings",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkDeviceWirelessRadioSettings",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "rfProfileId": {
                  "type": "integer",
                  "description": "The ID of an RF profile to assign to the device. If the value of this parameter is null, the appropriate basic RF profile\n(indoor or outdoor) will be assigned to the device. Assigning an RF profile will clear ALL manually configured overrides\non the device (channel width, channel, power).\n"
                }
              },
              "example": {
                "rfProfileId": "1234"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "serial": "Q234-ABCD-5678",
                "rfProfileId": "1234"
              }
            }
          }
        },
        "tags": [
          "Radio settings"
        ]
      }
    },
    "/networks/{networkId}/wireless/rfProfiles": {
      "get": {
        "summary": "List the non-basic RF profiles for this network",
        "description": "List the non-basic RF profiles for this network",
        "operationId": "getNetworkWirelessRfProfiles",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "boolean",
            "name": "includeTemplateProfiles",
            "in": "query",
            "description": "      If the network is bound to a template, this parameter controls whether or not the non-basic RF profiles defined on the template\n      should be included in the response alongside the non-basic profiles defined on the bound network. Defaults to false.\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "id": "1234",
                  "networkId": "N_24329156",
                  "name": "Some Custom RF Profile"
                }
              ]
            }
          }
        },
        "tags": [
          "Radio settings"
        ]
      }
    },
    "/organizations/{organizationId}/samlRoles": {
      "get": {
        "summary": "List the SAML roles for this organization",
        "description": "List the SAML roles for this organization",
        "operationId": "getOrganizationSamlRoles",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "id": "TEdJIEN1c3RvbWVy",
                  "role": "myrole",
                  "orgAccess": "none",
                  "networks": [
                    {
                      "id": "N_1234",
                      "access": "full"
                    }
                  ],
                  "tags": [
                    {
                      "tag": "west",
                      "access": "read-only"
                    }
                  ]
                }
              ]
            }
          }
        },
        "tags": [
          "SAML roles"
        ]
      },
      "post": {
        "summary": "Create a SAML role",
        "description": "Create a SAML role",
        "operationId": "createOrganizationSamlRole",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "createOrganizationSamlRole",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "role": {
                  "description": "The role of the SAML administrator",
                  "type": "string"
                },
                "orgAccess": {
                  "description": "The privilege of the SAML administrator on the organization",
                  "type": "string"
                },
                "tags": {
                  "description": "The list of tags that the SAML administrator has privileges on",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "tag": {
                        "description": "The name of the tag",
                        "type": "string"
                      },
                      "access": {
                        "description": "The privilege of the SAML administrator on the tag",
                        "type": "string"
                      }
                    }
                  }
                },
                "networks": {
                  "description": "The list of networks that the SAML administrator has privileges on",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "The network ID",
                        "type": "string"
                      },
                      "access": {
                        "description": "The privilege of the SAML administrator on the network",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "TEdJIEN1c3RvbWVy",
                "role": "myrole",
                "orgAccess": "none",
                "networks": [
                  {
                    "id": "N_1234",
                    "access": "full"
                  }
                ],
                "tags": [
                  {
                    "tag": "west",
                    "access": "read-only"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "SAML roles"
        ]
      }
    },
    "/organizations/{organizationId}/samlRoles/{id}": {
      "get": {
        "summary": "Return a SAML role",
        "description": "Return a SAML role",
        "operationId": "getOrganizationSamlRole",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "TEdJIEN1c3RvbWVy",
                "role": "myrole",
                "orgAccess": "none",
                "networks": [
                  {
                    "id": "N_1234",
                    "access": "full"
                  }
                ],
                "tags": [
                  {
                    "tag": "west",
                    "access": "read-only"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "SAML roles"
        ]
      },
      "put": {
        "summary": "Update a SAML role",
        "description": "Update a SAML role",
        "operationId": "updateOrganizationSamlRole",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateOrganizationSamlRole",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "role": {
                  "description": "The role of the SAML administrator",
                  "type": "string"
                },
                "orgAccess": {
                  "description": "The privilege of the SAML administrator on the organization",
                  "type": "string"
                },
                "tags": {
                  "description": "The list of tags that the SAML administrator has privileges on",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "tag": {
                        "description": "The name of the tag",
                        "type": "string"
                      },
                      "access": {
                        "description": "The privilege of the SAML administrator on the tag",
                        "type": "string"
                      }
                    }
                  }
                },
                "networks": {
                  "description": "The list of networks that the SAML administrator has privileges on",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "The network ID",
                        "type": "string"
                      },
                      "access": {
                        "description": "The privilege of the SAML administrator on the network",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "TEdJIEN1c3RvbWVy",
                "role": "myrole",
                "orgAccess": "none",
                "networks": [
                  {
                    "id": "N_1234",
                    "access": "full"
                  }
                ],
                "tags": [
                  {
                    "tag": "west",
                    "access": "read-only"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "SAML roles"
        ]
      },
      "delete": {
        "summary": "Remove a SAML role",
        "description": "Remove a SAML role",
        "operationId": "deleteOrganizationSamlRole",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "tags": [
          "SAML roles"
        ]
      }
    },
    "/networks/{networkId}/clients/{clientId}/securityEvents": {
      "get": {
        "summary": "List the security events for a client. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
        "description": "List the security events for a client. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
        "operationId": "getNetworkClientSecurityEvents",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "clientId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "t0",
            "in": "query",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 791 days from today."
          },
          {
            "type": "string",
            "name": "t1",
            "in": "query",
            "description": "The end of the timespan for the data. t1 can be a maximum of 791 days after t0."
          },
          {
            "type": "integer",
            "name": "timespan",
            "in": "query",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 791 days. The default is 31 days."
          },
          {
            "type": "integer",
            "name": "perPage",
            "in": "query",
            "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100."
          },
          {
            "type": "string",
            "name": "startingAfter",
            "in": "query",
            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          },
          {
            "type": "string",
            "name": "endingBefore",
            "in": "query",
            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "headers": {
              "Link": {
                "type": "string",
                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
              }
            },
            "examples": {
              "application/json": [
                {
                  "ts": 1547683314.270398,
                  "deviceMac": "00:18:0a:01:02:03",
                  "clientMac": "A1:B2:C3:D4:E5:F6",
                  "srcIp": "1.2.3.4:34195",
                  "destIp": "10.20.30.40:80",
                  "protocol": "tcp/ip",
                  "priority": "2",
                  "classification": "4",
                  "blocked": true,
                  "message": "SERVER-WEBAPP JBoss JMX console access attempt",
                  "signature": "1:21516:9",
                  "sigSource": ""
                },
                {
                  "ts": 1547683827.723265,
                  "deviceMac": "00:18:0a:01:02:03",
                  "clientMac": "A1:B2:C3:D4:E5:F6",
                  "srcIp": "1.2.3.4:56023",
                  "destIp": "10.20.30.40:80",
                  "protocol": "tcp/ip",
                  "priority": "1",
                  "classification": "33",
                  "blocked": true,
                  "message": "POLICY-OTHER Adobe ColdFusion admin interface access attempt",
                  "signature": "1:25975:2",
                  "sigSource": ""
                }
              ]
            }
          }
        },
        "tags": [
          "Security events"
        ]
      }
    },
    "/networks/{networkId}/securityEvents": {
      "get": {
        "summary": "List the security events for a network",
        "description": "List the security events for a network",
        "operationId": "getNetworkSecurityEvents",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "t0",
            "in": "query",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
          },
          {
            "type": "string",
            "name": "t1",
            "in": "query",
            "description": "The end of the timespan for the data. t1 can be a maximum of 365 days after t0."
          },
          {
            "type": "integer",
            "name": "timespan",
            "in": "query",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 365 days. The default is 31 days."
          },
          {
            "type": "integer",
            "name": "perPage",
            "in": "query",
            "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100."
          },
          {
            "type": "string",
            "name": "startingAfter",
            "in": "query",
            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          },
          {
            "type": "string",
            "name": "endingBefore",
            "in": "query",
            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "headers": {
              "Link": {
                "type": "string",
                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
              }
            },
            "examples": {
              "application/json": [
                {
                  "ts": 1547683314.270398,
                  "deviceMac": "00:18:0a:01:02:03",
                  "clientMac": "A1:B2:C3:D4:E5:F6",
                  "srcIp": "1.2.3.4:34195",
                  "destIp": "10.20.30.40:80",
                  "protocol": "tcp/ip",
                  "priority": "2",
                  "classification": "4",
                  "blocked": true,
                  "message": "SERVER-WEBAPP JBoss JMX console access attempt",
                  "signature": "1:21516:9",
                  "sigSource": ""
                },
                {
                  "ts": 1547683827.723265,
                  "deviceMac": "00:18:0a:01:02:03",
                  "clientMac": "A1:B2:C3:D4:E5:F6",
                  "srcIp": "1.2.3.4:56023",
                  "destIp": "10.20.30.40:80",
                  "protocol": "tcp/ip",
                  "priority": "1",
                  "classification": "33",
                  "blocked": true,
                  "message": "POLICY-OTHER Adobe ColdFusion admin interface access attempt",
                  "signature": "1:25975:2",
                  "sigSource": ""
                }
              ]
            }
          }
        },
        "tags": [
          "Security events"
        ]
      }
    },
    "/organizations/{organizationId}/securityEvents": {
      "get": {
        "summary": "List the security events for an organization",
        "description": "List the security events for an organization",
        "operationId": "getOrganizationSecurityEvents",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "t0",
            "in": "query",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
          },
          {
            "type": "string",
            "name": "t1",
            "in": "query",
            "description": "The end of the timespan for the data. t1 can be a maximum of 365 days after t0."
          },
          {
            "type": "integer",
            "name": "timespan",
            "in": "query",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 365 days. The default is 31 days."
          },
          {
            "type": "integer",
            "name": "perPage",
            "in": "query",
            "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100."
          },
          {
            "type": "string",
            "name": "startingAfter",
            "in": "query",
            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          },
          {
            "type": "string",
            "name": "endingBefore",
            "in": "query",
            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "headers": {
              "Link": {
                "type": "string",
                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
              }
            },
            "examples": {
              "application/json": [
                {
                  "ts": 1547683314.270398,
                  "deviceMac": "00:18:0a:01:02:03",
                  "clientMac": "A1:B2:C3:D4:E5:F6",
                  "srcIp": "1.2.3.4:34195",
                  "destIp": "10.20.30.40:80",
                  "protocol": "tcp/ip",
                  "priority": "2",
                  "classification": "4",
                  "blocked": true,
                  "message": "SERVER-WEBAPP JBoss JMX console access attempt",
                  "signature": "1:21516:9",
                  "sigSource": ""
                },
                {
                  "ts": 1547683827.723265,
                  "deviceMac": "00:18:0a:01:02:03",
                  "clientMac": "A1:B2:C3:D4:E5:F6",
                  "srcIp": "1.2.3.4:56023",
                  "destIp": "10.20.30.40:80",
                  "protocol": "tcp/ip",
                  "priority": "1",
                  "classification": "33",
                  "blocked": true,
                  "message": "POLICY-OTHER Adobe ColdFusion admin interface access attempt",
                  "signature": "1:25975:2",
                  "sigSource": ""
                }
              ]
            }
          }
        },
        "tags": [
          "Security events"
        ]
      }
    },
    "/networks/{networkId}/security/intrusionSettings": {
      "get": {
        "summary": "Returns all supported intrusion settings for an MX network",
        "description": "Returns all supported intrusion settings for an MX network",
        "operationId": "getNetworkSecurityIntrusionSettings",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "mode": "prevention",
                "idsRulesets": "balanced",
                "protectedNetworks": {
                  "useDefault": false,
                  "includedCidr": [
                    "10.0.0.0/8",
                    "127.0.0.0/8",
                    "169.254.0.0/16",
                    "172.16.0.0/12"
                  ],
                  "excludedCidr": [
                    "10.0.0.0/8",
                    "127.0.0.0/8"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Intrusion settings"
        ]
      },
      "put": {
        "summary": "Set the supported instrusion settings for an MX network",
        "description": "Set the supported instrusion settings for an MX network",
        "operationId": "updateNetworkSecurityIntrusionSettings",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkSecurityIntrusionSettings",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "mode": {
                  "description": "Set mode to 'disabled'/'detection'/'prevention' (optional - omitting will leave current config unchanged)",
                  "type": "string"
                },
                "idsRulesets": {
                  "description": "Set the detection ruleset 'connectivity'/'balanced'/'security' (optional - omitting will leave current config unchanged). Default value is 'balanced' if none currently saved",
                  "type": "string"
                },
                "protectedNetworks": {
                  "description": "Set the included/excluded networks from the intrusion engine (optional - omitting will leave current config unchanged)",
                  "type": "object",
                  "properties": {
                    "useDefault": {
                      "description": "true/false whether to use special IPv4 addresses: https://tools.ietf.org/html/rfc5735 (required). Default value is true if none currently saved",
                      "type": "boolean"
                    },
                    "includedCidr": {
                      "description": "list of IP addresses or subnets being protected (required if 'useDefault' is false)",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "excludedCidr": {
                      "description": "list of IP addresses or subnets being excluded from protection (required if 'useDefault' is false)",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "example": {
                "mode": "prevention",
                "idsRulesets": "balanced",
                "protectedNetworks": {
                  "useDefault": false,
                  "includedCidr": [
                    "10.0.0.0/8",
                    "127.0.0.0/8",
                    "169.254.0.0/16",
                    "172.16.0.0/12"
                  ],
                  "excludedCidr": [
                    "10.0.0.0/8",
                    "127.0.0.0/8"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "mode": "prevention",
                "idsRulesets": "balanced",
                "protectedNetworks": {
                  "useDefault": false,
                  "includedCidr": [
                    "10.0.0.0/8",
                    "127.0.0.0/8",
                    "169.254.0.0/16",
                    "172.16.0.0/12"
                  ],
                  "excludedCidr": [
                    "10.0.0.0/8",
                    "127.0.0.0/8"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Intrusion settings"
        ]
      }
    },
    "/organizations/{organizationId}/security/intrusionSettings": {
      "get": {
        "summary": "Returns all supported intrusion settings for an organization",
        "description": "Returns all supported intrusion settings for an organization",
        "operationId": "getOrganizationSecurityIntrusionSettings",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "whitelistedRules": [
                  {
                    "ruleId": "meraki:intrusion/snort/GID/01/SID/688",
                    "message": "SQL sa login failed"
                  },
                  {
                    "ruleId": "meraki:intrusion/snort/GID/01/SID/5805",
                    "message": "MALWARE-OTHER Trackware myway speedbar runtime detection - switch engines"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Intrusion settings"
        ]
      },
      "put": {
        "summary": "Sets supported intrusion settings for an organization",
        "description": "Sets supported intrusion settings for an organization",
        "operationId": "updateOrganizationSecurityIntrusionSettings",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateOrganizationSecurityIntrusionSettings",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "whitelistedRules": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "ruleId": {
                        "type": "string",
                        "description": "A rule identifier of the format meraki:intrusion/snort/GID/<gid>/SID/<sid>. gid and sid can be obtained from either https://www.snort.org/rule-docs or as ruleIds from the security events in /organization/[orgId]/securityEvents"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message is optional and is ignored on a PUT call. It is allowed in order for PUT to be compatible with GET"
                      }
                    },
                    "required": [
                      "ruleId"
                    ]
                  },
                  "description": "Sets a list of specific SNORT® signatures to whitelist"
                }
              },
              "example": {
                "whitelistedRules": [
                  {
                    "ruleId": "meraki:intrusion/snort/GID/01/SID/688",
                    "message": "SQL sa login failed"
                  },
                  {
                    "ruleId": "meraki:intrusion/snort/GID/01/SID/5805",
                    "message": "MALWARE-OTHER Trackware myway speedbar runtime detection - switch engines"
                  }
                ]
              },
              "required": [
                "whitelistedRules"
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "whitelistedRules": [
                  {
                    "ruleId": "meraki:intrusion/snort/GID/01/SID/688",
                    "message": "SQL sa login failed"
                  },
                  {
                    "ruleId": "meraki:intrusion/snort/GID/01/SID/5805",
                    "message": "MALWARE-OTHER Trackware myway speedbar runtime detection - switch engines"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Intrusion settings"
        ]
      }
    },
    "/networks/{networkId}/security/malwareSettings": {
      "get": {
        "summary": "Returns all supported malware settings for an MX network",
        "description": "Returns all supported malware settings for an MX network",
        "operationId": "getNetworkSecurityMalwareSettings",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "mode": "enabled",
                "allowedUrls": [
                  {
                    "url": "example.org",
                    "comment": "allow example.org"
                  },
                  {
                    "url": "help.com.au",
                    "comment": "allow help.com.au"
                  }
                ],
                "allowedFiles": [
                  {
                    "sha256": "e82c5f7d75004727e1f3b94426b9a11c8bc4c312a9170ac9a73abace40aef503",
                    "comment": "allow ZIP file"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Malware settings"
        ]
      },
      "put": {
        "summary": "Set the supported malware settings for an MX network",
        "description": "Set the supported malware settings for an MX network",
        "operationId": "updateNetworkSecurityMalwareSettings",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkSecurityMalwareSettings",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "mode": {
                  "description": "Set mode to 'enabled' to enable malware prevention, otherwise 'disabled'",
                  "type": "string"
                },
                "allowedUrls": {
                  "description": "The urls that should be permitted by the malware detection engine. If omitted, the current config will remain unchanged. This is available only if your network supports AMP whitelisting",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "url": {
                        "description": "The url to whitelist",
                        "type": "string"
                      },
                      "comment": {
                        "description": "Comment about the whitelisted entity",
                        "type": "string"
                      }
                    }
                  }
                },
                "allowedFiles": {
                  "description": "The sha256 digests of files that should be permitted by the malware detection engine. If omitted, the current config will remain unchanged. This is available only if your network supports AMP whitelisting",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "sha256": {
                        "description": "The file sha256 hash to whitelist",
                        "type": "string"
                      },
                      "comment": {
                        "description": "Comment about the whitelisted entity",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "example": {
                "mode": "enabled",
                "allowedUrls": [
                  {
                    "url": "example.org",
                    "comment": "allow example.org"
                  },
                  {
                    "url": "help.com.au",
                    "comment": "allow help.com.au"
                  }
                ],
                "allowedFiles": [
                  {
                    "sha256": "e82c5f7d75004727e1f3b94426b9a11c8bc4c312a9170ac9a73abace40aef503",
                    "comment": "allow ZIP file"
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "mode": "enabled",
                "allowedUrls": [
                  {
                    "url": "example.org",
                    "comment": "allow example.org"
                  },
                  {
                    "url": "help.com.au",
                    "comment": "allow help.com.au"
                  }
                ],
                "allowedFiles": [
                  {
                    "sha256": "e82c5f7d75004727e1f3b94426b9a11c8bc4c312a9170ac9a73abace40aef503",
                    "comment": "allow ZIP file"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Malware settings"
        ]
      }
    },
    "/networks/{networkId}/sm/targetGroups": {
      "get": {
        "summary": "List the target groups in this network",
        "description": "List the target groups in this network",
        "operationId": "getNetworkSmTargetGroups",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "boolean",
            "name": "withDetails",
            "in": "query",
            "description": "Boolean indicating if the the ids of the devices or users scoped by the target group should be included in the response"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "name": "My target group",
                  "scope": "none",
                  "tags": "[]",
                  "type": "devices"
                }
              ]
            }
          }
        },
        "tags": [
          "Named tag scope"
        ]
      },
      "post": {
        "summary": "Add a target group",
        "description": "Add a target group",
        "operationId": "createNetworkSmTargetGroup",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "createNetworkSmTargetGroup",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of this target group"
                },
                "scope": {
                  "type": "string",
                  "description": "The scope and tag options of the target group. Comma separated values beginning with one of withAny, withAll, withoutAny, withoutAll, all, none, followed by tags. Default to none if empty."
                }
              },
              "example": {
                "name": "My target group",
                "scope": "none",
                "tags": "[]",
                "type": "devices"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "name": "My target group",
                "scope": "none",
                "tags": "[]",
                "type": "devices"
              }
            }
          }
        },
        "tags": [
          "Named tag scope"
        ]
      }
    },
    "/networks/{networkId}/sm/targetGroups/{targetGroupId}": {
      "get": {
        "summary": "Return a target group",
        "description": "Return a target group",
        "operationId": "getNetworkSmTargetGroup",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "targetGroupId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "boolean",
            "name": "withDetails",
            "in": "query",
            "description": "Boolean indicating if the the ids of the devices or users scoped by the target group should be included in the response"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "name": "My target group",
                "scope": "none",
                "tags": "[]",
                "type": "devices"
              }
            }
          }
        },
        "tags": [
          "Named tag scope"
        ]
      },
      "put": {
        "summary": "Update a target group",
        "description": "Update a target group",
        "operationId": "updateNetworkSmTargetGroup",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "targetGroupId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkSmTargetGroup",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of this target group"
                },
                "scope": {
                  "type": "string",
                  "description": "The scope and tag options of the target group. Comma separated values beginning with one of withAny, withAll, withoutAny, withoutAll, all, none, followed by tags. Default to none if empty."
                }
              },
              "example": {
                "name": "My target group",
                "scope": "none",
                "tags": "[]",
                "type": "devices"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "name": "My target group",
                "scope": "none",
                "tags": "[]",
                "type": "devices"
              }
            }
          }
        },
        "tags": [
          "Named tag scope"
        ]
      },
      "delete": {
        "summary": "Delete a target group from a network",
        "description": "Delete a target group from a network",
        "operationId": "deleteNetworkSmTargetGroup",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "targetGroupId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          }
        },
        "tags": [
          "Named tag scope"
        ]
      }
    },
    "/networks/{network_id}/sm/profile/clarity": {
      "post": {
        "summary": "Create a new profile containing a Cisco Clarity payload",
        "description": "Create a new profile containing a Cisco Clarity payload",
        "operationId": "createNetworkSmProfileClarity",
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "createNetworkSmProfileClarity",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name to be given to the new profile",
                  "type": "string"
                },
                "scope": {
                  "description": "The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be assigned",
                  "type": "string"
                },
                "PluginBundleID": {
                  "description": "The bundle ID of the application, defaults to com.cisco.ciscosecurity.app",
                  "type": "string"
                },
                "FilterBrowsers": {
                  "description": "Whether or not to enable browser traffic filtering (one of true, false). Default true.",
                  "type": "string"
                },
                "FilterSockets": {
                  "description": "Whether or not to enable socket traffic filtering (one of true, false). Default true.",
                  "type": "string"
                },
                "VendorConfig": {
                  "description": "The specific VendorConfig to be passed to the filtering framework, as JSON. VendorConfig should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name\n",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            }
          }
        },
        "tags": [
          "SM"
        ]
      }
    },
    "/networks/{network_id}/sm/profile/clarity/{profileId}": {
      "put": {
        "summary": "Update an existing profile containing a Cisco Clarity payload",
        "description": "Update an existing profile containing a Cisco Clarity payload",
        "operationId": "updateNetworkSmProfileClarity",
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "profileId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkSmProfileClarity",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "optional: A new name for the profile",
                  "type": "string"
                },
                "scope": {
                  "description": "optional: A new scope for the profile (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be assigned",
                  "type": "string"
                },
                "PluginBundleID": {
                  "description": "optional: The new bundle ID of the application",
                  "type": "string"
                },
                "FilterBrowsers": {
                  "description": "optional: Whether or not to enable browser traffic filtering (one of true, false).",
                  "type": "string"
                },
                "FilterSockets": {
                  "description": "optional: Whether or not to enable socket traffic filtering (one of true, false).",
                  "type": "string"
                },
                "VendorConfig": {
                  "description": "optional: The specific VendorConfig to be passed to the filtering framework, as JSON. VendorConfig should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name\n",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            }
          }
        },
        "tags": [
          "SM"
        ]
      },
      "post": {
        "summary": "Add a Cisco Clarity payload to an existing profile",
        "description": "Add a Cisco Clarity payload to an existing profile",
        "operationId": "addNetworkSmProfileClarity",
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "profileId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "addNetworkSmProfileClarity",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "PluginBundleID": {
                  "description": "The bundle ID of the application, defaults to com.cisco.ciscosecurity.app",
                  "type": "string"
                },
                "FilterBrowsers": {
                  "description": "Whether or not to enable browser traffic filtering (one of true, false).",
                  "type": "string"
                },
                "FilterSockets": {
                  "description": "Whether or not to enable socket traffic filtering (one of true, false).",
                  "type": "string"
                },
                "VendorConfig": {
                  "description": "The specific VendorConfig to be passed to the filtering framework, as JSON. VendorConfig should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name\n",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            }
          }
        },
        "tags": [
          "SM"
        ]
      },
      "get": {
        "summary": "Get details for a Cisco Clarity payload",
        "description": "Get details for a Cisco Clarity payload",
        "operationId": "getNetworkSmProfileClarity",
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "profileId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            }
          }
        },
        "tags": [
          "SM"
        ]
      },
      "delete": {
        "summary": "Delete a Cisco Clarity payload. Deletes the entire profile if it's empty after removing the payload.",
        "description": "Delete a Cisco Clarity payload. Deletes the entire profile if it's empty after removing the payload.",
        "operationId": "deleteNetworkSmProfileClarity",
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "profileId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "tags": [
          "SM"
        ]
      }
    },
    "/networks/{network_id}/sm/profile/umbrella": {
      "post": {
        "summary": "Create a new profile containing a Cisco Umbrella payload",
        "description": "Create a new profile containing a Cisco Umbrella payload",
        "operationId": "createNetworkSmProfileUmbrella",
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "createNetworkSmProfileUmbrella",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name to be given to the new profile",
                  "type": "string"
                },
                "scope": {
                  "description": "The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be assigned",
                  "type": "string"
                },
                "AppBundleIdentifier": {
                  "description": "The bundle ID of the application, defaults to com.cisco.ciscosecurity.app",
                  "type": "string"
                },
                "ProviderBundleIdentifier": {
                  "description": "The bundle ID of the provider, defaults to com.cisco.ciscosecurity.app.CiscoUmbrella",
                  "type": "string"
                },
                "ProviderConfiguration": {
                  "description": "The specific ProviderConfiguration to be passed to the filtering framework, as JSON. ProviderConfiguration should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name\n",
                  "type": "string"
                },
                "usesCert": {
                  "description": "Whether the certificate should be attached to this profile (one of true, false).",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            }
          }
        },
        "tags": [
          "SM"
        ]
      }
    },
    "/networks/{network_id}/sm/profile/umbrella/{profileId}": {
      "put": {
        "summary": "Update an existing profile containing a Cisco Umbrella payload",
        "description": "Update an existing profile containing a Cisco Umbrella payload",
        "operationId": "updateNetworkSmProfileUmbrella",
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "profileId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkSmProfileUmbrella",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "optional: A new name for the profile",
                  "type": "string"
                },
                "scope": {
                  "description": "optional: A new scope for the profile (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be assigned",
                  "type": "string"
                },
                "AppBundleIdentifier": {
                  "description": "optional: The bundle ID of the application",
                  "type": "string"
                },
                "ProviderBundleIdentifier": {
                  "description": "optional: The bundle ID of the provider",
                  "type": "string"
                },
                "ProviderConfiguration": {
                  "description": "optional: The specific ProviderConfiguration to be passed to the filtering framework, as JSON. ProviderConfiguration should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name\n",
                  "type": "string"
                },
                "usesCert": {
                  "description": "Whether the certificate should be attached to this profile (one of true, false). False by default.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            }
          }
        },
        "tags": [
          "SM"
        ]
      },
      "post": {
        "summary": "Add a Cisco Umbrella payload to an existing profile",
        "description": "Add a Cisco Umbrella payload to an existing profile",
        "operationId": "addNetworkSmProfileUmbrella",
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "profileId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "addNetworkSmProfileUmbrella",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "AppBundleIdentifier": {
                  "description": "The bundle ID of the application, defaults to com.cisco.ciscosecurity.app",
                  "type": "string"
                },
                "ProviderBundleIdentifier": {
                  "description": "The bundle ID of the provider, defaults to com.cisco.ciscosecurity.app.CiscoUmbrella",
                  "type": "string"
                },
                "ProviderConfiguration": {
                  "description": "The specific ProviderConfiguration to be passed to the filtering framework, as JSON. ProviderConfiguration should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name\n",
                  "type": "string"
                },
                "usesCert": {
                  "description": "Whether the certificate should be attached to this profile (one of true, false). False by default.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            }
          }
        },
        "tags": [
          "SM"
        ]
      },
      "get": {
        "summary": "Get details for a Cisco Umbrella payload",
        "description": "Get details for a Cisco Umbrella payload",
        "operationId": "getNetworkSmProfileUmbrella",
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "profileId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            }
          }
        },
        "tags": [
          "SM"
        ]
      },
      "delete": {
        "summary": "Delete a Cisco Umbrella payload. Deletes the entire profile if it's empty after removing the payload",
        "description": "Delete a Cisco Umbrella payload. Deletes the entire profile if it's empty after removing the payload",
        "operationId": "deleteNetworkSmProfileUmbrella",
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "profileId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "tags": [
          "SM"
        ]
      }
    },
    "/networks/{network_id}/sm/app/polaris": {
      "post": {
        "summary": "Create a new Polaris app",
        "description": "Create a new Polaris app",
        "operationId": "createNetworkSmAppPolaris",
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "createNetworkSmAppPolaris",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "scope": {
                  "description": "The scope (one of all, none, automatic, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be assigned",
                  "type": "string"
                },
                "manifestUrl": {
                  "description": "The manifest URL of the Polaris app (one of manifestUrl and bundleId must be provided)",
                  "type": "string"
                },
                "bundleId": {
                  "description": "The bundleId of the Polaris app (one of manifestUrl and bundleId must be provided)",
                  "type": "string"
                },
                "preventAutoInstall": {
                  "description": "(optional) Whether or not SM should auto-install this app (one of true or false). False by default.",
                  "type": "string"
                },
                "usesVPP": {
                  "description": "(optional) Whether or not the app should use VPP by device assignment (one of true or false). False by default.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            }
          }
        },
        "tags": [
          "SM"
        ]
      },
      "get": {
        "summary": "Get details for a Cisco Polaris app if it exists",
        "description": "Get details for a Cisco Polaris app if it exists",
        "operationId": "getNetworkSmAppPolaris",
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "bundleId",
            "description": "The bundle ID of the app to be found, defaults to com.cisco.ciscosecurity.app",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            }
          }
        },
        "tags": [
          "SM"
        ]
      }
    },
    "/networks/{network_id}/sm/app/polaris/{appId}": {
      "put": {
        "summary": "Update an existing Polaris app",
        "description": "Update an existing Polaris app",
        "operationId": "updateNetworkSmAppPolaris",
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "appId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkSmAppPolaris",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "scope": {
                  "description": "The scope (one of all, none, automatic, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be assigned",
                  "type": "string"
                },
                "preventAutoInstall": {
                  "description": "Whether or not SM should auto-install this app (one of true or false). False by default.",
                  "type": "string"
                },
                "usesVPP": {
                  "description": "Whether or not the app should use VPP by device assignment (one of true or false). False by default.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            }
          }
        },
        "tags": [
          "SM"
        ]
      },
      "delete": {
        "summary": "Delete a Cisco Polaris app",
        "description": "Delete a Cisco Polaris app",
        "operationId": "deleteNetworkSmAppPolaris",
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "appId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "tags": [
          "SM"
        ]
      }
    },
    "/networks/{network_id}/sm/{id}/performanceHistory": {
      "get": {
        "summary": "Return historical records of various Systems Manager client metrics for desktop devices.",
        "description": "Return historical records of various Systems Manager client metrics for desktop devices.",
        "operationId": "getNetworkSmPerformanceHistory",
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "perPage",
            "description": "The number of entries per page returned",
            "in": "query",
            "type": "string"
          },
          {
            "name": "startingAfter",
            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it.",
            "in": "query",
            "type": "string"
          },
          {
            "name": "endingBefore",
            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it.",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "cpuPercentUsed": 0.95,
                  "memFree": 1024,
                  "memWired": 4096,
                  "memActive": 1024,
                  "memInactive": 2048,
                  "networkSent": 512,
                  "networkReceived": 512,
                  "swapUsed": 768,
                  "diskUsage": {
                    "c": {
                      "used": 2048,
                      "space": 9096
                    }
                  },
                  "ts": 1526087474.0
                }
              ]
            }
          }
        },
        "tags": [
          "SM"
        ]
      }
    },
    "/networks/{network_id}/sm/{id}/desktopLogs": {
      "get": {
        "summary": "Return historical records of various Systems Manager network connection details for desktop devices.",
        "description": "Return historical records of various Systems Manager network connection details for desktop devices.",
        "operationId": "getNetworkSmDesktopLogs",
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "perPage",
            "description": "The number of entries per page returned",
            "in": "query",
            "type": "string"
          },
          {
            "name": "startingAfter",
            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it.",
            "in": "query",
            "type": "string"
          },
          {
            "name": "endingBefore",
            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it.",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "measuredAt": 1526087474.0,
                  "user": "milesmeraki",
                  "networkDevice": "NIC",
                  "networkDriver": "Driver",
                  "wifiChannel": "11",
                  "wifiAuth": "wpa-psk",
                  "wifiBssid": "00:11:22:33:44:55",
                  "wifiSsid": "ssid",
                  "wifiRssi": "-11",
                  "wifiNoise": "-99",
                  "dhcpServer": "1.2.3.4",
                  "ip": "1.2.3.4",
                  "networkMTU": "1500",
                  "subnet": "192.168.1.0/24",
                  "gateway": "1.2.3.5",
                  "publicIP": "123.123.123.1",
                  "dnsServer": "8",
                  "ts": 1526087474.0
                }
              ]
            }
          }
        },
        "tags": [
          "SM"
        ]
      }
    },
    "/networks/{network_id}/sm/{id}/deviceCommandLogs": {
      "get": {
        "summary": "    Return historical records of commands sent to Systems Manager devices.\n    <p>Note that this will include the name of the Dashboard user who initiated the command if it was generated\n    by a Dashboard admin rather than the automatic behavior of the system; you may wish to filter this out\n    of any reports.</p>\n",
        "description": "    Return historical records of commands sent to Systems Manager devices.\n    <p>Note that this will include the name of the Dashboard user who initiated the command if it was generated\n    by a Dashboard admin rather than the automatic behavior of the system; you may wish to filter this out\n    of any reports.</p>\n",
        "operationId": "getNetworkSmDeviceCommandLogs",
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "perPage",
            "description": "The number of entries per page returned",
            "in": "query",
            "type": "string"
          },
          {
            "name": "startingAfter",
            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it.",
            "in": "query",
            "type": "string"
          },
          {
            "name": "endingBefore",
            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it.",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "action": "UpdateProfile",
                "name": "My profile",
                "details": "{}",
                "dashboardUser": "Miles Meraki",
                "ts": 1526087474.0
              }
            }
          }
        },
        "tags": [
          "SM"
        ]
      }
    },
    "/networks/{network_id}/sm/{id}/connectivity": {
      "get": {
        "summary": "Returns historical connectivity data (whether a device is regularly checking in to Dashboard).",
        "description": "Returns historical connectivity data (whether a device is regularly checking in to Dashboard).",
        "operationId": "getNetworkSmConnectivity",
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "perPage",
            "description": "The number of entries per page returned",
            "in": "query",
            "type": "string"
          },
          {
            "name": "startingAfter",
            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it.",
            "in": "query",
            "type": "string"
          },
          {
            "name": "endingBefore",
            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it.",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "firstSeenAt": 1518365681.0,
                "lastSeenAt": 1526087474.0
              }
            }
          }
        },
        "tags": [
          "SM"
        ]
      }
    },
    "/networks/{networkId}/sm/devices": {
      "get": {
        "summary": "List the devices enrolled in an SM network with various specified fields and filters",
        "description": "List the devices enrolled in an SM network with various specified fields and filters",
        "operationId": "getNetworkSmDevices",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "fields",
            "in": "query",
            "description": "Additional fields that will be displayed for each device. Multiple fields can be passed in as comma separated values.\n    The default fields are: id, name, tags, ssid, wifiMac, osName, systemModel, uuid, and serialNumber. The additional fields are: ip,\n    systemType, availableDeviceCapacity, kioskAppName, biosVersion, lastConnected, missingAppsCount, userSuppliedAddress, location, lastUser,\n    ownerEmail, ownerUsername, publicIp, phoneNumber, diskInfoJson, deviceCapacity, isManaged, hadMdm, isSupervised, meid, imei, iccid,\n    simCarrierNetwork, cellularDataUsed, isHotspotEnabled, createdAt, batteryEstCharge, quarantined, avName, avRunning, asName, fwName,\n    isRooted, loginRequired, screenLockEnabled, screenLockDelay, autoLoginDisabled, autoTags, hasMdm, hasDesktopAgent, diskEncryptionEnabled,\n    hardwareEncryptionCaps, passCodeLock, usesHardwareKeystore, and androidSecurityPatchVersion."
          },
          {
            "type": "string",
            "name": "wifiMacs",
            "in": "query",
            "description": "Filter devices by wifi mac(s). Multiple wifi macs can be passed in as comma separated values."
          },
          {
            "type": "string",
            "name": "serials",
            "in": "query",
            "description": "Filter devices by serial(s). Multiple serials can be passed in as comma separated values."
          },
          {
            "type": "string",
            "name": "ids",
            "in": "query",
            "description": "Filter devices by id(s). Multiple ids can be passed in as comma separated values."
          },
          {
            "type": "string",
            "name": "scope",
            "in": "query",
            "description": "Specify a scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags as comma separated values."
          },
          {
            "type": "string",
            "name": "batchToken",
            "in": "query",
            "description": "On networks with more than 1000 devices, the device list will be limited to 1000 devices per query.\n    If there are more devices to be seen, a batch token will be returned as a part of the device list. To see the remainder of\n    the devices, pass in the batchToken as a parameter in the next request. Requests made with the batchToken do not require\n    additional parameters as the batchToken includes the parameters passed in with the original request. Additional parameters\n    passed in with the batchToken will be ignored."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "devices": [
                  {
                    "id": "1284392014819",
                    "name": "Miles's phone",
                    "tags": [
                      "tag1",
                      "tag2"
                    ],
                    "ssid": "My SSID",
                    "wifiMac": "00:11:22:33:44:55",
                    "osName": "iOS 9.3.5",
                    "systemModel": "iPhone",
                    "uuid": "3d990628ede4c628d52",
                    "serialNumber": "F5XKHEBX",
                    "ip": "1.2.3.4"
                  }
                ],
                "batchToken": "MMbCbpHZtG3TKUCr9B9uc5"
              }
            }
          }
        },
        "tags": [
          "SM"
        ]
      }
    },
    "/networks/{networkId}/sm/users": {
      "get": {
        "summary": "List the owners in an SM network with various specified fields and filters",
        "description": "List the owners in an SM network with various specified fields and filters",
        "operationId": "getNetworkSmUsers",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "ids",
            "in": "query",
            "description": "Filter users by id(s). Multiple ids can be passed in as comma separated values."
          },
          {
            "type": "string",
            "name": "usernames",
            "in": "query",
            "description": "Filter users by username(s). Multiple usernames can be passed in as comma separated values."
          },
          {
            "type": "string",
            "name": "emails",
            "in": "query",
            "description": "Filter users by email(s). Multiple emails can be passed in as comma separated values."
          },
          {
            "type": "string",
            "name": "scope",
            "in": "query",
            "description": "Specifiy a scope (one of all, none, withAny, withAll, withoutAny, withoutAll) and a set of tags as comma separated values."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "1234",
                "email": "miles@meraki.com",
                "fullName": "Miles Meraki",
                "username": "",
                "hasPassword": false,
                "tags": [
                  "tag1",
                  "tag2"
                ],
                "adGroups": [

                ],
                "asmGroups": [

                ],
                "isExternal": false,
                "displayName": "Miles Meraki <miles@meraki.com>",
                "hasIdentityCertificate": false,
                "userThumbnail": "https://s3.amazonaws.com/image.extension"
              }
            }
          }
        },
        "tags": [
          "SM"
        ]
      }
    },
    "/networks/{networkId}/sm/user/{userId}/deviceProfiles": {
      "get": {
        "summary": "Get the profiles associated with a user",
        "description": "Get the profiles associated with a user",
        "operationId": "getNetworkSmUserDeviceProfiles",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "userId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "1284392014819",
                "isEncrypted": true,
                "isManaged": true,
                "profileData": {

                },
                "profileIdentifier": "com.test.app",
                "name": "My profile",
                "version": "0.0.1"
              }
            }
          }
        },
        "tags": [
          "SM"
        ]
      }
    },
    "/networks/{networkId}/sm/{deviceId}/deviceProfiles": {
      "get": {
        "summary": "Get the profiles associated with a device",
        "description": "Get the profiles associated with a device",
        "operationId": "getNetworkSmDeviceProfiles",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "deviceId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "1284392014819",
                "isEncrypted": true,
                "isManaged": true,
                "profileData": {

                },
                "profileIdentifier": "com.test.app",
                "name": "My profile",
                "version": "0.0.1"
              }
            }
          }
        },
        "tags": [
          "SM"
        ]
      }
    },
    "/networks/{networkId}/sm/user/{userId}/softwares": {
      "get": {
        "summary": "Get a list of softwares associated with a user",
        "description": "Get a list of softwares associated with a user",
        "operationId": "getNetworkSmUserSoftwares",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "userId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "bundleSize": null,
                  "createdAt": "2018-02-11T00:00:00Z",
                  "dynamicSize": null,
                  "id": "1284392014819",
                  "identifier": "com.test.app",
                  "installedAt": "2018-05-12T00:00:00Z",
                  "toInstall": null,
                  "iosRedemptionCode": null,
                  "isManaged": true,
                  "itunesId": null,
                  "licenseKey": null,
                  "name": "My app",
                  "path": "/Path/to/app.app",
                  "redemptionCode": null,
                  "shortVersion": null,
                  "status": null,
                  "toUninstall": false,
                  "uninstalledAt": null,
                  "updatedAt": "2018-05-12T00:00:00Z",
                  "vendor": "Apple",
                  "version": "0.1"
                }
              ]
            }
          }
        },
        "tags": [
          "SM"
        ]
      }
    },
    "/networks/{networkId}/sm/{deviceId}/softwares": {
      "get": {
        "summary": "Get a list of softwares associated with a device",
        "description": "Get a list of softwares associated with a device",
        "operationId": "getNetworkSmSoftwares",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "deviceId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "bundleSize": null,
                  "createdAt": "2018-02-11T00:00:00Z",
                  "dynamicSize": null,
                  "id": "1284392014819",
                  "identifier": "com.test.app",
                  "installedAt": "2018-05-12T00:00:00Z",
                  "toInstall": null,
                  "iosRedemptionCode": null,
                  "isManaged": true,
                  "itunesId": null,
                  "licenseKey": null,
                  "name": "My app",
                  "path": "/Path/to/app.app",
                  "redemptionCode": null,
                  "shortVersion": null,
                  "status": null,
                  "toUninstall": false,
                  "uninstalledAt": null,
                  "updatedAt": "2018-05-12T00:00:00Z",
                  "vendor": "Apple",
                  "version": "0.1"
                }
              ]
            }
          }
        },
        "tags": [
          "SM"
        ]
      }
    },
    "/networks/{networkId}/sm/{deviceId}/networkAdapters": {
      "get": {
        "summary": "List the network adapters of a device",
        "description": "List the network adapters of a device",
        "operationId": "getNetworkSmNetworkAdapters",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "deviceId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "dhcpServer": "123.123.123.1",
                  "dnsServer": "8.8.8.8, 8.8.4.4",
                  "gateway": "1.2.3.5",
                  "id": "1284392014819",
                  "ip": "1.2.3.4",
                  "mac": "00:11:22:33:44:55",
                  "name": "en0",
                  "subnet": "255.255.255.0"
                }
              ]
            }
          }
        },
        "tags": [
          "SM"
        ]
      }
    },
    "/networks/{networkId}/sm/{deviceId}/wlanLists": {
      "get": {
        "summary": "List the saved SSID names on a device",
        "description": "List the saved SSID names on a device",
        "operationId": "getNetworkSmWlanLists",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "deviceId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "createdAt": "2018-02-11T00:00:00Z",
                  "id": "1284392014819",
                  "xml": "Preferred networks on en0:"
                }
              ]
            }
          }
        },
        "tags": [
          "SM"
        ]
      }
    },
    "/networks/{networkId}/sm/{deviceId}/securityCenters": {
      "get": {
        "summary": "List the security centers on a device",
        "description": "List the security centers on a device",
        "operationId": "getNetworkSmSecurityCenters",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "deviceId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "isRooted": true,
                  "hasAntiVirus": true,
                  "antiVirusName": "meraki_av",
                  "isFireWallEnabled": true,
                  "hasFireWallInstalled": true,
                  "fireWallName": "meraki_fw",
                  "isDiskEncrypted": true,
                  "isAutoLoginDisabled": true,
                  "id": "1284392014819",
                  "runningProcs": "/software,/software_2"
                }
              ]
            }
          }
        },
        "tags": [
          "SM"
        ]
      }
    },
    "/networks/{networkId}/sm/{deviceId}/restrictions": {
      "get": {
        "summary": "List the restrictions on a device",
        "description": "List the restrictions on a device",
        "operationId": "getNetworkSmRestrictions",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "deviceId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "profile": "com.meraki.sm.1",
                  "restrictions": {
                    "myRestriction": {
                      "value": true
                    }
                  }
                }
              ]
            }
          }
        },
        "tags": [
          "SM"
        ]
      }
    },
    "/networks/{networkId}/sm/{deviceId}/certs": {
      "get": {
        "summary": "List the certs on a device",
        "description": "List the certs on a device",
        "operationId": "getNetworkSmCerts",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "deviceId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "name": "My Cert",
                  "notValidAfter": "May 12, 2018",
                  "notValidBefore": "Feb 11, 2018",
                  "certPem": "-----BEGIN CERTIFICATE-----\n-----END CERTIFICATE-----\n",
                  "issuer": "",
                  "subject": "",
                  "id": 15
                }
              ]
            }
          }
        },
        "tags": [
          "SM"
        ]
      }
    },
    "/networks/{networkId}/sm/devices/tags": {
      "put": {
        "summary": "Add, delete, or update the tags of a set of devices",
        "description": "Add, delete, or update the tags of a set of devices",
        "operationId": "updateNetworkSmDevicesTags",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkSmDevicesTags",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "wifiMacs": {
                  "type": "string",
                  "description": "The wifiMacs of the devices to be modified."
                },
                "ids": {
                  "type": "string",
                  "description": "The ids of the devices to be modified."
                },
                "serials": {
                  "type": "string",
                  "description": "The serials of the devices to be modified."
                },
                "scope": {
                  "type": "string",
                  "description": "The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be modified."
                },
                "tags": {
                  "type": "string",
                  "description": "The tags to be added, deleted, or updated."
                },
                "updateAction": {
                  "type": "string",
                  "description": "One of add, delete, or update. Only devices that have been modified will be returned."
                }
              },
              "example": {
                "scope": "withAny, old_tag",
                "updateAction": "add",
                "tags": "tag1,tag2"
              },
              "required": [
                "tags",
                "updateAction"
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "success": [
                  {
                    "id": "1284392014819",
                    "serial": "F5XKHEBX",
                    "wifiMac": "00:11:22:33:44:55",
                    "tags": [
                      "tag1",
                      "tag2"
                    ]
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "SM"
        ]
      }
    },
    "/networks/{networkId}/sm/device/fields": {
      "put": {
        "summary": "Modify the fields of a device",
        "description": "Modify the fields of a device",
        "operationId": "updateNetworkSmDeviceFields",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkSmDeviceFields",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "wifiMac": {
                  "type": "string",
                  "description": "The wifiMac of the device to be modified."
                },
                "id": {
                  "type": "string",
                  "description": "The id of the device to be modified."
                },
                "serial": {
                  "type": "string",
                  "description": "The serial of the device to be modified."
                },
                "deviceFields": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "New name for the device"
                    },
                    "notes": {
                      "type": "string",
                      "description": "New notes for the device"
                    }
                  },
                  "description": "The new fields of the device. Each field of this object is optional."
                }
              },
              "example": {
                "id": "1284392014819",
                "deviceFields": {
                  "name": "My name"
                }
              },
              "required": [
                "deviceFields"
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "success": [
                  {
                    "id": "1284392014819",
                    "serial": "F5XKHEBX",
                    "wifiMac": "00:11:22:33:44:55",
                    "name": "My name"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "SM"
        ]
      }
    },
    "/networks/{network_id}/sm/devices/lock": {
      "put": {
        "summary": "Lock a set of devices",
        "description": "Lock a set of devices",
        "operationId": "lockNetworkSmDevices",
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "lockNetworkSmDevices",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "wifiMacs": {
                  "type": "string",
                  "description": "The wifiMacs of the devices to be locked."
                },
                "ids": {
                  "type": "string",
                  "description": "The ids of the devices to be locked."
                },
                "serials": {
                  "type": "string",
                  "description": "The serials of the devices to be locked."
                },
                "scope": {
                  "type": "string",
                  "description": "The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be wiped."
                },
                "pin": {
                  "type": "integer",
                  "description": "The pin number for locking macOS devices (a six digit number). Required only for macOS devices."
                }
              },
              "example": {
                "ids": "\"1284392014819\""
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          }
        },
        "tags": [
          "SM"
        ]
      }
    },
    "/networks/{networkId}/sm/device/wipe": {
      "put": {
        "summary": "Wipe a device",
        "description": "Wipe a device",
        "operationId": "wipeNetworkSmDevice",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "wipeNetworkSmDevice",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "wifiMac": {
                  "type": "string",
                  "description": "The wifiMac of the device to be wiped."
                },
                "id": {
                  "type": "string",
                  "description": "The id of the device to be wiped."
                },
                "serial": {
                  "type": "string",
                  "description": "The serial of the device to be wiped."
                },
                "pin": {
                  "type": "integer",
                  "description": "The pin number (a six digit value) for wiping a macOS device. Required only for macOS devices."
                }
              },
              "example": {
                "id": "1284392014819"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          }
        },
        "tags": [
          "SM"
        ]
      }
    },
    "/networks/{networkId}/sm/devices/checkin": {
      "put": {
        "summary": "Force check-in a set of devices",
        "description": "Force check-in a set of devices",
        "operationId": "checkinNetworkSmDevices",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "checkinNetworkSmDevices",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "wifiMacs": {
                  "type": "string",
                  "description": "The wifiMacs of the devices to be checked-in."
                },
                "ids": {
                  "type": "string",
                  "description": "The ids of the devices to be checked-in."
                },
                "serials": {
                  "type": "string",
                  "description": "The serials of the devices to be checked-in."
                },
                "scope": {
                  "type": "string",
                  "description": "The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be checked-in."
                }
              },
              "example": {
                "ids": "\"1284392014819\""
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          }
        },
        "tags": [
          "SM"
        ]
      }
    },
    "/networks/{networkId}/sm/devices/move": {
      "put": {
        "summary": "Move a set of devices to a new network",
        "description": "Move a set of devices to a new network",
        "operationId": "moveNetworkSmDevices",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "moveNetworkSmDevices",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "wifiMacs": {
                  "type": "string",
                  "description": "The wifiMacs of the devices to be moved."
                },
                "ids": {
                  "type": "string",
                  "description": "The ids of the devices to be moved."
                },
                "serials": {
                  "type": "string",
                  "description": "The serials of the devices to be moved."
                },
                "scope": {
                  "type": "string",
                  "description": "The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be moved."
                },
                "newNetwork": {
                  "type": "string",
                  "description": "The new network to which the devices will be moved."
                }
              },
              "example": {
                "ids": "\"1284392014819\"",
                "newNetwork": "N_24329156"
              },
              "required": [
                "newNetwork"
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          }
        },
        "tags": [
          "SM"
        ]
      }
    },
    "/networks/{networkId}/sm/devices/{deviceId}/unenroll": {
      "post": {
        "summary": "Unenroll a device",
        "description": "Unenroll a device",
        "operationId": "unenrollNetworkSmDevice",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "deviceId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          }
        },
        "tags": [
          "SM"
        ]
      }
    },
    "/networks/{networkId}/sm/profiles": {
      "get": {
        "summary": "List all the profiles in the network",
        "description": "List all the profiles in the network",
        "operationId": "getNetworkSmProfiles",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "profiles": [
                  {
                    "id": "1234",
                    "payload_display_name": "API Profile",
                    "payload_identifier": "com.meraki.sm.1",
                    "payload_description": "API docs test",
                    "scope": "some",
                    "tags": [
                      "tag1",
                      "tag2"
                    ],
                    "wifis": [

                    ],
                    "payload_types": [
                      "Privacy",
                      "Document"
                    ]
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "SM"
        ]
      }
    },
    "/networks/{networkId}/sm/{deviceId}/cellularUsageHistory": {
      "get": {
        "summary": "Return the client's daily cellular data usage history. Usage data is in kilobytes.",
        "description": "Return the client's daily cellular data usage history. Usage data is in kilobytes.",
        "operationId": "getNetworkSmCellularUsageHistory",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "deviceId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "sent": 138.0,
                "recv": 61.0,
                "ts": 1526087474
              }
            }
          }
        },
        "tags": [
          "SM"
        ]
      }
    },
    "/networks/{networkId}/snmpSettings": {
      "get": {
        "summary": "Return the SNMP settings for a network",
        "description": "Return the SNMP settings for a network",
        "operationId": "getNetworkSnmpSettings",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "access": "users",
                "users": [
                  {
                    "username": "AzureDiamond",
                    "passphrase": "hunter2"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "SNMP settings"
        ]
      },
      "put": {
        "summary": "Update the SNMP settings for a network",
        "description": "Update the SNMP settings for a network",
        "operationId": "updateNetworkSnmpSettings",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkSnmpSettings",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "access": {
                  "type": "string",
                  "enum": [
                    "none",
                    "community",
                    "users"
                  ],
                  "description": "The type of SNMP access. Can be one of 'none' (disabled), 'community' (V1/V2c), or 'users' (V3)."
                },
                "communityString": {
                  "type": "string",
                  "description": "The SNMP community string. Only relevant if 'access' is set to 'community'."
                },
                "users": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "username": {
                        "type": "string",
                        "description": "The username for the SNMP user. Required."
                      },
                      "passphrase": {
                        "type": "string",
                        "description": "The passphrase for the SNMP user. Required."
                      }
                    },
                    "required": [
                      "username",
                      "passphrase"
                    ]
                  },
                  "description": "The list of SNMP users. Only relevant if 'access' is set to 'users'."
                }
              },
              "example": {
                "access": "users",
                "users": [
                  {
                    "username": "AzureDiamond",
                    "passphrase": "hunter2"
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "access": "users",
                "users": [
                  {
                    "username": "AzureDiamond",
                    "passphrase": "hunter2"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "SNMP settings"
        ]
      }
    },
    "/organizations/{organizationId}/snmp": {
      "get": {
        "summary": "Return the SNMP settings for an organization",
        "description": "Return the SNMP settings for an organization",
        "operationId": "getOrganizationSnmp",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "v2cEnabled": false,
                "v3Enabled": true,
                "v3AuthMode": "SHA",
                "v3PrivMode": "AES128",
                "peerIps": "123.123.123.1",
                "hostname": "n1.meraki.com",
                "port": 443
              }
            }
          }
        },
        "tags": [
          "SNMP settings"
        ]
      },
      "put": {
        "summary": "Update the SNMP settings for an organization",
        "description": "Update the SNMP settings for an organization",
        "operationId": "updateOrganizationSnmp",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateOrganizationSnmp",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "v2cEnabled": {
                  "type": "boolean",
                  "description": "Boolean indicating whether SNMP version 2c is enabled for the organization."
                },
                "v3Enabled": {
                  "type": "boolean",
                  "description": "Boolean indicating whether SNMP version 3 is enabled for the organization."
                },
                "v3AuthMode": {
                  "type": "string",
                  "enum": [
                    "MD5",
                    "SHA"
                  ],
                  "description": "The SNMP version 3 authentication mode. Can be either 'MD5' or 'SHA'."
                },
                "v3AuthPass": {
                  "type": "string",
                  "description": "The SNMP version 3 authentication password. Must be at least 8 characters if specified."
                },
                "v3PrivMode": {
                  "type": "string",
                  "enum": [
                    "DES",
                    "AES128"
                  ],
                  "description": "The SNMP version 3 privacy mode. Can be either 'DES' or 'AES128'."
                },
                "v3PrivPass": {
                  "type": "string",
                  "description": "The SNMP version 3 privacy password. Must be at least 8 characters if specified."
                },
                "peerIps": {
                  "type": "string",
                  "description": "The IPs that are allowed to access the SNMP server. This list should be IPv4 addresses separated by semi-colons (ie. \"1.2.3.4;2.3.4.5\")."
                }
              },
              "example": {
                "v2cEnabled": false,
                "v3Enabled": true,
                "v3AuthMode": "SHA",
                "v3PrivMode": "AES128",
                "peerIps": "123.123.123.1"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "v2cEnabled": false,
                "v3Enabled": true,
                "v3AuthMode": "SHA",
                "v3PrivMode": "AES128",
                "peerIps": "123.123.123.1",
                "hostname": "n1.meraki.com",
                "port": 443
              }
            }
          }
        },
        "tags": [
          "SNMP settings"
        ]
      }
    },
    "/networks/{id}/splashLoginAttempts": {
      "get": {
        "summary": "List the splash login attempts for a network",
        "description": "List the splash login attempts for a network",
        "operationId": "getNetworkSplashLoginAttempts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "ssidNumber",
            "description": "Only return the login attempts for the specified SSID",
            "in": "query",
            "type": "string"
          },
          {
            "name": "loginIdentifier",
            "description": "The username, email, or phone number used during login",
            "in": "query",
            "type": "string"
          },
          {
            "name": "timespan",
            "description": "The timespan, in seconds, for the login attempts. The period will be from [timespan] seconds ago until now. The maximum timespan is 3 months",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "name": "Miles Meraki",
                  "login": "miles@meraki.com",
                  "ssid": "My SSID",
                  "loginAt": 1518365681,
                  "gatewayDeviceMac": "00:11:22:33:44:55",
                  "clientMac": "22:33:44:55:66:77",
                  "clientId": "k74272e",
                  "authorization": "success"
                }
              ]
            }
          }
        },
        "tags": [
          "Splash login attempts"
        ]
      }
    },
    "/networks/{networkId}/ssids/{number}/splashSettings": {
      "get": {
        "summary": "Display the splash page settings for the given SSID",
        "description": "Display the splash page settings for the given SSID",
        "operationId": "getNetworkSsidSplashSettings",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "number",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "ssidNumber": 0,
                "splashPage": "Click-through splash page",
                "splashUrl": "https://www.custom_splash_url.com",
                "useSplashUrl": true
              }
            }
          }
        },
        "tags": [
          "Splash settings"
        ]
      },
      "put": {
        "summary": "Modify the splash page settings for the given SSID",
        "description": "Modify the splash page settings for the given SSID",
        "operationId": "updateNetworkSsidSplashSettings",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "number",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkSsidSplashSettings",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "splashUrl": {
                  "description": "The custom splash URL of the click-through splash page. Optional. Note that the URL can be configured without necessarily being used. In order to enable the custom URL, see 'useSplashUrl'",
                  "type": "string"
                },
                "useSplashUrl": {
                  "description": "Boolean indicating whether the user will be redirected to the custom splash url. A custom splash URL must be set if this is true. Optional. Note that depending on your SSID's access control settings, it may not be possible to use the custom splash URL.",
                  "type": "boolean"
                }
              },
              "example": {
                "splashUrl": "https://www.custom_splash_url.com",
                "useSplashUrl": true
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "ssidNumber": 0,
                "splashPage": "Click-through splash page",
                "splashUrl": "https://www.custom_splash_url.com",
                "useSplashUrl": true
              }
            }
          }
        },
        "tags": [
          "Splash settings"
        ]
      }
    },
    "/networks/{networkId}/ssids": {
      "get": {
        "summary": "List the SSIDs in a network. Supports networks with access points or wireless-enabled security appliances and teleworker gateways.",
        "description": "List the SSIDs in a network. Supports networks with access points or wireless-enabled security appliances and teleworker gateways.",
        "operationId": "getNetworkSsids",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "number": 0,
                  "name": "My SSID",
                  "enabled": true,
                  "splashPage": "Click-through splash page",
                  "ssidAdminAccessible": false,
                  "authMode": "open",
                  "ipAssignmentMode": "NAT mode",
                  "bandSelection": "5 GHz band only",
                  "perClientBandwidthLimitUp": 0,
                  "perClientBandwidthLimitDown": 0
                }
              ]
            }
          }
        },
        "tags": [
          "SSIDs"
        ]
      }
    },
    "/networks/{networkId}/ssids/{number}": {
      "get": {
        "summary": "Return a single SSID",
        "description": "Return a single SSID",
        "operationId": "getNetworkSsid",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "number",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "number": 0,
                "name": "My SSID",
                "enabled": true,
                "splashPage": "Click-through splash page",
                "ssidAdminAccessible": false,
                "authMode": "open",
                "ipAssignmentMode": "NAT mode",
                "bandSelection": "5 GHz band only",
                "perClientBandwidthLimitUp": 0,
                "perClientBandwidthLimitDown": 0
              }
            }
          }
        },
        "tags": [
          "SSIDs"
        ]
      },
      "put": {
        "summary": "Update the attributes of an SSID",
        "description": "Update the attributes of an SSID",
        "operationId": "updateNetworkSsid",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "number",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkSsid",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of an SSID"
                },
                "enabled": {
                  "type": "boolean",
                  "description": "Whether or not an SSID is enabled"
                },
                "authMode": {
                  "type": "string",
                  "enum": [
                    "open",
                    "psk",
                    "open-with-radius",
                    "8021x-meraki",
                    "8021x-radius"
                  ],
                  "description": "The association control method for the SSID ('open', 'psk', 'open-with-radius', '8021x-meraki' or '8021x-radius')"
                },
                "encryptionMode": {
                  "type": "string",
                  "enum": [
                    "wpa",
                    "wep",
                    "wpa-eap"
                  ],
                  "description": "The psk encryption mode for the SSID ('wpa', 'wep' or 'wpa-eap')"
                },
                "psk": {
                  "type": "string",
                  "description": "The passkey for the SSID. This param is only valid if the authMode is 'psk'"
                },
                "wpaEncryptionMode": {
                  "type": "string",
                  "enum": [
                    "WPA1 and WPA2",
                    "WPA2 only"
                  ],
                  "description": "The types of WPA encryption. ('WPA1 and WPA2' or 'WPA2 only')"
                },
                "splashPage": {
                  "type": "string",
                  "enum": [
                    "None",
                    "Click-through splash page",
                    "Billing",
                    "Password-protected with Meraki RADIUS",
                    "Password-protected with custom RADIUS",
                    "Password-protected with Active Directory",
                    "Password-protected with LDAP",
                    "SMS authentication",
                    "Systems Manager Sentry",
                    "Facebook Wi-Fi",
                    "Google OAuth",
                    "Sponsored guest"
                  ],
                  "description": "The type of splash page for the SSID ('None', 'Click-through splash page', 'Billing', 'Password-protected with Meraki RADIUS', 'Password-protected with custom RADIUS', 'Password-protected with Active Directory', 'Password-protected with LDAP', 'SMS authentication', 'Systems Manager Sentry', 'Facebook Wi-Fi', 'Google OAuth' or 'Sponsored guest'). This attribute is not supported for template children."
                },
                "radiusServers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "host": {
                        "type": "string",
                        "description": "IP address of your RADIUS server"
                      },
                      "port": {
                        "type": "integer",
                        "description": "UDP port the RADIUS server listens on for Access-requests"
                      },
                      "secret": {
                        "type": "string",
                        "description": "RADIUS client shared secret"
                      }
                    }
                  },
                  "description": "The RADIUS 802.1x servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius'"
                },
                "radiusCoaEnabled": {
                  "type": "boolean",
                  "description": "If true, Meraki devices will act as a RADIUS Dynamic Authorization Server and will respond to RADIUS Change-of-Authorization and Disconnect messages sent by the RADIUS server."
                },
                "radiusFailoverPolicy": {
                  "type": "string",
                  "enum": [
                    "Deny access",
                    "Allow access"
                  ],
                  "description": "This policy determines how authentication requests should be handled in the event that all of the configured RADIUS servers are unreachable ('Deny access' or 'Allow access')"
                },
                "radiusLoadBalancingPolicy": {
                  "type": "string",
                  "enum": [
                    "Strict priority order",
                    "Round robin"
                  ],
                  "description": "This policy determines which RADIUS server will be contacted first in an authentication attempt and the ordering of any necessary retry attempts ('Strict priority order' or 'Round robin')"
                },
                "radiusAccountingEnabled": {
                  "type": "boolean",
                  "description": "Whether or not RADIUS accounting is enabled. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius'"
                },
                "radiusAccountingServers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "host": {
                        "type": "string",
                        "description": "IP address to which the APs will send RADIUS accounting messages"
                      },
                      "port": {
                        "type": "integer",
                        "description": "Port on the RADIUS server that is listening for accounting messages"
                      },
                      "secret": {
                        "type": "string",
                        "description": "Shared key used to authenticate messages between the APs and RADIUS server"
                      }
                    }
                  },
                  "description": "The RADIUS accounting 802.1x servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius' and radiusAccountingEnabled is 'true'"
                },
                "ipAssignmentMode": {
                  "type": "string",
                  "enum": [
                    "NAT mode",
                    "Bridge mode",
                    "Layer 3 roaming",
                    "Layer 3 roaming with a concentrator",
                    "VPN"
                  ],
                  "description": "The client IP assignment mode ('NAT mode', 'Bridge mode', 'Layer 3 roaming', 'Layer 3 roaming with a concentrator' or 'VPN')"
                },
                "useVlanTagging": {
                  "type": "boolean",
                  "description": "Direct trafic to use specific VLANs. This param is only valid with 'Bridge mode' and 'Layer 3 roaming'"
                },
                "concentratorNetworkId": {
                  "type": "string",
                  "description": "The concentrator to use for 'Layer 3 roaming with a concentrator' or 'VPN'."
                },
                "vlanId": {
                  "type": "integer",
                  "description": "The VLAN ID used for VLAN tagging. This param is only valid with 'Layer 3 roaming with a concentrator' and 'VPN'"
                },
                "defaultVlanId": {
                  "type": "integer",
                  "description": "The default VLAN ID used for 'all other APs'. This param is only valid with 'Bridge mode' and 'Layer 3 roaming'"
                },
                "apTagsAndVlanIds": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "tags": {
                        "type": "string",
                        "description": "Comma-separated list of AP tags"
                      },
                      "vlanId": {
                        "type": "integer",
                        "description": "Numerical identifier that is assigned to the VLAN"
                      }
                    }
                  },
                  "description": "The list of tags and VLAN IDs used for VLAN tagging. This param is only valid with 'Bridge mode', 'Layer 3 roaming'"
                },
                "walledGardenEnabled": {
                  "type": "boolean",
                  "description": "Allow access to a configurable list of IP ranges, which users may access prior to sign-on."
                },
                "walledGardenRanges": {
                  "type": "string",
                  "description": "Specify your walled garden by entering space-separated addresses, ranges using CIDR notation, domain names, and domain wildcards (e.g. 192.168.1.1/24 192.168.37.10/32 www.yahoo.com *.google.com). Meraki's splash page is automatically included in your walled garden."
                },
                "minBitrate": {
                  "type": "number",
                  "format": "float",
                  "description": "The minimum bitrate in Mbps. ('1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54')"
                },
                "bandSelection": {
                  "type": "string",
                  "enum": [
                    "Dual band operation",
                    "5 GHz band only",
                    "Dual band operation with Band Steering"
                  ],
                  "description": "The client-serving radio frequencies. ('Dual band operation', '5 GHz band only' or 'Dual band operation with Band Steering')"
                },
                "perClientBandwidthLimitUp": {
                  "type": "integer",
                  "description": "The upload bandwidth limit in Kbps. (0 represents no limit.)"
                },
                "perClientBandwidthLimitDown": {
                  "type": "integer",
                  "description": "The download bandwidth limit in Kbps. (0 represents no limit.)"
                }
              },
              "example": {
                "name": "My SSID",
                "enabled": true
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "number": 0,
                "name": "My SSID",
                "enabled": true,
                "splashPage": "Click-through splash page",
                "ssidAdminAccessible": false,
                "authMode": "open",
                "ipAssignmentMode": "NAT mode",
                "bandSelection": "5 GHz band only",
                "perClientBandwidthLimitUp": 0,
                "perClientBandwidthLimitDown": 0
              }
            }
          }
        },
        "tags": [
          "SSIDs"
        ]
      }
    },
    "/networks/{networkId}/switch/settings": {
      "get": {
        "summary": "Returns the switch network settings",
        "description": "Returns the switch network settings",
        "operationId": "getNetworkSwitchSettings",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            }
          }
        },
        "tags": [
          "Switch settings"
        ]
      },
      "put": {
        "summary": "Update switch network settings",
        "description": "Update switch network settings",
        "operationId": "updateNetworkSwitchSettings",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkSwitchSettings",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "useCombinedPower": {
                  "type": "boolean",
                  "description": "The use Combined Power as the default behavior of secondary power supplies on supported devices."
                },
                "powerExceptions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "serial": {
                        "type": "string",
                        "description": "Serial number of the switch"
                      },
                      "powerType": {
                        "type": "string",
                        "enum": [
                          "combined",
                          "redundant",
                          "useNetworkSetting"
                        ],
                        "description": "Per switch exception (combined, redundant, useNetworkSetting)"
                      }
                    },
                    "required": [
                      "serial",
                      "powerType"
                    ]
                  },
                  "description": "Exceptions on a per switch basis to \"useCombinedPower\""
                }
              },
              "example": {
                "useCombinedPower": false,
                "powerExceptions": [
                  {
                    "serial": "Q234-ABCD-0001",
                    "powerType": "redundant"
                  },
                  {
                    "serial": "Q234-ABCD-0002",
                    "powerType": "combined"
                  },
                  {
                    "serial": "Q234-ABCD-0003",
                    "powerType": "redundant"
                  },
                  {
                    "serial": "Q234-ABCD-0004",
                    "powerType": "useNetworkSetting"
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "useCombinedPower": false,
                "powerExceptions": [
                  {
                    "serial": "Q234-ABCD-0001",
                    "powerType": "redundant"
                  },
                  {
                    "serial": "Q234-ABCD-0002",
                    "powerType": "combined"
                  },
                  {
                    "serial": "Q234-ABCD-0003",
                    "powerType": "redundant"
                  },
                  {
                    "serial": "Q234-ABCD-0004",
                    "powerType": "useNetworkSetting"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Switch settings"
        ]
      }
    },
    "/devices/{serial}/switchPorts": {
      "get": {
        "summary": "List the switch ports for a switch",
        "description": "List the switch ports for a switch",
        "operationId": "getDeviceSwitchPorts",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "number": 1,
                  "name": "My switch port",
                  "tags": "tag1 tag2",
                  "enabled": true,
                  "poeEnabled": true,
                  "type": "access",
                  "vlan": 10,
                  "voiceVlan": 20,
                  "isolationEnabled": false,
                  "rstpEnabled": true,
                  "stpGuard": "disabled",
                  "accessPolicyNumber": "1234",
                  "linkNegotiation": "Auto negotiate"
                }
              ]
            }
          }
        },
        "tags": [
          "Switch ports"
        ]
      }
    },
    "/devices/{serial}/switchPorts/{number}": {
      "get": {
        "summary": "Return a switch port",
        "description": "Return a switch port",
        "operationId": "getDeviceSwitchPort",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "number",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "number": 1,
                "name": "My switch port",
                "tags": "tag1 tag2",
                "enabled": true,
                "poeEnabled": true,
                "type": "access",
                "vlan": 10,
                "voiceVlan": 20,
                "isolationEnabled": false,
                "rstpEnabled": true,
                "stpGuard": "disabled",
                "accessPolicyNumber": "1234",
                "linkNegotiation": "Auto negotiate"
              }
            }
          }
        },
        "tags": [
          "Switch ports"
        ]
      },
      "put": {
        "summary": "Update a switch port",
        "description": "Update a switch port",
        "operationId": "updateDeviceSwitchPort",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "number",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateDeviceSwitchPort",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of the switch port",
                  "type": "string"
                },
                "tags": {
                  "description": "The tags of the switch port",
                  "type": "string"
                },
                "enabled": {
                  "description": "The status of the switch port",
                  "type": "string"
                },
                "type": {
                  "description": "The type of the switch port (\"access\" or \"trunk\")",
                  "type": "string"
                },
                "vlan": {
                  "description": "The VLAN of the switch port",
                  "type": "string"
                },
                "voiceVlan": {
                  "description": "The voice VLAN of the switch port. Only applicable to access ports.",
                  "type": "string"
                },
                "allowedVlans": {
                  "description": "The VLANs allowed on the switch port. Only applicable to trunk ports.",
                  "type": "string"
                },
                "poeEnabled": {
                  "description": "The PoE status of the switch port",
                  "type": "string"
                },
                "isolationEnabled": {
                  "description": "The isolation status of the switch port",
                  "type": "string"
                },
                "rstpEnabled": {
                  "description": "The rapid spanning tree protocol status",
                  "type": "string"
                },
                "stpGuard": {
                  "description": "The state of the STP guard (\"disabled\", \"Root guard\", \"BPDU guard\", \"Loop guard\")",
                  "type": "string"
                },
                "accessPolicyNumber": {
                  "description": "The number of the access policy of the switch port. Only applicable to access ports.",
                  "type": "string"
                },
                "linkNegotiation": {
                  "description": "The link speed for the switch port",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "number": 1,
                "name": "My switch port",
                "tags": "tag1 tag2",
                "enabled": true,
                "poeEnabled": true,
                "type": "access",
                "vlan": 10,
                "voiceVlan": 20,
                "isolationEnabled": false,
                "rstpEnabled": true,
                "stpGuard": "disabled",
                "accessPolicyNumber": "1234",
                "linkNegotiation": "Auto negotiate"
              }
            }
          }
        },
        "tags": [
          "Switch ports"
        ]
      }
    },
    "/organizations/{organizationId}/configTemplates/{configTemplateId}/switchProfiles": {
      "get": {
        "summary": "List the switch profiles for your switch template configuration",
        "description": "List the switch profiles for your switch template configuration",
        "operationId": "getOrganizationConfigTemplateSwitchProfiles",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "configTemplateId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "switchProfileId": "1234",
                  "name": "A Simple Switch Profile",
                  "model": "MS450-24"
                }
              ]
            }
          }
        },
        "tags": [
          "Switch profiles"
        ]
      }
    },
    "/networks/{networkId}/switchStacks": {
      "get": {
        "summary": "List the switch stacks in a network",
        "description": "List the switch stacks in a network",
        "operationId": "getNetworkSwitchStacks",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "id": "8473",
                  "name": "A cool stack",
                  "serials": [
                    "QBZY-XWVU-TSRQ",
                    "QBAB-CDEF-GHIJ"
                  ]
                }
              ]
            }
          }
        },
        "tags": [
          "Switch stacks"
        ]
      },
      "post": {
        "summary": "Create a stack",
        "description": "Create a stack",
        "operationId": "createNetworkSwitchStack",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "createNetworkSwitchStack",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the new stack"
                },
                "serials": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "An array of switch serials to be added into the new stack"
                }
              },
              "example": {
                "name": "A cool stack",
                "serials": [
                  "QBZY-XWVU-TSRQ",
                  "QBAB-CDEF-GHIJ"
                ]
              },
              "required": [
                "name",
                "serials"
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "8473",
                "name": "A cool stack",
                "serials": [
                  "QBZY-XWVU-TSRQ",
                  "QBAB-CDEF-GHIJ"
                ]
              }
            }
          }
        },
        "tags": [
          "Switch stacks"
        ]
      }
    },
    "/networks/{networkId}/switchStacks/{switchStackId}": {
      "get": {
        "summary": "Show a switch stack",
        "description": "Show a switch stack",
        "operationId": "getNetworkSwitchStack",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "switchStackId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "8473",
                "name": "A cool stack",
                "serials": [
                  "QBZY-XWVU-TSRQ",
                  "QBAB-CDEF-GHIJ"
                ]
              }
            }
          }
        },
        "tags": [
          "Switch stacks"
        ]
      },
      "delete": {
        "summary": "Delete a stack",
        "description": "Delete a stack",
        "operationId": "deleteNetworkSwitchStack",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "switchStackId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          }
        },
        "tags": [
          "Switch stacks"
        ]
      }
    },
    "/networks/{networkId}/switchStacks/{switchStackId}/add": {
      "post": {
        "summary": "Add a switch to a stack",
        "description": "Add a switch to a stack",
        "operationId": "addNetworkSwitchStack",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "switchStackId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "addNetworkSwitchStack",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "serial": {
                  "type": "string",
                  "description": "The serial of the switch to be added"
                }
              },
              "example": {
                "serial": "QBZY-XWVU-TSRQ"
              },
              "required": [
                "serial"
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "8473",
                "name": "A cool stack",
                "serials": [
                  "QBZY-XWVU-TSRQ",
                  "QBAB-CDEF-GHIJ"
                ]
              }
            }
          }
        },
        "tags": [
          "Switch stacks"
        ]
      }
    },
    "/networks/{networkID}/switchStacks/{switchStackId}/remove": {
      "post": {
        "summary": "Remove a switch from a stack",
        "description": "Remove a switch from a stack",
        "operationId": "removeNetworkSwitchStack",
        "parameters": [
          {
            "name": "networkID",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "switchStackId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "removeNetworkSwitchStack",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "serial": {
                  "type": "string",
                  "description": "The serial of the switch to be removed"
                }
              },
              "example": {
                "serial": "QBZY-XWVU-TSRQ"
              },
              "required": [
                "serial"
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "8473",
                "name": "A cool stack",
                "serials": [
                  "QBAB-CDEF-GHIJ"
                ]
              }
            }
          }
        },
        "tags": [
          "Switch stacks"
        ]
      }
    },
    "/networks/{networkId}/syslogServers": {
      "get": {
        "summary": "List the syslog servers for a network",
        "description": "List the syslog servers for a network",
        "operationId": "getNetworkSyslogServers",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "host": "1.2.3.4",
                  "port": 443,
                  "roles": [
                    "Wireless event log",
                    "URLs"
                  ]
                }
              ]
            }
          }
        },
        "tags": [
          "Syslog servers"
        ]
      },
      "put": {
        "summary": "Update the syslog servers for a network",
        "description": "Update the syslog servers for a network",
        "operationId": "updateNetworkSyslogServers",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkSyslogServers",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "servers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "host": {
                        "type": "string",
                        "description": "The IP address of the syslog server"
                      },
                      "port": {
                        "type": "integer",
                        "description": "The port of the syslog server"
                      },
                      "roles": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "A list of roles for the syslog server. Options (case-insensitive): 'Wireless event log', 'Appliance event log', 'Switch event log', 'Air Marshal events', 'Flows', 'URLs', 'IDS alerts', 'Security events'"
                      }
                    },
                    "required": [
                      "host",
                      "port",
                      "roles"
                    ]
                  },
                  "description": "A list of the syslog servers for this network"
                }
              },
              "example": {
                "servers": [
                  {
                    "host": "1.2.3.4",
                    "port": 443,
                    "roles": [
                      "Wireless event log",
                      "URLs"
                    ]
                  }
                ]
              },
              "required": [
                "servers"
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "host": "1.2.3.4",
                  "port": 443,
                  "roles": [
                    "Wireless event log",
                    "URLs"
                  ]
                }
              ]
            }
          }
        },
        "tags": [
          "Syslog servers"
        ]
      }
    },
    "/networks/{networkId}/trafficShaping": {
      "put": {
        "summary": "Update the traffic shaping settings for an MX network",
        "description": "Update the traffic shaping settings for an MX network",
        "operationId": "updateNetworkTrafficShaping",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkTrafficShaping",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "defaultRulesEnabled": {
                  "type": "boolean",
                  "description": "    Whether default traffic shaping rules are enabled (true) or disabled (false).\n    There are 4 default rules, which can\n    be seen on your network's traffic shaping page. Note that default rules\n    count against the rule limit of 8.\n"
                },
                "rules": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "definitions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "application",
                                "applicationCategory",
                                "host",
                                "port",
                                "ipRange",
                                "localNet"
                              ],
                              "description": "The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'."
                            },
                            "value": {
                              "type": "string",
                              "description": "    If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n     If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": \"meraki:layer7/...\" }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    endpoint).\n"
                            }
                          },
                          "required": [
                            "type",
                            "value"
                          ]
                        },
                        "description": "    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\n"
                      },
                      "perClientBandwidthLimits": {
                        "type": "object",
                        "properties": {
                          "settings": {
                            "type": "string",
                            "description": "How bandwidth limits are applied by your rule. Can be one of 'network default', 'ignore' or 'custom'."
                          },
                          "bandwidthLimits": {
                            "type": "object",
                            "properties": {
                              "limitUp": {
                                "type": "integer",
                                "description": "The maximum upload limit (integer, in Kbps)."
                              },
                              "limitDown": {
                                "type": "integer",
                                "description": "The maximum download limit (integer, in Kbps)."
                              }
                            },
                            "description": "The bandwidth limits object, specifying the upload ('limitUp') and download ('limitDown') speed in Kbps. These are only enforced if 'settings' is set to 'custom'."
                          }
                        },
                        "description": "    An object describing the bandwidth settings for your rule.\n"
                      },
                      "dscpTagValue": {
                        "type": "integer",
                        "description": "    The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.\n    For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.\n"
                      },
                      "priority": {
                        "type": "string",
                        "description": "    A string, indicating the priority level for packets bound to your rule.\n    Can be 'low', 'normal' or 'high'.\n"
                      }
                    },
                    "required": [
                      "definitions"
                    ]
                  },
                  "description": "    An array of traffic shaping rules. Rules are applied in the order that\n    they are specified in. An empty list (or null) means no rules. Note that\n    you are allowed a maximum of 8 rules.\n"
                }
              },
              "example": {
                "defaultRulesEnabled": true,
                "rules": [
                  {
                    "definitions": [
                      {
                        "type": "host",
                        "value": "google.com"
                      },
                      {
                        "type": "port",
                        "value": "9090"
                      },
                      {
                        "type": "ipRange",
                        "value": "192.1.0.0"
                      },
                      {
                        "type": "ipRange",
                        "value": "192.1.0.0/16"
                      },
                      {
                        "type": "ipRange",
                        "value": "10.1.0.0/16:80"
                      },
                      {
                        "type": "localNet",
                        "value": "192.168.0.0/16"
                      },
                      {
                        "type": "applicationCategory",
                        "value": {
                          "id": "meraki:layer7/category/2",
                          "name": "Blogging"
                        }
                      },
                      {
                        "type": "application",
                        "value": {
                          "id": "meraki:layer7/application/133",
                          "name": "Battle.net"
                        }
                      }
                    ],
                    "perClientBandwidthLimits": {
                      "settings": "custom",
                      "bandwidthLimits": {
                        "limitUp": 1000000,
                        "limitDown": 1000000
                      }
                    },
                    "dscpTagValue": null,
                    "priority": "normal"
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "defaultRulesEnabled": true,
                "rules": [
                  {
                    "definitions": [
                      {
                        "type": "host",
                        "value": "google.com"
                      },
                      {
                        "type": "port",
                        "value": "9090"
                      },
                      {
                        "type": "ipRange",
                        "value": "192.1.0.0"
                      },
                      {
                        "type": "ipRange",
                        "value": "192.1.0.0/16"
                      },
                      {
                        "type": "ipRange",
                        "value": "10.1.0.0/16:80"
                      },
                      {
                        "type": "localNet",
                        "value": "192.168.0.0/16"
                      },
                      {
                        "type": "applicationCategory",
                        "value": {
                          "id": "meraki:layer7/category/2",
                          "name": "Blogging"
                        }
                      },
                      {
                        "type": "application",
                        "value": {
                          "id": "meraki:layer7/application/133",
                          "name": "Battle.net"
                        }
                      }
                    ],
                    "perClientBandwidthLimits": {
                      "settings": "custom",
                      "bandwidthLimits": {
                        "limitUp": 1000000,
                        "limitDown": 1000000
                      }
                    },
                    "dscpTagValue": null,
                    "priority": "normal"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Traffic shaping"
        ]
      },
      "get": {
        "summary": "Display the traffic shaping settings for an MX network",
        "description": "Display the traffic shaping settings for an MX network",
        "operationId": "getNetworkTrafficShaping",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "defaultRulesEnabled": true,
                "rules": [
                  {
                    "definitions": [
                      {
                        "type": "host",
                        "value": "google.com"
                      },
                      {
                        "type": "port",
                        "value": "9090"
                      },
                      {
                        "type": "ipRange",
                        "value": "192.1.0.0"
                      },
                      {
                        "type": "ipRange",
                        "value": "192.1.0.0/16"
                      },
                      {
                        "type": "ipRange",
                        "value": "10.1.0.0/16:80"
                      },
                      {
                        "type": "localNet",
                        "value": "192.168.0.0/16"
                      },
                      {
                        "type": "applicationCategory",
                        "value": {
                          "id": "meraki:layer7/category/2",
                          "name": "Blogging"
                        }
                      },
                      {
                        "type": "application",
                        "value": {
                          "id": "meraki:layer7/application/133",
                          "name": "Battle.net"
                        }
                      }
                    ],
                    "perClientBandwidthLimits": {
                      "settings": "custom",
                      "bandwidthLimits": {
                        "limitUp": 1000000,
                        "limitDown": 1000000
                      }
                    },
                    "dscpTagValue": null,
                    "priority": "normal"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Traffic shaping"
        ]
      }
    },
    "/networks/{networkId}/ssids/{number}/trafficShaping": {
      "put": {
        "summary": "Update the traffic shaping settings for an SSID on an MR network",
        "description": "Update the traffic shaping settings for an SSID on an MR network",
        "operationId": "updateNetworkSsidTrafficShaping",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "number",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkSsidTrafficShaping",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "trafficShapingEnabled": {
                  "type": "boolean",
                  "description": "Whether traffic shaping rules are applied to clients on your SSID."
                },
                "defaultRulesEnabled": {
                  "type": "boolean",
                  "description": "    Whether default traffic shaping rules are enabled (true) or disabled (false).\n    There are 4 default rules, which can\n    be seen on your network's traffic shaping page. Note that default rules\n    count against the rule limit of 8.\n"
                },
                "rules": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "definitions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "application",
                                "applicationCategory",
                                "host",
                                "port",
                                "ipRange",
                                "localNet"
                              ],
                              "description": "The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'."
                            },
                            "value": {
                              "type": "string",
                              "description": "    If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n     If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": \"meraki:layer7/...\" }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    endpoint).\n"
                            }
                          },
                          "required": [
                            "type",
                            "value"
                          ]
                        },
                        "description": "    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\n"
                      },
                      "perClientBandwidthLimits": {
                        "type": "object",
                        "properties": {
                          "settings": {
                            "type": "string",
                            "description": "How bandwidth limits are applied by your rule. Can be one of 'network default', 'ignore' or 'custom'."
                          },
                          "bandwidthLimits": {
                            "type": "object",
                            "properties": {
                              "limitUp": {
                                "type": "integer",
                                "description": "The maximum upload limit (integer, in Kbps)."
                              },
                              "limitDown": {
                                "type": "integer",
                                "description": "The maximum download limit (integer, in Kbps)."
                              }
                            },
                            "description": "The bandwidth limits object, specifying the upload ('limitUp') and download ('limitDown') speed in Kbps. These are only enforced if 'settings' is set to 'custom'."
                          }
                        },
                        "description": "    An object describing the bandwidth settings for your rule.\n"
                      },
                      "dscpTagValue": {
                        "type": "integer",
                        "description": "    The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.\n    For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.\n"
                      },
                      "pcpTagValue": {
                        "type": "integer",
                        "description": "    The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).\n    null means 'Do not set PCP tag'.\n"
                      }
                    },
                    "required": [
                      "definitions"
                    ]
                  },
                  "description": "    An array of traffic shaping rules. Rules are applied in the order that\n    they are specified in. An empty list (or null) means no rules. Note that\n    you are allowed a maximum of 8 rules.\n"
                }
              },
              "example": {
                "trafficShapingEnabled": true,
                "defaultRulesEnabled": true,
                "rules": [
                  {
                    "definitions": [
                      {
                        "type": "host",
                        "value": "google.com"
                      },
                      {
                        "type": "port",
                        "value": "9090"
                      },
                      {
                        "type": "ipRange",
                        "value": "192.1.0.0"
                      },
                      {
                        "type": "ipRange",
                        "value": "192.1.0.0/16"
                      },
                      {
                        "type": "ipRange",
                        "value": "10.1.0.0/16:80"
                      },
                      {
                        "type": "localNet",
                        "value": "192.168.0.0/16"
                      },
                      {
                        "type": "applicationCategory",
                        "value": {
                          "id": "meraki:layer7/category/2",
                          "name": "Blogging"
                        }
                      },
                      {
                        "type": "application",
                        "value": {
                          "id": "meraki:layer7/application/133",
                          "name": "Battle.net"
                        }
                      }
                    ],
                    "perClientBandwidthLimits": {
                      "settings": "custom",
                      "bandwidthLimits": {
                        "limitUp": 1000000,
                        "limitDown": 1000000
                      }
                    },
                    "dscpTagValue": null,
                    "pcpTagValue": null
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "trafficShapingEnabled": true,
                "defaultRulesEnabled": true,
                "rules": [
                  {
                    "definitions": [
                      {
                        "type": "host",
                        "value": "google.com"
                      },
                      {
                        "type": "port",
                        "value": "9090"
                      },
                      {
                        "type": "ipRange",
                        "value": "192.1.0.0"
                      },
                      {
                        "type": "ipRange",
                        "value": "192.1.0.0/16"
                      },
                      {
                        "type": "ipRange",
                        "value": "10.1.0.0/16:80"
                      },
                      {
                        "type": "localNet",
                        "value": "192.168.0.0/16"
                      },
                      {
                        "type": "applicationCategory",
                        "value": {
                          "id": "meraki:layer7/category/2",
                          "name": "Blogging"
                        }
                      },
                      {
                        "type": "application",
                        "value": {
                          "id": "meraki:layer7/application/133",
                          "name": "Battle.net"
                        }
                      }
                    ],
                    "perClientBandwidthLimits": {
                      "settings": "custom",
                      "bandwidthLimits": {
                        "limitUp": 1000000,
                        "limitDown": 1000000
                      }
                    },
                    "dscpTagValue": null,
                    "pcpTagValue": null
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Traffic shaping"
        ]
      },
      "get": {
        "summary": "Display the traffic shaping settings for a SSID on an MR network",
        "description": "Display the traffic shaping settings for a SSID on an MR network",
        "operationId": "getNetworkSsidTrafficShaping",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "number",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "trafficShapingEnabled": true,
                "defaultRulesEnabled": true,
                "rules": [
                  {
                    "definitions": [
                      {
                        "type": "host",
                        "value": "google.com"
                      },
                      {
                        "type": "port",
                        "value": "9090"
                      },
                      {
                        "type": "ipRange",
                        "value": "192.1.0.0"
                      },
                      {
                        "type": "ipRange",
                        "value": "192.1.0.0/16"
                      },
                      {
                        "type": "ipRange",
                        "value": "10.1.0.0/16:80"
                      },
                      {
                        "type": "localNet",
                        "value": "192.168.0.0/16"
                      },
                      {
                        "type": "applicationCategory",
                        "value": {
                          "id": "meraki:layer7/category/2",
                          "name": "Blogging"
                        }
                      },
                      {
                        "type": "application",
                        "value": {
                          "id": "meraki:layer7/application/133",
                          "name": "Battle.net"
                        }
                      }
                    ],
                    "perClientBandwidthLimits": {
                      "settings": "custom",
                      "bandwidthLimits": {
                        "limitUp": 1000000,
                        "limitDown": 1000000
                      }
                    },
                    "dscpTagValue": null,
                    "pcpTagValue": null
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Traffic shaping"
        ]
      }
    },
    "/networks/{networkId}/trafficShaping/dscpTaggingOptions": {
      "get": {
        "summary": "Returns the available DSCP tagging options for your traffic shaping rules.",
        "description": "Returns the available DSCP tagging options for your traffic shaping rules.",
        "operationId": "getNetworkTrafficShapingDscpTaggingOptions",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "dscpTagValue": 10,
                  "description": "AF11 - High Throughput, Latency Insensitive, Low Drop"
                },
                {
                  "dscpTagValue": 12,
                  "description": "AF12 - High Throughput, Latency Insensitive, Medium Drop"
                },
                {
                  "dscpTagValue": 14,
                  "description": "AF13 - High Throughput, Latency Insensitive, High Drop"
                },
                {
                  "dscpTagValue": 18,
                  "description": "AF21 - Low Latency Data, Low Drop"
                }
              ]
            }
          }
        },
        "tags": [
          "Traffic shaping"
        ]
      }
    },
    "/networks/{networkId}/trafficShaping/applicationCategories": {
      "get": {
        "summary": "Returns the application categories for traffic shaping rules.",
        "description": "Returns the application categories for traffic shaping rules.",
        "operationId": "getNetworkTrafficShapingApplicationCategories",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "applicationCategories": [
                    {
                      "id": "meraki:layer7/category/24",
                      "name": "Advertising",
                      "applications": [
                        {
                          "id": "meraki:layer7/application/5",
                          "name": "Advertising.com"
                        },
                        {
                          "id": "meraki:layer7/application/0",
                          "name": "AppNexus"
                        },
                        {
                          "id": "meraki:layer7/application/1",
                          "name": "Brightroll"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          }
        },
        "tags": [
          "Traffic shaping"
        ]
      }
    },
    "/organizations/{organizationId}/webhookLogs": {
      "get": {
        "summary": "Return the log of webhook POSTs sent",
        "description": "Return the log of webhook POSTs sent",
        "operationId": "getOrganizationWebhookLogs",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "t0",
            "in": "query",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 90 days from today."
          },
          {
            "type": "string",
            "name": "t1",
            "in": "query",
            "description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
          },
          {
            "type": "integer",
            "name": "timespan",
            "in": "query",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
          },
          {
            "type": "integer",
            "name": "perPage",
            "in": "query",
            "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 50."
          },
          {
            "type": "string",
            "name": "startingAfter",
            "in": "query",
            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          },
          {
            "type": "string",
            "name": "endingBefore",
            "in": "query",
            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          },
          {
            "type": "string",
            "name": "url",
            "in": "query",
            "description": "The URL the webhook was sent to"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "headers": {
              "Link": {
                "type": "string",
                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
              }
            },
            "examples": {
              "application/json": [
                {
                  "organizationId": "33619",
                  "networkId": "L_22742",
                  "alertType": "Settings changed",
                  "url": "https://www.example.com/path",
                  "sentAt": "2019-01-01T13:37:28.123456Z",
                  "loggedAt": "2019-01-01T13:37:28.423456Z",
                  "responseCode": 200,
                  "responseDuration": 244
                }
              ]
            }
          }
        },
        "tags": [
          "Webhook logs"
        ]
      }
    },
    "/networks/{networkId}/contentFiltering/categories": {
      "get": {
        "summary": "List all available content filtering categories for an MX network",
        "description": "List all available content filtering categories for an MX network",
        "operationId": "getNetworkContentFilteringCategories",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "categories": [
                  {
                    "id": "meraki:contentFiltering/category/1",
                    "name": "Real Estate"
                  },
                  {
                    "id": "meraki:contentFiltering/category/3",
                    "name": "Financial Services"
                  },
                  "...",
                  {
                    "id": "meraki:contentFiltering/category/11",
                    "name": "Adult and Pornography"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Content filtering categories"
        ]
      }
    },
    "/networks/{networkId}/contentFiltering": {
      "get": {
        "summary": "Return the content filtering settings for an MX network",
        "description": "Return the content filtering settings for an MX network",
        "operationId": "getNetworkContentFiltering",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "allowedUrlPatterns": [
                  "http://www.example.org",
                  "http://help.com.au"
                ],
                "blockedUrlPatterns": [
                  "http://www.example.com",
                  "http://www.betting.com"
                ],
                "blockedUrlCategories": [
                  {
                    "id": "meraki:contentFiltering/category/1",
                    "name": "Real Estate"
                  },
                  {
                    "id": "meraki:contentFiltering/category/7",
                    "name": "Shopping"
                  }
                ],
                "urlCategoryListSize": "topSites"
              }
            }
          }
        },
        "tags": [
          "Content filtering rules"
        ]
      },
      "put": {
        "summary": "Update the content filtering settings for an MX network",
        "description": "Update the content filtering settings for an MX network",
        "operationId": "updateNetworkContentFiltering",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkContentFiltering",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "allowedUrlPatterns": {
                  "description": "A whitelist of URL patterns to allow",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "blockedUrlPatterns": {
                  "description": "A blacklist of URL patterns to block",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "blockedUrlCategories": {
                  "description": "A list of URL categories to block",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "urlCategoryListSize": {
                  "description": "URL category list size which is either 'topSites' or 'fullList'",
                  "type": "string"
                }
              },
              "example": {
                "allowedUrlPatterns": [
                  "http://www.example.org",
                  "http://help.com.au"
                ],
                "blockedUrlPatterns": [
                  "http://www.example.com",
                  "http://www.betting.com"
                ],
                "blockedUrlCategories": [
                  "meraki:contentFiltering/category/1",
                  "meraki:contentFiltering/category/7"
                ],
                "urlCategoryListSize": "topSites"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "allowedUrlPatterns": [
                  "http://www.example.org",
                  "http://help.com.au"
                ],
                "blockedUrlPatterns": [
                  "http://www.example.com",
                  "http://www.betting.com"
                ],
                "blockedUrlCategories": [
                  {
                    "id": "meraki:contentFiltering/category/1",
                    "name": "Real Estate"
                  },
                  {
                    "id": "meraki:contentFiltering/category/7",
                    "name": "Shopping"
                  }
                ],
                "urlCategoryListSize": "topSites"
              }
            }
          }
        },
        "tags": [
          "Content filtering rules"
        ]
      }
    },
    "/networks/{networkId}/firewalledServices": {
      "get": {
        "summary": "List the appliance services and their accessibility rules",
        "description": "List the appliance services and their accessibility rules",
        "operationId": "getNetworkFirewalledServices",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "service": "web",
                  "access": "restricted",
                  "allowedIps": [
                    "123.123.123.1"
                  ]
                }
              ]
            }
          }
        },
        "tags": [
          "Firewalled services"
        ]
      }
    },
    "/networks/{networkId}/firewalledServices/{service}": {
      "get": {
        "summary": "Return the accessibility settings of the given service ('ICMP', 'web', or 'SNMP')",
        "description": "Return the accessibility settings of the given service ('ICMP', 'web', or 'SNMP')",
        "operationId": "getNetworkFirewalledService",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "service",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "service": "web",
                "access": "restricted",
                "allowedIps": [
                  "123.123.123.1"
                ]
              }
            }
          }
        },
        "tags": [
          "Firewalled services"
        ]
      },
      "put": {
        "summary": "Updates the accessibility settings for the given service ('ICMP', 'web', or 'SNMP')",
        "description": "Updates the accessibility settings for the given service ('ICMP', 'web', or 'SNMP')",
        "operationId": "updateNetworkFirewalledService",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "service",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkFirewalledService",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "access": {
                  "description": "A string indicating the rule for which IPs are allowed to use the specified service. Acceptable values are \"blocked\" (no remote IPs can access the service), \"restricted\" (only whitelisted IPs can access the service), and \"unrestriced\" (any remote IP can access the service). This field is required",
                  "type": "string"
                },
                "allowedIps": {
                  "description": "An array of whitelisted IPs that can access the service. This field is required if \"access\" is set to \"restricted\". Otherwise this field is ignored",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "access": "restricted",
                "allowedIps": [
                  "123.123.123.1"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "service": "web",
                "access": "restricted",
                "allowedIps": [
                  "123.123.123.1"
                ]
              }
            }
          }
        },
        "tags": [
          "Firewalled services"
        ]
      }
    },
    "/networks/{networkId}/oneToManyNatRules": {
      "get": {
        "summary": "Return the 1:Many NAT mapping rules for an MX network",
        "description": "Return the 1:Many NAT mapping rules for an MX network",
        "operationId": "getNetworkOneToManyNatRules",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "rules": [
                  {
                    "publicIp": "146.11.11.13",
                    "uplink": "internet1",
                    "portRules": [
                      {
                        "name": "Rule 1",
                        "protocol": "tcp",
                        "publicPort": "9443",
                        "localIp": "192.168.128.1",
                        "localPort": "443",
                        "allowedIps": [
                          "any"
                        ]
                      },
                      {
                        "name": "Rule 2",
                        "protocol": "tcp",
                        "publicPort": "8080",
                        "localIp": "192.168.128.1",
                        "localPort": "80",
                        "allowedIps": [
                          "10.82.110.0/24",
                          "10.82.111.0/24"
                        ]
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "MX 1:Many NAT rules"
        ]
      },
      "put": {
        "summary": "Set the 1:Many NAT mapping rules for an MX network",
        "description": "Set the 1:Many NAT mapping rules for an MX network",
        "operationId": "updateNetworkOneToManyNatRules",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkOneToManyNatRules",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "rules": {
                  "description": "An array of 1:Many nat rules",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "publicIp": {
                        "description": "The IP address that will be used to access the internal resource from the WAN",
                        "type": "string"
                      },
                      "uplink": {
                        "description": "The physical WAN interface on which the traffic will arrive ('internet1' or, if available, 'internet2')",
                        "type": "string"
                      },
                      "portRules": {
                        "description": "An array of associated forwarding rules",
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      },
                      "name": {
                        "description": "A description of the rule",
                        "type": "string"
                      },
                      "protocol": {
                        "description": "'tcp' or 'udp'",
                        "type": "string"
                      },
                      "publicPort": {
                        "description": "Destination port of the traffic that is arriving on the WAN",
                        "type": "string"
                      },
                      "localIp": {
                        "description": "Local IP address to which traffic will be forwarded",
                        "type": "string"
                      },
                      "localPort": {
                        "description": "Destination port of the forwarded traffic that will be sent from the MX to the specified host on the LAN. If you simply wish to forward the traffic without translating the port, this should be the same as the Public port",
                        "type": "string"
                      },
                      "allowedIps": {
                        "description": "Remote IP addresses or ranges that are permitted to access the internal resource via this port forwarding rule, or 'any'",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "example": {
                "rules": [
                  {
                    "publicIp": "146.11.11.13",
                    "uplink": "internet1",
                    "portRules": [
                      {
                        "name": "Rule 1",
                        "protocol": "tcp",
                        "publicPort": "9443",
                        "localIp": "192.168.128.1",
                        "localPort": "443",
                        "allowedIps": [
                          "any"
                        ]
                      },
                      {
                        "name": "Rule 2",
                        "protocol": "tcp",
                        "publicPort": "8080",
                        "localIp": "192.168.128.1",
                        "localPort": "80",
                        "allowedIps": [
                          "10.82.110.0/24",
                          "10.82.111.0/24"
                        ]
                      }
                    ]
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "rules": [
                  {
                    "publicIp": "146.11.11.13",
                    "uplink": "internet1",
                    "portRules": [
                      {
                        "name": "Rule 1",
                        "protocol": "tcp",
                        "publicPort": "9443",
                        "localIp": "192.168.128.1",
                        "localPort": "443",
                        "allowedIps": [
                          "any"
                        ]
                      },
                      {
                        "name": "Rule 2",
                        "protocol": "tcp",
                        "publicPort": "8080",
                        "localIp": "192.168.128.1",
                        "localPort": "80",
                        "allowedIps": [
                          "10.82.110.0/24",
                          "10.82.111.0/24"
                        ]
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "MX 1:Many NAT rules"
        ]
      }
    },
    "/networks/{networkId}/oneToOneNatRules": {
      "get": {
        "summary": "Return the 1:1 NAT mapping rules for an MX network",
        "description": "Return the 1:1 NAT mapping rules for an MX network",
        "operationId": "getNetworkOneToOneNatRules",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "rules": [
                  {
                    "name": "Service behind NAT",
                    "lanIp": "192.168.128.22",
                    "publicIp": "146.12.3.33",
                    "uplink": "internet1",
                    "allowedInbound": [
                      {
                        "protocol": "tcp",
                        "destinationPorts": [
                          "80"
                        ],
                        "allowedIps": [
                          "10.82.112.0/24",
                          "10.82.0.0/16"
                        ]
                      },
                      {
                        "protocol": "udp",
                        "destinationPorts": [
                          "8080"
                        ],
                        "allowedIps": [
                          "10.81.110.5",
                          "10.81.0.0/16"
                        ]
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "MX 1:1 NAT rules"
        ]
      },
      "put": {
        "summary": "Set the 1:1 NAT mapping rules for an MX network",
        "description": "Set the 1:1 NAT mapping rules for an MX network",
        "operationId": "updateNetworkOneToOneNatRules",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkOneToOneNatRules",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "rules": {
                  "description": "An array of 1:1 nat rules",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "A descriptive name for the rule",
                        "type": "string"
                      },
                      "publicIp": {
                        "description": "The IP address that will be used to access the internal resource from the WAN",
                        "type": "string"
                      },
                      "lanIp": {
                        "description": "The IP address of the server or device that hosts the internal resource that you wish to make available on the WAN",
                        "type": "string"
                      },
                      "uplink": {
                        "description": "The physical WAN interface on which the traffic will arrive ('internet1' or, if available, 'internet2')",
                        "type": "string"
                      },
                      "allowedInbound": {
                        "description": "The ports this mapping will provide access on, and the remote IPs that will be allowed access to the resource",
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      },
                      "protocol": {
                        "description": "Either of the following: 'tcp', 'udp', 'icmp-ping' or 'any'",
                        "type": "string"
                      },
                      "destinationPorts": {
                        "description": "An array of ports or port ranges that will be forwarded to the host on the LAN",
                        "type": "string"
                      },
                      "allowedIps": {
                        "description": "An array of ranges of WAN IP addresses that are allowed to make inbound connections on the specified ports or port ranges, or 'any'",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "example": {
                "rules": [
                  {
                    "name": "Service behind NAT",
                    "lanIp": "192.168.128.22",
                    "publicIp": "146.12.3.33",
                    "uplink": "internet1",
                    "allowedInbound": [
                      {
                        "protocol": "tcp",
                        "destinationPorts": [
                          "80"
                        ],
                        "allowedIps": [
                          "10.82.112.0/24",
                          "10.82.0.0/16"
                        ]
                      },
                      {
                        "protocol": "udp",
                        "destinationPorts": [
                          "8080"
                        ],
                        "allowedIps": [
                          "10.81.110.5",
                          "10.81.0.0/16"
                        ]
                      }
                    ]
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "rules": [
                  {
                    "name": "Service behind NAT",
                    "lanIp": "192.168.128.22",
                    "publicIp": "146.12.3.33",
                    "uplink": "internet1",
                    "allowedInbound": [
                      {
                        "protocol": "tcp",
                        "destinationPorts": [
                          "80"
                        ],
                        "allowedIps": [
                          "10.82.112.0/24",
                          "10.82.0.0/16"
                        ]
                      },
                      {
                        "protocol": "udp",
                        "destinationPorts": [
                          "8080"
                        ],
                        "allowedIps": [
                          "10.81.110.5",
                          "10.81.0.0/16"
                        ]
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "MX 1:1 NAT rules"
        ]
      }
    },
    "/networks/{networkId}/portForwardingRules": {
      "get": {
        "summary": "Return the port forwarding rules for an MX network",
        "description": "Return the port forwarding rules for an MX network",
        "operationId": "getNetworkPortForwardingRules",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "rules": [
                  {
                    "lanIp": "192.168.128.1",
                    "allowedIps": [
                      "any"
                    ],
                    "name": "Description of Port Forwarding Rule",
                    "protocol": "tcp",
                    "publicPort": "8100-8101",
                    "localPort": "442-443",
                    "uplink": "both"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "MX port forwarding rules"
        ]
      },
      "put": {
        "summary": "Update the port forwarding rules for an MX network",
        "description": "Update the port forwarding rules for an MX network",
        "operationId": "updateNetworkPortForwardingRules",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkPortForwardingRules",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "rules": {
                  "description": "An array of port forwarding params",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "A descriptive name for the rule",
                        "type": "string"
                      },
                      "lanIp": {
                        "description": "The IP address of the server or device that hosts the internal resource that you wish to make available on the WAN",
                        "type": "string"
                      },
                      "uplink": {
                        "description": "The physical WAN interface on which the traffic will arrive ('internet1' or, if available, 'internet2' or 'both')",
                        "type": "string"
                      },
                      "publicPort": {
                        "description": "A port or port ranges that will be forwarded to the host on the LAN",
                        "type": "string"
                      },
                      "localPort": {
                        "description": "A port or port ranges that will receive the forwarded traffic from the WAN",
                        "type": "string"
                      },
                      "allowedIps": {
                        "description": "An array of ranges of WAN IP addresses that are allowed to make inbound connections on the specified ports or port ranges (or any)",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "protocol": {
                        "description": "TCP or UDP",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "example": {
                "rules": [
                  {
                    "lanIp": "192.168.128.1",
                    "allowedIps": [
                      "any"
                    ],
                    "name": "Description of Port Forwarding Rule",
                    "protocol": "tcp",
                    "publicPort": "8100-8101",
                    "localPort": "442-443",
                    "uplink": "both"
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "rules": [
                  {
                    "lanIp": "192.168.128.1",
                    "allowedIps": [
                      "any"
                    ],
                    "name": "Description of Port Forwarding Rule",
                    "protocol": "tcp",
                    "publicPort": "8100-8101",
                    "localPort": "442-443",
                    "uplink": "both"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "MX port forwarding rules"
        ]
      }
    },
    "/networks/{networkId}/staticRoutes": {
      "get": {
        "summary": "List the static routes for this network",
        "description": "List the static routes for this network",
        "operationId": "getNetworkStaticRoutes",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "id": "d7fa4948-7921-4dfa-af6b-ae8b16c20c39",
                  "networkId": "N_24329156",
                  "name": "My route",
                  "gatewayIp": "1.2.3.5",
                  "subnet": "192.168.1.0/24",
                  "fixedIpAssignments": "{}",
                  "reservedIpRanges": "[]",
                  "enabled": true
                }
              ]
            }
          }
        },
        "tags": [
          "Static routes"
        ]
      },
      "post": {
        "summary": "Add a static route",
        "description": "Add a static route",
        "operationId": "createNetworkStaticRoute",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "createNetworkStaticRoute",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of the new static route",
                  "type": "string"
                },
                "subnet": {
                  "description": "The subnet of the static route",
                  "type": "string"
                },
                "gatewayIp": {
                  "description": "The gateway IP (next hop) of the static route",
                  "type": "string"
                }
              },
              "example": {
                "name": "My route",
                "subnet": "192.168.1.0/24",
                "gatewayIp": "1.2.3.5"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "name": "My route",
                "subnet": "192.168.1.0/24",
                "gatewayIp": "1.2.3.5"
              }
            }
          }
        },
        "tags": [
          "Static routes"
        ]
      }
    },
    "/networks/{networkId}/staticRoutes/{srId}": {
      "get": {
        "summary": "Return a static route",
        "description": "Return a static route",
        "operationId": "getNetworkStaticRoute",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "srId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "d7fa4948-7921-4dfa-af6b-ae8b16c20c39",
                "networkId": "N_24329156",
                "name": "My route",
                "gatewayIp": "1.2.3.5",
                "subnet": "192.168.1.0/24",
                "fixedIpAssignments": "{}",
                "reservedIpRanges": "[]",
                "enabled": true
              }
            }
          }
        },
        "tags": [
          "Static routes"
        ]
      },
      "put": {
        "summary": "Update a static route",
        "description": "Update a static route",
        "operationId": "updateNetworkStaticRoute",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "srId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkStaticRoute",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of the static route",
                  "type": "string"
                },
                "subnet": {
                  "description": "The subnet of the static route",
                  "type": "string"
                },
                "gatewayIp": {
                  "description": "The gateway IP (next hop) of the static route",
                  "type": "string"
                },
                "enabled": {
                  "description": "The enabled state of the static route",
                  "type": "string"
                },
                "fixedIpAssignments": {
                  "description": "The DHCP fixed IP assignments on the static route",
                  "type": "string"
                },
                "reservedIpRanges": {
                  "description": "The DHCP reserved IP ranges on the static route",
                  "type": "string"
                }
              },
              "example": {
                "name": "My route",
                "subnet": "192.168.1.0/24",
                "fixedIpAssignments": "{}",
                "reservedIpRanges": "[]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "d7fa4948-7921-4dfa-af6b-ae8b16c20c39",
                "networkId": "N_24329156",
                "name": "My route",
                "gatewayIp": "1.2.3.5",
                "subnet": "192.168.1.0/24",
                "fixedIpAssignments": "{}",
                "reservedIpRanges": "[]",
                "enabled": true
              }
            }
          }
        },
        "tags": [
          "Static routes"
        ]
      },
      "delete": {
        "summary": "Delete a static route from a network",
        "description": "Delete a static route from a network",
        "operationId": "deleteNetworkStaticRoute",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "srId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          }
        },
        "tags": [
          "Static routes"
        ]
      }
    },
    "/networks/{networkId}/uplinkSettings": {
      "get": {
        "summary": "Returns the uplink settings for your MX network.",
        "description": "Returns the uplink settings for your MX network.",
        "operationId": "getNetworkUplinkSettings",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "bandwidthLimits": {
                  "wan1": {
                    "limitUp": 1000000,
                    "limitDown": 1000000
                  },
                  "wan2": {
                    "limitUp": 1000000,
                    "limitDown": 1000000
                  },
                  "cellular": {
                    "limitUp": 51200,
                    "limitDown": 51200
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Uplink settings"
        ]
      },
      "put": {
        "summary": "Updates the uplink settings for your MX network.",
        "description": "Updates the uplink settings for your MX network.",
        "operationId": "updateNetworkUplinkSettings",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkUplinkSettings",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "bandwidthLimits": {
                  "type": "object",
                  "properties": {
                    "limitUp": {
                      "type": "integer",
                      "description": "The maximum upload limit (integer, in Kbps). null indicates no limit"
                    },
                    "limitDown": {
                      "type": "integer",
                      "description": "The maximum download limit (integer, in Kbps). null indicates no limit"
                    }
                  },
                  "description": "A mapping of uplinks ('wan1', 'wan2' or 'cellular') to their bandwidth settings (be sure to check which uplinks are supported for your network). Bandwidth setting objects have the following structure"
                }
              },
              "example": {
                "bandwidthLimits": {
                  "wan1": {
                    "limitUp": 1000000,
                    "limitDown": 1000000
                  },
                  "wan2": {
                    "limitUp": 1000000,
                    "limitDown": 1000000
                  },
                  "cellular": {
                    "limitUp": 51200,
                    "limitDown": 51200
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "bandwidthLimits": {
                  "wan1": {
                    "limitUp": 1000000,
                    "limitDown": 1000000
                  },
                  "wan2": {
                    "limitUp": 1000000,
                    "limitDown": 1000000
                  },
                  "cellular": {
                    "limitUp": 51200,
                    "limitDown": 51200
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Uplink settings"
        ]
      }
    },
    "/networks/{networkId}/vlans": {
      "get": {
        "summary": "List the VLANs for an MX network",
        "description": "List the VLANs for an MX network",
        "operationId": "getNetworkVlans",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "id": "1234",
                  "networkId": "N_24329156",
                  "name": "My VLAN",
                  "applianceIp": "1.2.3.4",
                  "subnet": "192.168.1.0/24",
                  "fixedIpAssignments": {
                    "22:33:44:55:66:77": {
                      "ip": "1.2.3.4",
                      "name": "Some client name"
                    }
                  },
                  "reservedIpRanges": [
                    {
                      "start": "192.168.1.0",
                      "end": "192.168.1.1",
                      "comment": "A reserved IP range"
                    }
                  ],
                  "dnsNameservers": "google_dns",
                  "dhcpHandling": "Run a DHCP server",
                  "dhcpLeaseTime": "1 day",
                  "dhcpBootOptionsEnabled": false,
                  "dhcpBootNextServer": null,
                  "dhcpBootFilename": null,
                  "dhcpOptions": [
                    {
                      "code": 5,
                      "type": "text",
                      "value": "five"
                    }
                  ]
                }
              ]
            }
          }
        },
        "tags": [
          "VLANs"
        ]
      },
      "post": {
        "summary": "Add a VLAN",
        "description": "Add a VLAN",
        "operationId": "createNetworkVlan",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "createNetworkVlan",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The VLAN ID of the new VLAN (must be between 1 and 4094)"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the new VLAN"
                },
                "subnet": {
                  "type": "string",
                  "description": "The subnet of the VLAN"
                },
                "applianceIp": {
                  "type": "string",
                  "description": "The local IP of the appliance on the VLAN"
                }
              },
              "example": {
                "id": "1234",
                "name": "My VLAN",
                "subnet": "192.168.1.0/24",
                "applianceIp": "1.2.3.4"
              },
              "required": [
                "id",
                "name",
                "subnet",
                "applianceIp"
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "1234",
                "networkId": "N_24329156",
                "name": "My VLAN",
                "applianceIp": "1.2.3.4",
                "subnet": "192.168.1.0/24",
                "fixedIpAssignments": {

                },
                "reservedIpRanges": [

                ],
                "dnsNameservers": "google_dns",
                "dhcpHandling": "Run a DHCP server",
                "dhcpLeaseTime": "1 day",
                "dhcpBootOptionsEnabled": false,
                "dhcpBootNextServer": null,
                "dhcpBootFilename": null,
                "dhcpOptions": [

                ]
              }
            }
          }
        },
        "tags": [
          "VLANs"
        ]
      }
    },
    "/networks/{networkId}/vlans/{vlanId}": {
      "get": {
        "summary": "Return a VLAN",
        "description": "Return a VLAN",
        "operationId": "getNetworkVlan",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "vlanId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "1234",
                "networkId": "N_24329156",
                "name": "My VLAN",
                "applianceIp": "1.2.3.4",
                "subnet": "192.168.1.0/24",
                "fixedIpAssignments": {
                  "22:33:44:55:66:77": {
                    "ip": "1.2.3.4",
                    "name": "Some client name"
                  }
                },
                "reservedIpRanges": [
                  {
                    "start": "192.168.1.0",
                    "end": "192.168.1.1",
                    "comment": "A reserved IP range"
                  }
                ],
                "dnsNameservers": "google_dns",
                "dhcpHandling": "Run a DHCP server",
                "dhcpLeaseTime": "1 day",
                "dhcpBootOptionsEnabled": false,
                "dhcpBootNextServer": null,
                "dhcpBootFilename": null,
                "dhcpOptions": [
                  {
                    "code": 5,
                    "type": "text",
                    "value": "five"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "VLANs"
        ]
      },
      "put": {
        "summary": "Update a VLAN",
        "description": "Update a VLAN",
        "operationId": "updateNetworkVlan",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "vlanId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkVlan",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the VLAN"
                },
                "subnet": {
                  "type": "string",
                  "description": "The subnet of the VLAN"
                },
                "applianceIp": {
                  "type": "string",
                  "description": "The local IP of the appliance on the VLAN"
                },
                "vpnNatSubnet": {
                  "type": "string",
                  "description": "The translated VPN subnet if VPN and VPN subnet translation are enabled on the VLAN"
                },
                "dhcpHandling": {
                  "type": "string",
                  "description": "The appliance's handling of DHCP requests on this VLAN. One of: \"Run a DHCP server\", \"Relay DHCP to another server\", or \"Do not respond to DHCP requests\""
                },
                "dhcpRelayServerIps": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The IPs of the DHCP servers that DHCP requests should be relayed to"
                },
                "dhcpLeaseTime": {
                  "type": "string",
                  "description": "The term of DHCP leases if the appliance is running a DHCP server on this VLAN. One of: \"30 minutes\", \"1 hour\", \"4 hours\", \"12 hours\", \"1 day\", \"1 week\"."
                },
                "dhcpBootOptionsEnabled": {
                  "type": "boolean",
                  "description": "Use DHCP boot options specified in other properties"
                },
                "dhcpBootNextServer": {
                  "type": "string",
                  "description": "DHCP boot option to direct boot clients to the server to load the boot file from"
                },
                "dhcpBootFilename": {
                  "type": "string",
                  "description": "DHCP boot option for boot filename"
                },
                "fixedIpAssignments": {
                  "type": "object",
                  "properties": {

                  },
                  "description": "The DHCP fixed IP assignments on the VLAN. This should be an object that contains mappings from MAC addresses to objects that themselves each contain \"ip\" and \"name\" string fields. See the sample request/response for more details."
                },
                "reservedIpRanges": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "start": {
                        "type": "string",
                        "description": "The first IP in the reserved range"
                      },
                      "end": {
                        "type": "string",
                        "description": "The last IP in the reserved range"
                      },
                      "comment": {
                        "type": "string",
                        "description": "A text comment for the reserved range"
                      }
                    },
                    "required": [
                      "start",
                      "end",
                      "comment"
                    ]
                  },
                  "description": "The DHCP reserved IP ranges on the VLAN"
                },
                "dnsNameservers": {
                  "type": "string",
                  "description": "The DNS nameservers used for DHCP responses, either \"upstream_dns\", \"google_dns\", \"opendns\", or a newline seperated string of IP addresses or domain names"
                },
                "dhcpOptions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The code for the DHCP option. This should be an integer between 2 and 254."
                      },
                      "type": {
                        "type": "string",
                        "description": "The type for the DHCP option. One of: \"text\", \"ip\", \"hex\", or \"integer\"."
                      },
                      "value": {
                        "type": "string",
                        "description": "The value for the DHCP option"
                      }
                    },
                    "required": [
                      "code",
                      "type",
                      "value"
                    ]
                  },
                  "description": "The list of DHCP options that will be included in DHCP responses. Each object in the list should have \"code\", \"type\", and \"value\" properties."
                }
              },
              "example": {
                "name": "My VLAN",
                "applianceIp": "1.2.3.4",
                "subnet": "192.168.1.0/24",
                "fixedIpAssignments": {
                  "22:33:44:55:66:77": {
                    "ip": "1.2.3.4",
                    "name": "Some client name"
                  }
                },
                "reservedIpRanges": [
                  {
                    "start": "192.168.1.0",
                    "end": "192.168.1.1",
                    "comment": "A reserved IP range"
                  }
                ],
                "dnsNameservers": "google_dns",
                "dhcpHandling": "Run a DHCP server",
                "dhcpLeaseTime": "1 day",
                "dhcpBootOptionsEnabled": false,
                "dhcpBootNextServer": null,
                "dhcpBootFilename": null,
                "dhcpOptions": [
                  {
                    "code": 5,
                    "type": "text",
                    "value": "five"
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "1234",
                "networkId": "N_24329156",
                "name": "My VLAN",
                "applianceIp": "1.2.3.4",
                "subnet": "192.168.1.0/24",
                "fixedIpAssignments": {
                  "22:33:44:55:66:77": {
                    "ip": "1.2.3.4",
                    "name": "Some client name"
                  }
                },
                "reservedIpRanges": [
                  {
                    "start": "192.168.1.0",
                    "end": "192.168.1.1",
                    "comment": "A reserved IP range"
                  }
                ],
                "dnsNameservers": "google_dns",
                "dhcpHandling": "Run a DHCP server",
                "dhcpLeaseTime": "1 day",
                "dhcpBootOptionsEnabled": false,
                "dhcpBootNextServer": null,
                "dhcpBootFilename": null,
                "dhcpOptions": [
                  {
                    "code": 5,
                    "type": "text",
                    "value": "five"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "VLANs"
        ]
      },
      "delete": {
        "summary": "Delete a VLAN from a network",
        "description": "Delete a VLAN from a network",
        "operationId": "deleteNetworkVlan",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "vlanId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          }
        },
        "tags": [
          "VLANs"
        ]
      }
    },
    "/networks/{networkId}/vlansEnabledState": {
      "get": {
        "summary": "Returns the enabled status of VLANs for the network",
        "description": "Returns the enabled status of VLANs for the network",
        "operationId": "getNetworkVlansEnabledState",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "enabled": true,
                "networkId": "N_24329156"
              }
            }
          }
        },
        "tags": [
          "VLANs"
        ]
      },
      "put": {
        "summary": "Enable/Disable VLANs for the given network",
        "description": "Enable/Disable VLANs for the given network",
        "operationId": "updateNetworkVlansEnabledState",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkVlansEnabledState",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Boolean indicating whether to enable (true) or disable (false) VLANs for the network"
                }
              },
              "example": {
                "enabled": true
              },
              "required": [
                "enabled"
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "enabled": true,
                "networkId": "N_24329156"
              }
            }
          }
        },
        "tags": [
          "VLANs"
        ]
      }
    },
    "/networks/{networkId}/connectionStats": {
      "get": {
        "summary": "Aggregated connectivity info for this network",
        "description": "Aggregated connectivity info for this network",
        "operationId": "getNetworkConnectionStats",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "t0",
            "in": "query",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
          },
          {
            "type": "string",
            "name": "t1",
            "in": "query",
            "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
          },
          {
            "type": "integer",
            "name": "timespan",
            "in": "query",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
          },
          {
            "type": "integer",
            "name": "ssid",
            "in": "query",
            "description": "Filter results by SSID"
          },
          {
            "type": "integer",
            "name": "vlan",
            "in": "query",
            "description": "Filter results by VLAN"
          },
          {
            "type": "string",
            "name": "apTag",
            "in": "query",
            "description": "Filter results by AP Tag"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "assoc": 1,
                "auth": 5,
                "dhcp": 0,
                "dns": 0,
                "success": 51
              }
            }
          }
        },
        "tags": [
          "Wireless health"
        ]
      }
    },
    "/networks/{networkId}/devices/connectionStats": {
      "get": {
        "summary": "Aggregated connectivity info for this network, grouped by node",
        "description": "Aggregated connectivity info for this network, grouped by node",
        "operationId": "getNetworkDevicesConnectionStats",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "t0",
            "in": "query",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
          },
          {
            "type": "string",
            "name": "t1",
            "in": "query",
            "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
          },
          {
            "type": "integer",
            "name": "timespan",
            "in": "query",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
          },
          {
            "type": "integer",
            "name": "ssid",
            "in": "query",
            "description": "Filter results by SSID"
          },
          {
            "type": "integer",
            "name": "vlan",
            "in": "query",
            "description": "Filter results by VLAN"
          },
          {
            "type": "string",
            "name": "apTag",
            "in": "query",
            "description": "Filter results by AP Tag"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "serial": "Q2JC-2MJM-FHRD",
                  "connectionStats": {
                    "assoc": 0,
                    "auth": 1,
                    "dhcp": 0,
                    "dns": 0,
                    "success": 43
                  }
                },
                {
                  "serial": "Q2FJ-3SHB-Y2K2",
                  "connectionStats": {
                    "assoc": 1,
                    "auth": 4,
                    "dhcp": 0,
                    "dns": 0,
                    "success": 8
                  }
                }
              ]
            }
          }
        },
        "tags": [
          "Wireless health"
        ]
      }
    },
    "/networks/{networkId}/devices/{serial}/connectionStats": {
      "get": {
        "summary": "Aggregated connectivity info for a given AP on this network",
        "description": "Aggregated connectivity info for a given AP on this network",
        "operationId": "getNetworkDeviceConnectionStats",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "t0",
            "in": "query",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
          },
          {
            "type": "string",
            "name": "t1",
            "in": "query",
            "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
          },
          {
            "type": "integer",
            "name": "timespan",
            "in": "query",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
          },
          {
            "type": "integer",
            "name": "ssid",
            "in": "query",
            "description": "Filter results by SSID"
          },
          {
            "type": "integer",
            "name": "vlan",
            "in": "query",
            "description": "Filter results by VLAN"
          },
          {
            "type": "string",
            "name": "apTag",
            "in": "query",
            "description": "Filter results by AP Tag"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "serial": "Q2JC-2MJM-FHRD",
                "connectionStats": {
                  "assoc": 0,
                  "auth": 1,
                  "dhcp": 0,
                  "dns": 0,
                  "success": 43
                }
              }
            }
          }
        },
        "tags": [
          "Wireless health"
        ]
      }
    },
    "/networks/{networkId}/clients/connectionStats": {
      "get": {
        "summary": "Aggregated connectivity info for this network, grouped by clients",
        "description": "Aggregated connectivity info for this network, grouped by clients",
        "operationId": "getNetworkClientsConnectionStats",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "t0",
            "in": "query",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
          },
          {
            "type": "string",
            "name": "t1",
            "in": "query",
            "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
          },
          {
            "type": "integer",
            "name": "timespan",
            "in": "query",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
          },
          {
            "type": "integer",
            "name": "ssid",
            "in": "query",
            "description": "Filter results by SSID"
          },
          {
            "type": "integer",
            "name": "vlan",
            "in": "query",
            "description": "Filter results by VLAN"
          },
          {
            "type": "string",
            "name": "apTag",
            "in": "query",
            "description": "Filter results by AP Tag"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "mac": "00:61:71:c8:51:27",
                  "connectionStats": {
                    "assoc": 0,
                    "auth": 4,
                    "dhcp": 0,
                    "dns": 0,
                    "success": 10
                  }
                },
                {
                  "mac": "1c:4d:70:7f:5e:5e",
                  "connectionStats": {
                    "assoc": 0,
                    "auth": 1,
                    "dhcp": 0,
                    "dns": 0,
                    "success": 24
                  }
                },
                {
                  "mac": "1c:4d:70:81:8d:0a",
                  "connectionStats": {
                    "assoc": 1,
                    "auth": 0,
                    "dhcp": 0,
                    "dns": 0,
                    "success": 16
                  }
                }
              ]
            }
          }
        },
        "tags": [
          "Wireless health"
        ]
      }
    },
    "/networks/{networkId}/clients/{clientId}/connectionStats": {
      "get": {
        "summary": "Aggregated connectivity info for a given client on this network. Clients are identified by their MAC.",
        "description": "Aggregated connectivity info for a given client on this network. Clients are identified by their MAC.",
        "operationId": "getNetworkClientConnectionStats",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "clientId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "t0",
            "in": "query",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
          },
          {
            "type": "string",
            "name": "t1",
            "in": "query",
            "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
          },
          {
            "type": "integer",
            "name": "timespan",
            "in": "query",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
          },
          {
            "type": "integer",
            "name": "ssid",
            "in": "query",
            "description": "Filter results by SSID"
          },
          {
            "type": "integer",
            "name": "vlan",
            "in": "query",
            "description": "Filter results by VLAN"
          },
          {
            "type": "string",
            "name": "apTag",
            "in": "query",
            "description": "Filter results by AP Tag"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "mac": "00:61:71:c8:51:27",
                "connectionStats": {
                  "assoc": 0,
                  "auth": 4,
                  "dhcp": 0,
                  "dns": 0,
                  "success": 10
                }
              }
            }
          }
        },
        "tags": [
          "Wireless health"
        ]
      }
    },
    "/networks/{networkId}/latencyStats": {
      "get": {
        "summary": "Aggregated latency info for this network",
        "description": "Aggregated latency info for this network",
        "operationId": "getNetworkLatencyStats",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "t0",
            "in": "query",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
          },
          {
            "type": "string",
            "name": "t1",
            "in": "query",
            "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
          },
          {
            "type": "integer",
            "name": "timespan",
            "in": "query",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
          },
          {
            "type": "integer",
            "name": "ssid",
            "in": "query",
            "description": "Filter results by SSID"
          },
          {
            "type": "integer",
            "name": "vlan",
            "in": "query",
            "description": "Filter results by VLAN"
          },
          {
            "type": "string",
            "name": "apTag",
            "in": "query",
            "description": "Filter results by AP Tag"
          },
          {
            "type": "string",
            "name": "fields",
            "in": "query",
            "description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "backgroundTraffic": {
                  "rawDistribution": {
                    "0": 1234,
                    "1": 2345,
                    "2": 3456,
                    "4": 4567,
                    "8": 5678,
                    "16": 6789,
                    "32": 7890,
                    "64": 8901,
                    "128": 9012,
                    "256": 83,
                    "512": 1234,
                    "1024": 2345,
                    "2048": 9999
                  },
                  "avg": 606.52
                },
                "bestEffortTraffic": "same shape as backgroundTraffic",
                "videoTraffic": "same shape as backgroundTraffic",
                "voiceTraffic": "same shape as backgroundTraffic"
              }
            }
          }
        },
        "tags": [
          "Wireless health"
        ]
      }
    },
    "/networks/{networkId}/devices/latencyStats": {
      "get": {
        "summary": "Aggregated latency info for this network, grouped by node",
        "description": "Aggregated latency info for this network, grouped by node",
        "operationId": "getNetworkDevicesLatencyStats",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "t0",
            "in": "query",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
          },
          {
            "type": "string",
            "name": "t1",
            "in": "query",
            "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
          },
          {
            "type": "integer",
            "name": "timespan",
            "in": "query",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
          },
          {
            "type": "integer",
            "name": "ssid",
            "in": "query",
            "description": "Filter results by SSID"
          },
          {
            "type": "integer",
            "name": "vlan",
            "in": "query",
            "description": "Filter results by VLAN"
          },
          {
            "type": "string",
            "name": "apTag",
            "in": "query",
            "description": "Filter results by AP Tag"
          },
          {
            "type": "string",
            "name": "fields",
            "in": "query",
            "description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "serial": "Q2JC-2MJM-FHRD",
                  "latencyStats": {
                    "backgroundTraffic": {
                      "rawDistribution": {
                        "0": 1234,
                        "1": 2345,
                        "2": 3456,
                        "4": 4567,
                        "8": 5678,
                        "16": 6789,
                        "32": 7890,
                        "64": 8901,
                        "128": 9012,
                        "256": 83,
                        "512": 1234,
                        "1024": 2345,
                        "2048": 9999
                      },
                      "avg": 606.52
                    },
                    "bestEffortTraffic": "same shape as backgroundTraffic",
                    "videoTraffic": "same shape as backgroundTraffic",
                    "voiceTraffic": "same shape as backgroundTraffic"
                  }
                },
                {
                  "serial": "Q2FJ-3SHB-Y2K2",
                  "latencyStats": {
                    "backgroundTraffic": {
                      "rawDistribution": {
                        "0": 1234,
                        "1": 2345,
                        "2": 3456,
                        "4": 4567,
                        "8": 5678,
                        "16": 6789,
                        "32": 7890,
                        "64": 8901,
                        "128": 9012,
                        "256": 83,
                        "512": 1234,
                        "1024": 2345,
                        "2048": 9999
                      },
                      "avg": 606.52
                    },
                    "bestEffortTraffic": "same shape as backgroundTraffic",
                    "videoTraffic": "same shape as backgroundTraffic",
                    "voiceTraffic": "same shape as backgroundTraffic"
                  }
                }
              ]
            }
          }
        },
        "tags": [
          "Wireless health"
        ]
      }
    },
    "/networks/{networkId}/devices/{serial}/latencyStats": {
      "get": {
        "summary": "Aggregated latency info for a given AP on this network",
        "description": "Aggregated latency info for a given AP on this network",
        "operationId": "getNetworkDeviceLatencyStats",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "t0",
            "in": "query",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
          },
          {
            "type": "string",
            "name": "t1",
            "in": "query",
            "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
          },
          {
            "type": "integer",
            "name": "timespan",
            "in": "query",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
          },
          {
            "type": "integer",
            "name": "ssid",
            "in": "query",
            "description": "Filter results by SSID"
          },
          {
            "type": "integer",
            "name": "vlan",
            "in": "query",
            "description": "Filter results by VLAN"
          },
          {
            "type": "string",
            "name": "apTag",
            "in": "query",
            "description": "Filter results by AP Tag"
          },
          {
            "type": "string",
            "name": "fields",
            "in": "query",
            "description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "serial": "Q2JC-2MJM-FHRD",
                "latencyStats": {
                  "backgroundTraffic": {
                    "rawDistribution": {
                      "0": 1234,
                      "1": 2345,
                      "2": 3456,
                      "4": 4567,
                      "8": 5678,
                      "16": 6789,
                      "32": 7890,
                      "64": 8901,
                      "128": 9012,
                      "256": 83,
                      "512": 1234,
                      "1024": 2345,
                      "2048": 9999
                    },
                    "avg": 606.52
                  },
                  "bestEffortTraffic": "same shape as backgroundTraffic",
                  "videoTraffic": "same shape as backgroundTraffic",
                  "voiceTraffic": "same shape as backgroundTraffic"
                }
              }
            }
          }
        },
        "tags": [
          "Wireless health"
        ]
      }
    },
    "/networks/{networkId}/clients/latencyStats": {
      "get": {
        "summary": "Aggregated latency info for this network, grouped by clients",
        "description": "Aggregated latency info for this network, grouped by clients",
        "operationId": "getNetworkClientsLatencyStats",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "t0",
            "in": "query",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
          },
          {
            "type": "string",
            "name": "t1",
            "in": "query",
            "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
          },
          {
            "type": "integer",
            "name": "timespan",
            "in": "query",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
          },
          {
            "type": "integer",
            "name": "ssid",
            "in": "query",
            "description": "Filter results by SSID"
          },
          {
            "type": "integer",
            "name": "vlan",
            "in": "query",
            "description": "Filter results by VLAN"
          },
          {
            "type": "string",
            "name": "apTag",
            "in": "query",
            "description": "Filter results by AP Tag"
          },
          {
            "type": "string",
            "name": "fields",
            "in": "query",
            "description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "mac": "00:61:71:c8:51:27",
                  "latencyStats": {
                    "backgroundTraffic": {
                      "rawDistribution": {
                        "0": 1234,
                        "1": 2345,
                        "2": 3456,
                        "4": 4567,
                        "8": 5678,
                        "16": 6789,
                        "32": 7890,
                        "64": 8901,
                        "128": 9012,
                        "256": 83,
                        "512": 1234,
                        "1024": 2345,
                        "2048": 9999
                      },
                      "avg": 606.52
                    },
                    "bestEffortTraffic": "same shape as backgroundTraffic",
                    "videoTraffic": "same shape as backgroundTraffic",
                    "voiceTraffic": "same shape as backgroundTraffic"
                  }
                },
                {
                  "mac": "1c:4d:70:7f:5e:5e",
                  "latencyStats": {
                    "backgroundTraffic": {
                      "rawDistribution": {
                        "0": 1234,
                        "1": 2345,
                        "2": 3456,
                        "4": 4567,
                        "8": 5678,
                        "16": 6789,
                        "32": 7890,
                        "64": 8901,
                        "128": 9012,
                        "256": 83,
                        "512": 1234,
                        "1024": 2345,
                        "2048": 9999
                      },
                      "avg": 606.52
                    },
                    "bestEffortTraffic": "same shape as backgroundTraffic",
                    "videoTraffic": "same shape as backgroundTraffic",
                    "voiceTraffic": "same shape as backgroundTraffic"
                  }
                },
                {
                  "mac": "1c:4d:70:81:8d:0a",
                  "latencyStats": {
                    "backgroundTraffic": {
                      "rawDistribution": {
                        "0": 1234,
                        "1": 2345,
                        "2": 3456,
                        "4": 4567,
                        "8": 5678,
                        "16": 6789,
                        "32": 7890,
                        "64": 8901,
                        "128": 9012,
                        "256": 83,
                        "512": 1234,
                        "1024": 2345,
                        "2048": 9999
                      },
                      "avg": 606.52
                    },
                    "bestEffortTraffic": "same shape as backgroundTraffic",
                    "videoTraffic": "same shape as backgroundTraffic",
                    "voiceTraffic": "same shape as backgroundTraffic"
                  }
                }
              ]
            }
          }
        },
        "tags": [
          "Wireless health"
        ]
      }
    },
    "/networks/{networkId}/clients/{clientId}/latencyStats": {
      "get": {
        "summary": "Aggregated latency info for a given client on this network. Clients are identified by their MAC.",
        "description": "Aggregated latency info for a given client on this network. Clients are identified by their MAC.",
        "operationId": "getNetworkClientLatencyStats",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "clientId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "t0",
            "in": "query",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
          },
          {
            "type": "string",
            "name": "t1",
            "in": "query",
            "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
          },
          {
            "type": "integer",
            "name": "timespan",
            "in": "query",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
          },
          {
            "type": "integer",
            "name": "ssid",
            "in": "query",
            "description": "Filter results by SSID"
          },
          {
            "type": "integer",
            "name": "vlan",
            "in": "query",
            "description": "Filter results by VLAN"
          },
          {
            "type": "string",
            "name": "apTag",
            "in": "query",
            "description": "Filter results by AP Tag"
          },
          {
            "type": "string",
            "name": "fields",
            "in": "query",
            "description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "mac": "00:61:71:c8:51:27",
                "latencyStats": {
                  "backgroundTraffic": {
                    "rawDistribution": {
                      "0": 1234,
                      "1": 2345,
                      "2": 3456,
                      "4": 4567,
                      "8": 5678,
                      "16": 6789,
                      "32": 7890,
                      "64": 8901,
                      "128": 9012,
                      "256": 83,
                      "512": 1234,
                      "1024": 2345,
                      "2048": 9999
                    },
                    "avg": 606.52
                  },
                  "bestEffortTraffic": "same shape as backgroundTraffic",
                  "videoTraffic": "same shape as backgroundTraffic",
                  "voiceTraffic": "same shape as backgroundTraffic"
                }
              }
            }
          }
        },
        "tags": [
          "Wireless health"
        ]
      }
    },
    "/networks/{networkId}/failedConnections": {
      "get": {
        "summary": "List of all failed client connection events on this network in a given time range",
        "description": "List of all failed client connection events on this network in a given time range",
        "operationId": "getNetworkFailedConnections",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "t0",
            "in": "query",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
          },
          {
            "type": "string",
            "name": "t1",
            "in": "query",
            "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
          },
          {
            "type": "integer",
            "name": "timespan",
            "in": "query",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
          },
          {
            "type": "integer",
            "name": "ssid",
            "in": "query",
            "description": "Filter results by SSID"
          },
          {
            "type": "integer",
            "name": "vlan",
            "in": "query",
            "description": "Filter results by VLAN"
          },
          {
            "type": "string",
            "name": "apTag",
            "in": "query",
            "description": "Filter results by AP Tag"
          },
          {
            "type": "string",
            "name": "serial",
            "in": "query",
            "description": "Filter by AP"
          },
          {
            "type": "string",
            "name": "clientId",
            "in": "query",
            "description": "Filter by client MAC"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "ssidNumber": 0,
                  "vlan": -1,
                  "clientMac": "00:61:71:c8:51:27",
                  "serial": "Q2JC-2MJM-FHRD",
                  "failureStep": "auth",
                  "type": "802.1X auth fail",
                  "ts": 1532032592
                },
                {
                  "ssidNumber": 0,
                  "vlan": -1,
                  "clientMac": "00:61:71:c8:51:27",
                  "nodeId": "Q2FJ-3SHB-Y2K2",
                  "failureStep": "auth",
                  "type": "802.1X auth fail",
                  "ts": 1532032593
                },
                {
                  "ssidNumber": 0,
                  "vlan": -1,
                  "clientMac": "00:61:71:c8:51:27",
                  "nodeId": "Q2FJ-3SHB-Y2K2",
                  "failureStep": "auth",
                  "type": "802.1X auth fail",
                  "ts": 1532032594
                },
                {
                  "ssidNumber": 0,
                  "vlan": -1,
                  "clientMac": "00:61:71:c8:51:27",
                  "nodeId": "Q2FJ-3SHB-Y2K2",
                  "failureStep": "auth",
                  "type": "802.1X auth fail",
                  "ts": 1532032595
                },
                {
                  "ssidNumber": 0,
                  "vlan": -1,
                  "clientMac": "1c:4d:70:7f:5e:5e",
                  "nodeId": "Q2FJ-3SHB-Y2K2",
                  "failureStep": "assoc",
                  "type": "802.1X auth fail",
                  "ts": 1532032592
                },
                {
                  "ssidNumber": 0,
                  "vlan": -1,
                  "clientMac": "1c:4d:70:81:8d:0a",
                  "nodeId": "Q2FJ-3SHB-Y2K2",
                  "failureStep": "auth",
                  "type": "802.1X auth fail",
                  "ts": 1532032595
                }
              ]
            }
          }
        },
        "tags": [
          "Wireless health"
        ]
      }
    }
  }
}
